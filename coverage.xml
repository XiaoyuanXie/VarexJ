<?xml version="1.0" encoding="UTF-8" standalone="no"?>
	<root base="0" type="Interaction: ">
		<File name="AbstractCollection.java">
			<coverage>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="450"/>
				<line interaction="9" text="next (True)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(891))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(457))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {i:785 ; !i:776 }&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:0 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; !i:786 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; !i:784 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; !i:782 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; !i:783 ; !a &amp; !b &amp; !c &amp; d &amp; !i:780 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; !i:781 ; !a &amp; b &amp; !i:778 ; !a &amp; !b &amp; c &amp; !i:779 ; i:776 ; a &amp; !i:777 }" this="457"/>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="458"/>
			</coverage>
		</File>
		<File name="AbstractList.java">
			<coverage>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="299"/>
			</coverage>
		</File>
		<File name="AbstractSequentialList.java">
			<coverage>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="239"/>
			</coverage>
		</File>
		<File name="AbstractSpecification.aj">
			<coverage>
				<line interaction="-1" text="errorFound (!executivefloor &amp; !overloaded)&#10;Specifications.AbstractSpecification.failure(LTestSpecifications/SpecificationException;)V(One(31))&#10;Specifications.Specification_ExecutiveFloor.ajc$after$Specifications_Specification_ExecutiveFloor$1$f51a68b7(LElevatorSystem/Elevator;)V(One(21))&#10;ElevatorSystem.Elevator.timeShift()V(One(261))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!overloaded:0 ; overloaded:1 }&#10;-&gt;&#10;1: One(1)" this="31"/>
			</coverage>
		</File>
		<File name="Account.java">
			<coverage>
				<line interaction="1" text="OVERDRAFT_LIMIT (True)&#10;BankAccountLong.Account.&lt;init&gt;()V(One(3))&#10;BankAccountLong.Application.&lt;init&gt;()V(One(5))&#10;BankAccountLong.Main.&lt;init&gt;()V(One(24))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft:0 ; overdraft:-2000 }" this="3"/>
				<line interaction="1" text="newBalance (overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccountFloat.Account.update__wrappee__BankAccount(F)Z(One(25))&#10;BankAccountFloat.Account.update__wrappee__DailyLimit(F)Z(One(51))&#10;BankAccountFloat.Account.update(F)Z(One(71))&#10;BankAccountFloat.Transaction.transfer__wrappee__Transaction(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({overdraft &amp; logging &amp; transaction &amp; transactionlog:31 })&#10;BankAccountFloat.Transaction.transfer(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({transaction &amp; transactionlog:61 })&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [1153712128]  ; interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [1153720320]  }" this="25"/>
				<line interaction="2" text="balance (overdraft &amp; transaction &amp; !transactionlog &amp; !dailylimit)&#10;BankAccountFloat.Account.update__wrappee__BankAccount(F)Z(One(28))&#10;BankAccountFloat.Account.update__wrappee__DailyLimit(F)Z(One(42))&#10;BankAccountFloat.Account.update(F)Z(One(70))&#10;BankAccountFloat.Transaction.transfer__wrappee__Transaction(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({overdraft &amp; transaction &amp; !transactionlog:31 })&#10;BankAccountFloat.Transaction.transfer(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({transaction &amp; !transactionlog:60 })&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4: {!interest &amp; !transaction:1137180672 ; !interest &amp; transaction:1141800960 ; interest &amp; !transaction:1137213440 ; interest &amp; transaction:1141817344 }&#10;-&gt;&#10;6: {!interest &amp; !transaction:1137180672 ; !interest &amp; overdraft &amp; transaction &amp; !transactionlog &amp; !dailylimit:1153712128 ; interest &amp; overdraft &amp; transaction &amp; !transactionlog &amp; !dailylimit:1153720320 ; !interest &amp; !overdraft &amp; transaction | !interest &amp; overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit | !interest &amp; overdraft &amp; transaction &amp; transactionlog:1141800960 ; interest &amp; !transaction:1137213440 ; interest &amp; !overdraft &amp; transaction | interest &amp; overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit | interest &amp; overdraft &amp; transaction &amp; transactionlog:1141817344 }" this="28"/>
				<line interaction="-1" text="balance (interest &amp; logging &amp; dailylimit)&#10;BankAccountDouble.Account.update__wrappee__BankAccount(D)Z(One(31))&#10;BankAccountDouble.Account.update__wrappee__DailyLimit(D)Z(One(57))&#10;BankAccountDouble.Account.update(D)Z({interest &amp; logging:81 })&#10;BankAccountDouble.Main.&lt;init&gt;()V({interest:49 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {interest &amp; !logging | interest &amp; logging &amp; !dailylimit:4645762082795421696 ; !interest | interest &amp; logging &amp; dailylimit:4645744490609377280 }&#10;-&gt;&#10;1: One(4645762082795421696)" this="31"/>
				<line interaction="1" text="ret (overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit):&#10;BankAccountLong.Account.update__wrappee__DailyLimit(J)Z(One(42))&#10;BankAccountLong.Account.update(J)Z(One(71))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({overdraft &amp; logging &amp; transaction &amp; transactionlog:31 })&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({transaction &amp; transactionlog:61 })&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }" this="42"/>
				<line interaction="1" text="newWithdraw (transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccount.Account.update__wrappee__DailyLimit(I)Z(One(43))&#10;BankAccount.Account.update(I)Z(One(69))&#10;BankAccount.Transaction.transfer__wrappee__Transaction(LBankAccount/Account;LBankAccount/Account;I)Z(One(19))&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z({transaction &amp; transactionlog:48 })&#10;BankAccount.Main.&lt;init&gt;()V({transaction:70 })&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!transaction | transaction &amp; !transactionlog | transaction &amp; transactionlog &amp; !dailylimit: [0]  ; transaction &amp; transactionlog &amp; dailylimit: [-30]  }" this="43"/>
				<line interaction="1" text="newWithdraw (overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccountLong.Account.update__wrappee__DailyLimit(J)Z(One(45))&#10;BankAccountLong.Account.update(J)Z(One(71))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({overdraft &amp; logging &amp; transaction &amp; transactionlog:31 })&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({transaction &amp; transactionlog:61 })&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }" this="45"/>
				<line interaction="1" text="ret (logging &amp; transaction &amp; transactionlog &amp; !dailylimit):&#10;BankAccountDouble.Account.update__wrappee__DailyLimit(D)Z(One(46))&#10;BankAccountDouble.Account.update(D)Z(One(81))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(24))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z({!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog:61 })&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }" this="46"/>
				<line interaction="1" text="newWithdraw (transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccountLong.Account.update__wrappee__DailyLimit(J)Z(One(47))&#10;BankAccountLong.Account.update(J)Z(One(71))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(24))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({transaction &amp; transactionlog:61 })&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!overdraft | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog | overdraft &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }&#10; -&gt; &#10;3 : {!overdraft &amp; !transaction | !overdraft &amp; transaction &amp; !transactionlog | !overdraft &amp; transaction &amp; transactionlog &amp; !dailylimit | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog: [0]  ; overdraft &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  ; transaction &amp; transactionlog &amp; dailylimit: [-1]  }" this="47"/>
				<line interaction="1" text="newWithdraw (transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccountDouble.Account.update__wrappee__DailyLimit(D)Z(One(50))&#10;BankAccountDouble.Account.update(D)Z(One(81))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(24))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z({!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog:61 })&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }" this="50"/>
				<line interaction="1" text="withdraw (overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit)&#10;BankAccount.Account.update__wrappee__DailyLimit(I)Z(One(51))&#10;BankAccount.Account.update(I)Z(One(68))&#10;BankAccount.Transaction.transfer__wrappee__Transaction(LBankAccount/Account;LBankAccount/Account;I)Z(One(19))&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z({transaction &amp; !transactionlog:47 })&#10;BankAccount.Main.&lt;init&gt;()V({transaction:85 })&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog &amp; !dailylimit | overdraft &amp; transaction &amp; transactionlog:0 ; overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit:-1000 }" this="51"/>
				<line interaction="1" text="newWithdraw (transaction &amp; transactionlog &amp; dailylimit):&#10;BankAccountDouble.Account.update__wrappee__DailyLimit(D)Z(One(52))&#10;BankAccountDouble.Account.update(D)Z(One(81))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(24))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z({!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog:61 })&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  }&#10; -&gt; &#10;3 : {!overdraft &amp; !transaction  | ...: [0]  ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1]  ; transaction &amp; transactionlog &amp; dailylimit: [-1064353792]  }" this="52"/>
				<line interaction="1" text="withdraw (overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit)&#10;BankAccountFloat.Account.update__wrappee__DailyLimit(F)Z(One(53))&#10;BankAccountFloat.Account.update(F)Z(One(70))&#10;BankAccountFloat.Transaction.transfer__wrappee__Transaction(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z(One(24))&#10;BankAccountFloat.Transaction.transfer(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({transaction &amp; !transactionlog:60 })&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog &amp; !dailylimit | overdraft &amp; transaction &amp; transactionlog:0 ; overdraft &amp; transaction &amp; !transactionlog &amp; dailylimit:-998637568 }" this="53"/>
				<line interaction="2" text="updateCounter (overdraft &amp; transaction &amp; transactionlog)&#10;BankAccount.Account.update(I)Z(One(70))&#10;BankAccount.Transaction.transfer__wrappee__Transaction(LBankAccount/Account;LBankAccount/Account;I)Z(One(22))&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z(One(48))&#10;BankAccount.Main.&lt;init&gt;()V(One(85))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5: Choice(transaction &amp; transactionlog, Choice(interest &amp; logging &amp; transaction &amp; transactionlog, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0))))&#10;-&gt;&#10;7: Choice(overdraft &amp; transaction &amp; transactionlog, Choice(interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog, One(5), One(4)), Choice(transaction &amp; transactionlog, Choice(interest &amp; logging &amp; transaction &amp; transactionlog, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0)))))" this="70"/>
				<line interaction="2" text="updateCounter (overdraft &amp; transaction &amp; transactionlog)&#10;BankAccountLong.Account.update(J)Z(One(72))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(31))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(61))&#10;BankAccountLong.Main.&lt;init&gt;()V(One(82))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5: Choice(transaction &amp; transactionlog, Choice(interest &amp; logging &amp; transaction &amp; transactionlog, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0))))&#10;-&gt;&#10;7: Choice(overdraft &amp; transaction &amp; transactionlog, Choice(interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog, One(5), One(4)), Choice(transaction &amp; transactionlog, Choice(interest &amp; logging &amp; transaction &amp; transactionlog, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0)))))" this="72"/>
				<line interaction="2" text="updateCounter (overdraft &amp; transaction &amp; transactionlog &amp; !dailylimit)&#10;BankAccountDouble.Account.update(D)Z(One(83))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(31))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z(One(61))&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(82))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5: Choice(transaction &amp; transactionlog &amp; !dailylimit, Choice(interest &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0))))&#10;-&gt;&#10;7: Choice(overdraft &amp; transaction &amp; transactionlog &amp; !dailylimit, Choice(interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit, One(5), One(4)), Choice(transaction &amp; transactionlog &amp; !dailylimit, Choice(interest &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit, One(4), One(3)), Choice(interest &amp; logging, One(2), Choice(logging, One(1), One(0)))))" this="83"/>
				<line interaction="1" text="balance (!logging &amp; !dailylimit)&#10;BankAccount.Account.undoUpdate__wrappee__BankAccount(I)Z(One(87))&#10;BankAccount.Account.undoUpdate__wrappee__DailyLimit(I)Z(One(100))&#10;BankAccount.Account.undoUpdate(I)Z({!logging:125 })&#10;BankAccount.Main.&lt;init&gt;()V(One(31))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(100)&#10;-&gt;&#10;2: {!logging &amp; !dailylimit:0 ; !logging &amp; dailylimit | logging:100 }" this="87"/>
				<line interaction="1" text="balance (!logging &amp; !dailylimit)&#10;BankAccountFloat.Account.undoUpdate__wrappee__BankAccount(F)Z(One(89))&#10;BankAccountFloat.Account.undoUpdate__wrappee__DailyLimit(F)Z(One(102))&#10;BankAccountFloat.Account.undoUpdate(F)Z({!logging:127 })&#10;BankAccountFloat.Main.&lt;init&gt;()V(One(28))&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1120403456)&#10;-&gt;&#10;2: {!logging &amp; !dailylimit:0 ; !logging &amp; dailylimit | logging:1120403456 }" this="89"/>
				<line interaction="-1" text="balance (logging &amp; dailylimit)&#10;BankAccountDouble.Account.undoUpdate__wrappee__BankAccount(D)Z(One(101))&#10;BankAccountDouble.Account.undoUpdate__wrappee__DailyLimit(D)Z(One(121))&#10;BankAccountDouble.Account.undoUpdate(D)Z({logging:140 })&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(28))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!logging | logging &amp; !dailylimit:0 ; logging &amp; dailylimit:4636737291354636288 }&#10;-&gt;&#10;1: One(0)" this="101"/>
				<line interaction="1" text="undoUpdateCounter (logging)&#10;BankAccount.Account.undoUpdate(I)Z(One(127))&#10;BankAccount.Main.&lt;init&gt;()V(One(31))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!logging:0 ; logging:1 }" this="127"/>
				<line interaction="1" text="undoUpdateCounter (logging)&#10;BankAccountLong.Account.undoUpdate(J)Z(One(129))&#10;BankAccountLong.Main.&lt;init&gt;()V(One(28))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!logging:0 ; logging:1 }" this="129"/>
				<line interaction="1" text="undoUpdateCounter (logging)&#10;BankAccountDouble.Account.undoUpdate(D)Z(One(141))&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(28))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!logging:0 ; logging:1 }" this="141"/>
				<line interaction="1" text="lock (transaction &amp; transactionlog)&#10;BankAccount.Account.lock()V(One(183))&#10;BankAccount.Transaction.lock(LBankAccount/Account;LBankAccount/Account;)Z(One(67))&#10;BankAccount.Transaction.transfer__wrappee__Transaction(LBankAccount/Account;LBankAccount/Account;I)Z(One(14))&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z(One(48))&#10;BankAccount.Main.&lt;init&gt;()V({transaction:85 })&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transaction | transaction &amp; !transactionlog:0 ; transaction &amp; transactionlog:1 }" this="183"/>
				<line interaction="1" text="lock (transaction &amp; transactionlog)&#10;BankAccountLong.Account.lock()V(One(185))&#10;BankAccountLong.Transaction.lock(LBankAccountLong/Account;LBankAccountLong/Account;)Z(One(84))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(17))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(61))&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transaction | transaction &amp; !transactionlog:0 ; transaction &amp; transactionlog:1 }" this="185"/>
				<line interaction="-1" text="lock (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccount.Account.unLock()V(One(192))&#10;BankAccount.Transaction.transfer__wrappee__Transaction(LBankAccount/Account;LBankAccount/Account;I)Z(One(29))&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z({transaction &amp; transactionlog:48 })&#10;BankAccount.Main.&lt;init&gt;()V({transaction:85 })&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!overdraft | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; transaction &amp; transactionlog:1 }&#10;-&gt;&#10;1: One(0)" this="192"/>
				<line interaction="-1" text="lock (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccountLong.Account.unLock()V(One(194))&#10;BankAccountLong.Transaction.transfer__wrappee__Transaction(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(40))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z({transaction &amp; transactionlog:61 })&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!overdraft | overdraft &amp; !transaction | overdraft &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; transaction &amp; transactionlog:1 }&#10;-&gt;&#10;1: One(0)" this="194"/>
				<line interaction="1" text="lock (!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog)&#10;BankAccountDouble.Account.lock()V(One(197))&#10;BankAccountDouble.Transaction.lock(LBankAccountDouble/Account;LBankAccountDouble/Account;)Z(One(84))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(17))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z(One(61))&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!logging &amp; !transaction | !logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction | logging &amp; transaction &amp; !transactionlog:0 ; !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog:1 }" this="197"/>
				<line interaction="-1" text="lock (overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit)&#10;BankAccountDouble.Account.unLock()V(One(206))&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(40))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z({!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog:61 })&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; dailylimit:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit:1 }&#10;-&gt;&#10;1: One(0)" this="206"/>
			</coverage>
		</File>
		<File name="Actions.java">
			<coverage>
				<line interaction="-1" text="executedUnimplementedAction (!action3_1 &amp; action4_1 &amp; !stopCommand)&#10;MinePumpSystem.Actions.stopSystem__before__stopCommand()V(One(23))&#10;MinePumpSystem.Actions.stopSystem()V(One(34))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1 &amp; action4_1:166 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!action3_1 &amp; !action4_1 | !action3_1 &amp; action4_1 &amp; stopCommand | action3_1 &amp; startCommand:0 ; !action3_1 &amp; action4_1 &amp; !stopCommand | action3_1 &amp; !startCommand:1 }&#10;-&gt;&#10;1: One(1)" this="23"/>
				<line interaction="-1" text="executedUnimplementedAction (action3_1 &amp; !startCommand)&#10;MinePumpSystem.Actions.startSystem__before__startCommand()V(One(39))&#10;MinePumpSystem.Actions.startSystem()V(One(50))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!action3_1 &amp; !action4_1 | !action3_1 &amp; action4_1 &amp; stopCommand | action3_1 &amp; startCommand:0 ; !action3_1 &amp; action4_1 &amp; !stopCommand | action3_1 &amp; !startCommand:1 }&#10;-&gt;&#10;1: One(1)" this="39"/>
				<line interaction="1" text="? (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm):&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!action1_1  | ...: [0]  ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm: &lt;875&gt;  }" this="55"/>
			</coverage>
		</File>
		<File name="Adler32.java">
			<coverage>
				<line interaction="1" text="checksum (!GZIP &amp; Adler32Checksum)&#10;net.sf.zipme.Adler32.reset()V(One(54))&#10;net.sf.zipme.Adler32.&lt;init&gt;()V(One(47))&#10;net.sf.zipme.Inflater.hook32__role__Adler32Checksum()V(One(623))&#10;net.sf.zipme.Inflater.hook32()V(One(629))&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(117))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; Adler32Checksum, One(1), One(0))" this="54"/>
			</coverage>
		</File>
		<File name="Application.java">
			<coverage>
				<line interaction="-1" text="withdraw (interest &amp; transaction &amp; dailylimit)&#10;BankAccountLong.Application.nextDay__wrappee__DailyLimit()V(One(25))&#10;BankAccountLong.Application.nextDay()V({interest &amp; transaction:40 })&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:78 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!interest | interest &amp; !transaction | interest &amp; transaction &amp; !dailylimit:0 ; interest &amp; transaction &amp; dailylimit:-170 }&#10;-&gt;&#10;1: One(0)" this="25"/>
				<line interaction="1" text="interest (interest &amp; transaction)&#10;BankAccountFloat.Application.nextDay()V(One(41))&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:78 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!interest:0 ; interest:1010011386 }&#10;-&gt;&#10;3: {!interest:0 ; interest &amp; transaction:1011835276 ; interest &amp; !transaction:1010011386 }" this="41"/>
			</coverage>
		</File>
		<File name="ArrayList.java">
			<coverage>
				<line interaction="1" text="elementData (STRONGLYCONNECTED___)&#10;java.util.ArrayList.&lt;init&gt;()V(One(152))&#10;GPL.Vertex.VertexConstructor()V(One(67))&#10;GPL.Vertex.&lt;init&gt;()V(One(21))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(191))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2003 }" this="152"/>
				<line interaction="2" text="elementData (twothirdsfull &amp; !overloaded)&#10;java.util.ArrayList.&lt;init&gt;(Ljava/util/Collection;)V(One(164))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(213))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: {!twothirdsfull | twothirdsfull &amp; overloaded:0 ; weight &amp; twothirdsfull &amp; !executivefloor &amp; !overloaded:891 ; weight &amp; twothirdsfull &amp; executivefloor &amp; !overloaded:892 }" this="164"/>
				<line interaction="2" text="size (twothirdsfull &amp; !overloaded)&#10;java.util.ArrayList.&lt;init&gt;(Ljava/util/Collection;)V(One(165))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(213))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: {!twothirdsfull | twothirdsfull &amp; overloaded:0 ; weight &amp; twothirdsfull &amp; !executivefloor &amp; !overloaded:1 ; weight &amp; twothirdsfull &amp; executivefloor &amp; !overloaded:2 }" this="165"/>
				<line interaction="1" text="elementData (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2003 }&#10;-&gt;&#10;3: {!STRONGLYCONNECTED___:0 ; !WEIGHTED___ &amp; STRONGLYCONNECTED___:2003 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10154 }" this="208"/>
				<line interaction="1" text="modCount (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(212))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEIGHTED___ | WEIGHTED___ &amp; !STRONGLYCONNECTED___:0 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:1 }" this="212"/>
				<line interaction="1" text="elementData (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2003 }&#10;-&gt;&#10;3: {!STRONGLYCONNECTED___:0 ; !WEIGHTED___ &amp; STRONGLYCONNECTED___:2003 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10154 }" this="216"/>
				<line interaction="1" text="? (True):&#10;java.util.ArrayList.grow(I)V(One(235))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.addWeight(I)V(One(45))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(66))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___: [0]  ; UNDIRECTED___: [10]  }" this="235"/>
				<line interaction="1" text="? (True):&#10;java.util.ArrayList.grow(I)V(One(236))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.addWeight(I)V(One(45))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(66))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___: [0]  ; UNDIRECTED___: [15]  }" this="236"/>
				<line interaction="1" text="elementData (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2003 }&#10;-&gt;&#10;3: {!STRONGLYCONNECTED___:0 ; !WEIGHTED___ &amp; STRONGLYCONNECTED___:2003 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10154 }" this="242"/>
				<line interaction="1" text="? (twothirdsfull &amp; !overloaded):&#10;java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;(One(2245))&#10;java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;(One(2219))&#10;java.util.ArrayList.toArray()[Ljava/lang/Object;(One(358))&#10;java.util.ArrayList.&lt;init&gt;(Ljava/util/Collection;)V(One(164))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(213))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {weight &amp; twothirdsfull &amp; !executivefloor &amp; !overloaded: &lt;891&gt;  ; weight &amp; twothirdsfull &amp; executivefloor &amp; !overloaded: &lt;892&gt;  }" this="358"/>
				<line interaction="1" text="elementData (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2003 }&#10;-&gt;&#10;3: {!STRONGLYCONNECTED___:0 ; !WEIGHTED___ &amp; STRONGLYCONNECTED___:2003 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10154 }" this="440"/>
				<line interaction="1" text="size (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEIGHTED___ | WEIGHTED___ &amp; !STRONGLYCONNECTED___:0 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:1 }" this="441"/>
				<line interaction="1" text="modCount (weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.fastRemove(I)V(One(523))&#10;java.util.ArrayList.remove(Ljava/lang/Object;)Z(One(511))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(127))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 }&#10;-&gt;&#10;4: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; !empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 ; weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:4 }" this="511"/>
				<line interaction="1" text="modCount (weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.fastRemove(I)V(One(523))&#10;java.util.ArrayList.remove(Ljava/lang/Object;)Z(One(511))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(127))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 }&#10;-&gt;&#10;4: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; !empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 ; weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:4 }" this="523"/>
				<line interaction="1" text="? (weight &amp; !empty &amp; twothirdsfull &amp; !overloaded):&#10;java.util.ArrayList.fastRemove(I)V(One(524))&#10;java.util.ArrayList.remove(Ljava/lang/Object;)Z(One(511))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(127))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z(One(172))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({weight &amp; twothirdsfull &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!weight | weight &amp; !empty &amp; !twothirdsfull | weight &amp; !empty &amp; twothirdsfull &amp; !executivefloor | weight &amp; !empty &amp; twothirdsfull &amp; executivefloor &amp; overloaded | weight &amp; empty: [0]  ; weight &amp; !empty &amp; twothirdsfull &amp; executivefloor &amp; !overloaded: [1]  }" this="524"/>
				<line interaction="1" text="size (weight &amp; empty &amp; !executivefloor &amp; !overloaded)&#10;java.util.ArrayList.fastRemove(I)V(One(528))&#10;java.util.ArrayList.remove(Ljava/lang/Object;)Z(One(511))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(127))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {weight &amp; empty &amp; !executivefloor &amp; !overloaded:0 ; !weight | weight &amp; !empty | weight &amp; empty &amp; !executivefloor &amp; overloaded | weight &amp; empty &amp; executivefloor:1 }" this="528"/>
				<line interaction="1" text="modCount (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.clear()V(One(536))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(54))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(218))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:0 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:1 }" this="536"/>
				<line interaction="1" text="size (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.clear()V(One(542))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(54))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(218))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {!twothirdsfull &amp; executivefloor &amp; !overloaded:0 ; !twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:1 }" this="542"/>
				<line interaction="1" text="lastRet (addressbook &amp; verify &amp; !decrypt)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(822))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(567))&#10;EmailSystem.Client.incoming__role__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(90))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(100))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(133))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; verify &amp; !decrypt, One(-1), One(0))" this="814"/>
				<line interaction="1" text="lastRet (addressbook &amp; verify &amp; !decrypt)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(822))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(567))&#10;EmailSystem.Client.incoming__role__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(90))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(100))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(133))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; verify &amp; !decrypt, One(-1), One(0))" this="820"/>
				<line interaction="1" text="lastRet (addressbook &amp; verify &amp; !decrypt)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(822))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(567))&#10;EmailSystem.Client.incoming__role__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(90))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(100))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(133))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; verify &amp; !decrypt, One(-1), One(0))" this="822"/>
				<line interaction="1" text="expectedModCount (encrypt &amp; addressbook &amp; !sign)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(823))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.outgoing__role__encrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(164))&#10;EmailSystem.Client.outgoing__before__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(183))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(206))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(243))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; addressbook &amp; !sign, One(1), One(0))" this="823"/>
				<line interaction="1" text="? (twothirdsfull &amp; !overloaded):&#10;java.util.ArrayList$Itr.next()Ljava/lang/Object;(One(835))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(213))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {weight &amp; twothirdsfull &amp; !executivefloor &amp; !overloaded: &lt;891&gt;  ; weight &amp; twothirdsfull &amp; executivefloor &amp; !overloaded: &lt;892&gt;  }" this="835"/>
				<line interaction="1" text="cursor (encrypt &amp; addressbook &amp; !sign)&#10;java.util.ArrayList$Itr.next()Ljava/lang/Object;(One(838))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.outgoing__role__encrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(164))&#10;EmailSystem.Client.outgoing__before__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(183))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(206))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(243))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; addressbook &amp; !sign, One(1), One(0))" this="838"/>
				<line interaction="1" text="lastRet (!addressbook &amp; forward &amp; !verify &amp; decrypt)&#10;java.util.ArrayList$Itr.next()Ljava/lang/Object;(One(839))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.outgoing__role__encrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(164))&#10;EmailSystem.Client.outgoing__before__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(183))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(222))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(243))&#10;EmailSystem.Client.forward(LEmailSystem/Client;LEmailSystem/Email;)V(One(558))&#10;EmailSystem.Client.incoming__role__forward(LEmailSystem/Client;LEmailSystem/Email;)V(One(69))&#10;EmailSystem.Client.incoming__before__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(79))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(102))&#10;EmailSystem.Client.incoming__role__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(124))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(131))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToRjh()V(One(150))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(39))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!addressbook &amp; forward &amp; !verify &amp; decrypt, One(1), One(0))" this="839"/>
			</coverage>
		</File>
		<File name="Arrays.java">
			<coverage>
				<line interaction="1" text="stackSize (STRONGLYCONNECTED___)&#10;java.util.TimSort.pushRun(II)V(One(388))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(213))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="659"/>
				<line interaction="1" text="? (True):&#10;java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;(One(2245))&#10;java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;(One(2219))&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.addWeight(I)V(One(45))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(66))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___: &lt;4765&gt;  ; !UNDIRECTED___: &lt;4764&gt;  }" this="2219"/>
				<line interaction="1" text="? (True):&#10;java.util.Arrays.copyOf([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;(One(2245))&#10;java.util.Arrays.copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;(One(2219))&#10;java.util.ArrayList.grow(I)V(One(242))&#10;java.util.ArrayList.ensureExplicitCapacity(I)V(One(216))&#10;java.util.ArrayList.ensureCapacityInternal(I)V(One(208))&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(440))&#10;GPL.Vertex.addWeight(I)V(One(45))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(66))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___: &lt;4765&gt;  ; !UNDIRECTED___: &lt;4764&gt;  }" this="2245"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="2271"/>
				<line interaction="1" text="? (True):&#10;java.util.Arrays.toString([C)Ljava/lang/String;(One(3403))&#10;cmu.VariabilityAwareTest.testGetChars()V(One(804))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a: [9]  ; a: [10]  }" this="3403"/>
				<line interaction="1" text="? (a):&#10;java.util.Arrays.toString([C)Ljava/lang/String;(One(3409))&#10;cmu.VariabilityAwareTest.testGetChars()V(One(804))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [9] )&#10; -&gt; &#10;2 : {!a: [9]  ; a: [10]  }" this="3409"/>
			</coverage>
		</File>
		<File name="BaseCalendar.java">
			<coverage>
				<line interaction="1" text="zoneinfo (!GZIP)&#10;sun.util.calendar.CalendarDate.&lt;init&gt;(Ljava/util/TimeZone;)V(One(94))&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(149))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1096), One(0))" this="149"/>
				<line interaction="1" text="cachedYear (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(165))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2004), One(0))" this="165"/>
				<line interaction="-1" text="cachedFixedDateJan1 (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.setCache(IJI)V(One(187))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(437))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(731581), One(0))&#10;-&gt;&#10;1: One(735599)" this="187"/>
				<line interaction="-1" text="cachedFixedDateNextJan1 (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.setCache(IJI)V(One(188))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(437))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(731947), One(0))&#10;-&gt;&#10;1: One(735964)" this="188"/>
				<line interaction="-1" text="cachedFixedDateNextJan1 (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.setCache(IJI)V(One(188))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(437))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(731947), One(0))&#10;-&gt;&#10;1: One(735964)" this="437"/>
				<line interaction="1" text="year (!GZIP)&#10;sun.util.calendar.CalendarDate.setYear(I)Lsun/util/calendar/CalendarDate;(One(128))&#10;sun.util.calendar.Gregorian$Date.setNormalizedYear(I)V(One(53))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(461))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2015), One(0))" this="461"/>
				<line interaction="1" text="month (!GZIP)&#10;sun.util.calendar.CalendarDate.setMonth(I)Lsun/util/calendar/CalendarDate;(One(171))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(462))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="462"/>
				<line interaction="1" text="dayOfMonth (!GZIP)&#10;sun.util.calendar.CalendarDate.setDayOfMonth(I)Lsun/util/calendar/CalendarDate;(One(191))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(463))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(22), One(0))" this="463"/>
				<line interaction="1" text="normalized (!GZIP)&#10;sun.util.calendar.CalendarDate.setNormalized(Z)V(One(487))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(466))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="466"/>
			</coverage>
		</File>
		<File name="BrokenClock.java">
			<coverage>
				<line interaction="1" text="_time (!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK)&#10;org.prevayler.implementation.clock.BrokenClock.&lt;init&gt;(Ljava/util/Date;)V(One(23))&#10;org.prevayler.implementation.clock.BrokenClock.&lt;init&gt;()V(One(19))&#10;org.prevayler.implementation.clock.MachineClock.&lt;init&gt;()V(One(11))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(244))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1746), One(0))" this="23"/>
				<line interaction="1" text="newMillis (True):&#10;org.prevayler.implementation.clock.BrokenClock.advanceTo(Ljava/util/Date;)V(One(30))&#10;org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V(One(31))&#10;org.prevayler.implementation.publishing.CentralPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK, One( [334] ), One( [0] ))" this="30"/>
				<line interaction="-2" text="_millis (!USE_BROKEN_CLOCK)&#10;org.prevayler.implementation.clock.BrokenClock.advanceTo(Ljava/util/Date;)V(One(32))&#10;org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V(One(31))&#10;org.prevayler.implementation.clock.PausableClock.pause()V(One(26))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(44))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4: Choice(!USE_BROKEN_CLOCK, Choice(!USE_BROKEN_CLOCK, One(1434964333499), One(445256635)), Choice(!USE_BROKEN_CLOCK, One(1434519076864), One(0)))&#10;-&gt;&#10;2: Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1434964333601), One(1434964333600))" this="32"/>
				<line interaction="2" text="_time (!USE_BROKEN_CLOCK)&#10;org.prevayler.implementation.clock.BrokenClock.advanceTo(Ljava/util/Date;)V(One(33))&#10;org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V(One(31))&#10;org.prevayler.implementation.clock.PausableClock.pause()V(One(26))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(44))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1868)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK, Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(2640), One(2641)), One(1868))" this="33"/>
			</coverage>
		</File>
		<File name="ByteArrayOutputStream.java">
			<coverage>
				<line interaction="1" text="buf (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.&lt;init&gt;(I)V(One(77))&#10;java.io.ByteArrayOutputStream.&lt;init&gt;()V(One(62))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(41))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56921), One(0))" this="62"/>
				<line interaction="1" text="buf (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.&lt;init&gt;(I)V(One(77))&#10;java.io.ByteArrayOutputStream.&lt;init&gt;()V(One(62))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(41))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56921), One(0))" this="77"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="93"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.io.ByteArrayOutputStream.grow(I)V(One(104))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [128] ), One( [64] ))" this="104"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.io.ByteArrayOutputStream.grow(I)V(One(105))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [128] ), One( [256] ))" this="105"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.io.ByteArrayOutputStream.grow(I)V(One(107))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [128] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [155] ), One( [143] ))" this="107"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="113"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="140"/>
				<line interaction="1" text="count (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.write([BII)V(One(142))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(44))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(51), One(0))&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(64), One(52)), One(0))" this="142"/>
				<line interaction="-2" text="count (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.reset()V(One(166))&#10;org.prevayler.foundation.DurableOutputStream.waitUntilSynced(I)V(One(149))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(78))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(147), One(159)), One(0))&#10;-&gt;&#10;1: One(0)" this="166"/>
			</coverage>
		</File>
		<File name="ByteArrayTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.ByteArrayTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.ByteArrayTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="13"/>
				<line interaction="1" text="array (a):&#10;cmu.datatypes.ByteArrayTest.byteArrayTest2()V(One(37))&#10;cmu.datatypes.ByteArrayTest.[byteArrayTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;608&gt; )&#10; -&gt; &#10;2 : Choice(a, One( &lt;609&gt; ), One( &lt;608&gt; ))" this="37"/>
			</coverage>
		</File>
		<File name="CRC32.java">
			<coverage>
				<line interaction="-1" text="crc (!GZIP &amp; DerivativeExtractCRC)&#10;net.sf.zipme.CRC32.reset()V(One(58))&#10;net.sf.zipme.ZipInputStream.hook39__role__DerivativeExtractCRC()V(One(374))&#10;net.sf.zipme.ZipInputStream.hook39()V(One(380))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(293))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; DerivativeExtractCRC, One(-1451030495), One(0))&#10;-&gt;&#10;1: One(0)" this="58"/>
				<line interaction="1" text="crc (GZIP)&#10;net.sf.zipme.CRC32.update(I)V(One(69))&#10;net.sf.zipme.GZIPInputStream.hook2__role__DerivativeGZIPCRC(I)V(One(233))&#10;net.sf.zipme.GZIPInputStream.hook2(I)V(One(239))&#10;net.sf.zipme.GZIPInputStream.readHeader()V(One(142))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;I)V(One(79))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(64))&#10;net.sf.zipme.ZipTest.getZipInStream__role__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(58))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1594548856), One(0))" this="69"/>
				<line interaction="1" text="crc (GZIP)&#10;net.sf.zipme.CRC32.update([BII)V(One(83))&#10;net.sf.zipme.GZIPInputStream.hook30__role__DerivativeGZIPCRC([BII)V(One(301))&#10;net.sf.zipme.GZIPInputStream.hook30([BII)V(One(307))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(123))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(-1451030495), One(0))" this="83"/>
			</coverage>
		</File>
		<File name="Calendar.java">
			<coverage>
				<line interaction="1" text="lenient (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(810))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="810"/>
				<line interaction="1" text="nextStamp (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(875))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2), One(0))" this="875"/>
				<line interaction="1" text="serialVersionOnStream (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(907))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="907"/>
				<line interaction="1" text="fields (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(951))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1797), One(0))" this="951"/>
				<line interaction="1" text="isSet (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(952))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1798), One(0))" this="952"/>
				<line interaction="1" text="stamp (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(953))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1799), One(0))" this="953"/>
				<line interaction="1" text="zone (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(955))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1096), One(0))" this="955"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1013"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1030"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1106"/>
				<line interaction="-1" text="time (!GZIP)&#10;java.util.Calendar.setTimeInMillis(J)V(One(1137))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {GZIP:0 ; !GZIP:1434964236147 }&#10;-&gt;&#10;1: One(1434964236069)" this="1137"/>
				<line interaction="1" text="isTimeSet (!GZIP)&#10;java.util.Calendar.setTimeInMillis(J)V(One(1138))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1138"/>
				<line interaction="-1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setTimeInMillis(J)V(One(1139))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1), One(0))&#10;-&gt;&#10;1: One(0)" this="1139"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1140"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="1617"/>
			</coverage>
		</File>
		<File name="CalendarDate.java">
			<coverage>
				<line interaction="1" text="dayOfWeek (!GZIP)&#10;sun.util.calendar.CalendarDate.&lt;init&gt;(Ljava/util/TimeZone;)V(One(71))&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(149))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(-2147483648), One(0))" this="71"/>
				<line interaction="1" text="zoneinfo (!GZIP)&#10;sun.util.calendar.CalendarDate.&lt;init&gt;(Ljava/util/TimeZone;)V(One(94))&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(149))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1096), One(0))" this="94"/>
				<line interaction="1" text="year (!GZIP)&#10;sun.util.calendar.CalendarDate.setYear(I)Lsun/util/calendar/CalendarDate;(One(128))&#10;sun.util.calendar.Gregorian$Date.setNormalizedYear(I)V(One(53))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(461))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2015), One(0))" this="128"/>
				<line interaction="1" text="month (!GZIP)&#10;sun.util.calendar.CalendarDate.setMonth(I)Lsun/util/calendar/CalendarDate;(One(171))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(462))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="171"/>
				<line interaction="1" text="dayOfMonth (!GZIP)&#10;sun.util.calendar.CalendarDate.setDayOfMonth(I)Lsun/util/calendar/CalendarDate;(One(191))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(463))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(22), One(0))" this="191"/>
				<line interaction="1" text="normalized (!GZIP)&#10;sun.util.calendar.CalendarDate.setNormalized(Z)V(One(487))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(466))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="487"/>
			</coverage>
		</File>
		<File name="CentralPublisher.java">
			<coverage>
				<line interaction="1" text="_journal (True)&#10;org.prevayler.implementation.publishing.CentralPublisher.&lt;init&gt;(Lorg/prevayler/Clock;Lorg/prevayler/implementation/publishing/censorship/TransactionCensor;Lorg/prevayler/implementation/journal/Journal;)V(One(38))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(1858), One(1865))" this="38"/>
			</coverage>
		</File>
		<File name="Character.java">
			<coverage>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="4439"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.lang.Character.codePointAt(Ljava/lang/CharSequence;I)I(One(4668))&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3693))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4125))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; USE_TRANSIENT_MODE | USE_BROKEN_CLOCK, One( [48] ), One( [49] ))" this="4668"/>
			</coverage>
		</File>
		<File name="Chunk.java">
			<coverage>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(242))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="12"/>
				<line interaction="1" text="_bytes (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([BLjava/util/Map;)V(One(16))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56890), One(0))" this="16"/>
				<line interaction="1" text="_parameters (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([BLjava/util/Map;)V(One(17))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56928), One(0))" this="17"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="25"/>
			</coverage>
		</File>
		<File name="Chunking.java">
			<coverage>
				<line interaction="3" text="text (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(220))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53889), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53893))), One(0))" this="25"/>
				<line interaction="1" text="count (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.write([BII)V(One(142))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(29))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(2), One(0))" this="29"/>
				<line interaction="1" text="expectedModCount (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(375))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(3), One(0))" this="30"/>
				<line interaction="1" text="lastReturned (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.nextEntry()Ljava/util/LinkedHashMap$Entry;(One(398))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/util/Map$Entry;(One(413))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/lang/Object;(One(412))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(32))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56931), One(0))" this="32"/>
				<line interaction="2" text="value (!USE_TRANSIENT_MODE):&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(34))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;53886&gt; )&#10; -&gt; &#10;3 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;53893&gt; ), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;53891&gt; ), One( &lt;53889&gt; )))" this="34"/>
				<line interaction="1" text="count (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.write([BII)V(One(142))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(44))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(51), One(0))&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(64), One(52)), One(0))" this="44"/>
				<line interaction="1" text="buf (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(46))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(56962), One(0))&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(56973), Choice(!USE_TRANSIENT_MODE, One(56962), One(0)))" this="46"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="47"/>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(48))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;4481&gt; ), One( &lt;4482&gt; ))" this="48"/>
			</coverage>
		</File>
		<File name="Client.java">
			<coverage>
				<line interaction="1" text="privateKey (keys)&#10;EmailSystem.Client.setPrivateKey(I)V(One(346))&#10;EmailSystem.Test_Actions.setup_chuck__role__keys(LEmailSystem/Client;)V(One(360))&#10;EmailSystem.Test_Actions.setup_chuck(LEmailSystem/Client;)V(One(365))&#10;EmailSystem.Test_Actions.setup()V(One(339))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(keys, One(789), One(0))" this="346"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Client.addKeyringEntry(LEmailSystem/Client;I)V(One(367))&#10;EmailSystem.Test_Actions.bobKeyAdd__role__keys()V(One(41))&#10;EmailSystem.Test_Actions.bobKeyAdd()V(One(50))&#10;EmailSystem.Scenario.test()V(One(7))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(keys, One(1), One(0))" this="367"/>
				<line interaction="1" text="lastRet (addressbook &amp; verify &amp; !decrypt)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(822))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;EmailSystem.Client.getKeyringPublicKeyByClient(LEmailSystem/Client;)I(One(377))&#10;EmailSystem.Client.verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(567))&#10;EmailSystem.Client.incoming__role__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(90))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(100))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(133))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; verify &amp; !decrypt, One(-1), One(0))" this="377"/>
				<line interaction="1" text="keyOwner (keys)&#10;EmailSystem.Client$KeyringEntry.&lt;init&gt;(LEmailSystem/Client;I)V(One(408))&#10;EmailSystem.Client.addKeyringEntry(LEmailSystem/Client;I)V(One(367))&#10;EmailSystem.Test_Actions.bobKeyAdd__role__keys()V(One(41))&#10;EmailSystem.Test_Actions.bobKeyAdd()V(One(50))&#10;EmailSystem.Scenario.test()V(One(7))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(keys, One(804), One(0))" this="408"/>
				<line interaction="1" text="publicKey (keys)&#10;EmailSystem.Client$KeyringEntry.&lt;init&gt;(LEmailSystem/Client;I)V(One(409))&#10;EmailSystem.Client.addKeyringEntry(LEmailSystem/Client;I)V(One(367))&#10;EmailSystem.Test_Actions.bobKeyAdd__role__keys()V(One(41))&#10;EmailSystem.Test_Actions.bobKeyAdd()V(One(50))&#10;EmailSystem.Scenario.test()V(One(7))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(keys, One(456), One(0))" this="409"/>
				<line interaction="1" text="autoResponse (autoresponder)&#10;EmailSystem.Client.setAutoResponse(Z)V(One(432))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond__role__autoresponder()V(One(307))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond()V(One(312))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(37))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(autoresponder, One(1), One(0))" this="432"/>
				<line interaction="1" text="cursor (addressbook &amp; !sign)&#10;java.util.ArrayList$Itr.next()Ljava/lang/Object;(One(838))&#10;EmailSystem.Client.getAddressBookReceiversForAlias(Ljava/lang/String;)Ljava/util/List;(One(463))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(195))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(243))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(202))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(243))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; !sign, One(1), One(0))" this="463"/>
				<line interaction="1" text="cursor (addressbook)&#10;java.util.ArrayList$Itr.next()Ljava/lang/Object;(One(838))&#10;EmailSystem.Client.addAddressbookEntry(Ljava/lang/String;Ljava/lang/String;)V(One(478))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(110))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(1), One(0))" this="478"/>
				<line interaction="1" text="size (addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Client.addAddressbookEntry(Ljava/lang/String;Ljava/lang/String;)V(One(486))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(109))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(1), One(0))" this="486"/>
				<line interaction="1" text="alias (addressbook)&#10;EmailSystem.Client$AddressBookEntry.&lt;init&gt;(Ljava/lang/String;)V(One(502))&#10;EmailSystem.Client.addAddressbookEntry(Ljava/lang/String;Ljava/lang/String;)V(One(484))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(109))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(837), One(0))" this="502"/>
				<line interaction="1" text="receivers (addressbook)&#10;EmailSystem.Client$AddressBookEntry.&lt;init&gt;(Ljava/lang/String;)V(One(503))&#10;EmailSystem.Client.addAddressbookEntry(Ljava/lang/String;Ljava/lang/String;)V(One(484))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(109))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(850), One(0))" this="503"/>
				<line interaction="1" text="size (addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Client$AddressBookEntry.addReceiver(Ljava/lang/String;)V(One(509))&#10;EmailSystem.Client.addAddressbookEntry(Ljava/lang/String;Ljava/lang/String;)V(One(485))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(109))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(1), One(0))" this="509"/>
				<line interaction="1" text="forwardReceiver (forward)&#10;EmailSystem.Client.setForwardReceiver(LEmailSystem/Client;)V(One(544))&#10;EmailSystem.Test_Actions.rjhEnableForwarding__role__forward()V(One(214))&#10;EmailSystem.Test_Actions.rjhEnableForwarding()V(One(219))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(33))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(forward, One(812), One(0))" this="544"/>
			</coverage>
		</File>
		<File name="Collections.java">
			<coverage>
				<line interaction="1" text="stackSize (STRONGLYCONNECTED___)&#10;java.util.TimSort.pushRun(II)V(One(388))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(213))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="217"/>
				<line interaction="1" text="next (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(877))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(218))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2015 }" this="218"/>
				<line interaction="1" text="nextIndex (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(892))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(220))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="220"/>
				<line interaction="1" text="item (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.set(Ljava/lang/Object;)V(One(937))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(221))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2352)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:2352 ; STRONGLYCONNECTED___:2280 }" this="221"/>
			</coverage>
		</File>
		<File name="CycleWorkSpace.java">
			<coverage>
				<line interaction="1" text="VertexCycle (CYCLE___)&#10;GPL.CycleWorkSpace.init_vertex(LGPL/Vertex;)V(One(25))&#10;GPL.Vertex.init_vertex(LGPL/WorkSpace;)V(One(77))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(100))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(626))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!CYCLE___:0 ; CYCLE___:2147483647 }" this="25"/>
				<line interaction="1" text="counter (!UNDIRECTED___ &amp; CYCLE___)&#10;GPL.CycleWorkSpace.preVisitAction(LGPL/Vertex;)V(One(35))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(136))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V({CYCLE___:626 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!CYCLE___:0 ; CYCLE___:1 }&#10;-&gt;&#10;3: {!CYCLE___:0 ; UNDIRECTED___ &amp; CYCLE___:1 ; !UNDIRECTED___ &amp; CYCLE___:2 }" this="35"/>
				<line interaction="1" text="VertexColor (!UNDIRECTED___ &amp; CYCLE___)&#10;GPL.CycleWorkSpace.preVisitAction(LGPL/Vertex;)V(One(36))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(136))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V({CYCLE___:626 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!UNDIRECTED___ | UNDIRECTED___ &amp; !CYCLE___:0 ; UNDIRECTED___ &amp; CYCLE___:2 }&#10;-&gt;&#10;3: {!CYCLE___:0 ; !UNDIRECTED___ &amp; CYCLE___:1 ; UNDIRECTED___ &amp; CYCLE___:2 }" this="36"/>
				<line interaction="-1" text="VertexColor (!UNDIRECTED___ &amp; CYCLE___)&#10;GPL.CycleWorkSpace.postVisitAction(LGPL/Vertex;)V(One(44))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(157))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V({CYCLE___:626 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!CYCLE___:0 ; !UNDIRECTED___ &amp; CYCLE___:1 ; UNDIRECTED___ &amp; CYCLE___:2 }&#10;-&gt;&#10;2: {!CYCLE___:0 ; CYCLE___:2 }" this="44"/>
				<line interaction="-1" text="counter (CYCLE___)&#10;GPL.CycleWorkSpace.postVisitAction(LGPL/Vertex;)V(One(45))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(157))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(626))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!CYCLE___:0 ; CYCLE___:1 }&#10;-&gt;&#10;1: One(0)" this="45"/>
				<line interaction="1" text="AnyCycles (!UNDIRECTED___ &amp; CYCLE___)&#10;GPL.CycleWorkSpace.checkNeighborAction(LGPL/Vertex;LGPL/Vertex;)V(One(60))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(150))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V({CYCLE___:626 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___ &amp; !CYCLE___ | UNDIRECTED___:0 ; !UNDIRECTED___ &amp; CYCLE___:1 }" this="60"/>
				<line interaction="1" text="AnyCycles (UNDIRECTED___ &amp; CYCLE___)&#10;GPL.CycleWorkSpace.checkNeighborAction(LGPL/Vertex;LGPL/Vertex;)V(One(68))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(150))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.CycleCheck()Z(One(231))&#10;GPL.Graph.run(LGPL/Vertex;)V({CYCLE___:626 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___ | UNDIRECTED___ &amp; !CYCLE___:0 ; UNDIRECTED___ &amp; CYCLE___:1 }" this="68"/>
			</coverage>
		</File>
		<File name="Date.java">
			<coverage>
				<line interaction="2" text="fastTime (True)&#10;java.util.Date.&lt;init&gt;(J)V(One(176))&#10;org.prevayler.implementation.TransactionTimestamp.executionTime()Ljava/util/Date;(One(39))&#10;org.prevayler.implementation.PrevalentSystemGuard.receive(Lorg/prevayler/implementation/TransactionTimestamp;)V(One(56))&#10;org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V(One(42))&#10;org.prevayler.implementation.publishing.CentralPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionGuide;)V(One(87))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK, Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1434964341718), One(1434964341734)), One(0))" this="176"/>
			</coverage>
		</File>
		<File name="Deflater.java">
			<coverage>
				<line interaction="1" text="pending (!GZIP)&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(139))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1058), One(0))" this="139"/>
				<line interaction="1" text="noHeader (!GZIP)&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(141))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="141"/>
				<line interaction="1" text="state (!GZIP)&#10;net.sf.zipme.Deflater.reset__before__Compress()V(One(152))&#10;net.sf.zipme.Deflater.reset__role__Compress()V(One(163))&#10;net.sf.zipme.Deflater.reset()V(One(174))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(143))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(16), One(0))" this="152"/>
				<line interaction="1" text="engine (!GZIP)&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1060), One(0))" this="248"/>
				<line interaction="1" text="level (!GZIP)&#10;net.sf.zipme.Deflater.setLevel(I)V(One(371))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="371"/>
			</coverage>
		</File>
		<File name="DeflaterEngine.java">
			<coverage>
				<line interaction="1" text="pending (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(87))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1058), One(0))" this="87"/>
				<line interaction="1" text="huffman (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1061), One(0))" this="88"/>
				<line interaction="1" text="window (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(90))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1074), One(0))" this="90"/>
				<line interaction="1" text="head (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(91))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1075), One(0))" this="91"/>
				<line interaction="1" text="prev (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(92))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1076), One(0))" this="92"/>
				<line interaction="1" text="blockStart (!GZIP)&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(93))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="93"/>
				<line interaction="1" text="matchLen (!GZIP)&#10;net.sf.zipme.DeflaterEngine.reset()V(One(103))&#10;net.sf.zipme.Deflater.reset__role__Compress()V(One(164))&#10;net.sf.zipme.Deflater.reset()V(One(174))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(143))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2), One(0))" this="103"/>
				<line interaction="1" text="goodLength (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setLevel(I)V(One(122))&#10;net.sf.zipme.Deflater.setLevel(I)V(One(372))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(8), One(0))" this="122"/>
				<line interaction="1" text="max_lazy (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setLevel(I)V(One(123))&#10;net.sf.zipme.Deflater.setLevel(I)V(One(372))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(16), One(0))" this="123"/>
				<line interaction="1" text="niceLength (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setLevel(I)V(One(124))&#10;net.sf.zipme.Deflater.setLevel(I)V(One(372))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(128), One(0))" this="124"/>
				<line interaction="1" text="max_chain (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setLevel(I)V(One(125))&#10;net.sf.zipme.Deflater.setLevel(I)V(One(372))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(128), One(0))" this="125"/>
				<line interaction="1" text="comprFunc (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setLevel(I)V(One(154))&#10;net.sf.zipme.Deflater.setLevel(I)V(One(372))&#10;net.sf.zipme.Deflater.hook24__role__Compress(I)V(One(233))&#10;net.sf.zipme.Deflater.hook24(I)V(One(239))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(142))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2), One(0))" this="154"/>
				<line interaction="1" text="ins_h (!GZIP)&#10;net.sf.zipme.DeflaterEngine.updateHash()V(One(161))&#10;net.sf.zipme.DeflaterEngine.fillWindow()V(One(216))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(433))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.deflate()V(One(71))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(151))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2341), One(0))" this="161"/>
				<line interaction="1" text="inputOff (!GZIP)&#10;net.sf.zipme.DeflaterEngine.fillWindow()V(One(211))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(433))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.deflate()V(One(71))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(151))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="211"/>
				<line interaction="1" text="lookahead (!GZIP)&#10;net.sf.zipme.DeflaterEngine.fillWindow()V(One(213))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(433))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.deflate()V(One(71))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(151))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="213"/>
				<line interaction="1" text="matchStart (!GZIP)&#10;net.sf.zipme.DeflaterEngine.findLongestMatch(I)Z(One(257))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(385))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.deflate()V(One(71))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(151))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="257"/>
				<line interaction="-1" text="prevAvailable (!GZIP)&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(371))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1), One(0))&#10;-&gt;&#10;1: One(0)" this="371"/>
				<line interaction="-1" text="prevAvailable (!GZIP)&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(408))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1), One(0))&#10;-&gt;&#10;1: One(0)" this="408"/>
				<line interaction="1" text="prevAvailable (!GZIP)&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(413))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="413"/>
				<line interaction="-1" text="lookahead (!GZIP)&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(415))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1), One(0))&#10;-&gt;&#10;1: One(0)" this="415"/>
				<line interaction="1" text="inputBuf (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setInput([BII)V(One(460))&#10;net.sf.zipme.Deflater.setInput([BII)V(One(354))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(150))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2146), One(0))" this="460"/>
				<line interaction="1" text="inputEnd (!GZIP)&#10;net.sf.zipme.DeflaterEngine.setInput([BII)V(One(462))&#10;net.sf.zipme.Deflater.setInput([BII)V(One(354))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(150))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="462"/>
				<line interaction="1" text="adler (!GZIP &amp; DerivativeCompressAdler32Checksum)&#10;net.sf.zipme.DeflaterEngine.hook26__role__DerivativeCompressAdler32Checksum()V(One(472))&#10;net.sf.zipme.DeflaterEngine.hook26()V(One(478))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(89))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; DerivativeCompressAdler32Checksum, One(1073), One(0))" this="472"/>
			</coverage>
		</File>
		<File name="DeflaterHuffman.java">
			<coverage>
				<line interaction="1" text="this$0 (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.&lt;init&gt;(Lnet/sf/zipme/DeflaterHuffman;III)V(One(57))&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1061), One(0))" this="57"/>
				<line interaction="1" text="minNumCodes (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.&lt;init&gt;(Lnet/sf/zipme/DeflaterHuffman;III)V(One(58))&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="58"/>
				<line interaction="1" text="maxLength (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.&lt;init&gt;(Lnet/sf/zipme/DeflaterHuffman;III)V(One(59))&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(7), One(0))" this="59"/>
				<line interaction="1" text="freqs (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.&lt;init&gt;(Lnet/sf/zipme/DeflaterHuffman;III)V(One(60))&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1069), One(0))" this="60"/>
				<line interaction="1" text="bl_counts (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.&lt;init&gt;(Lnet/sf/zipme/DeflaterHuffman;III)V(One(61))&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1070), One(0))" this="61"/>
				<line interaction="-1" text="codes (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.reset()V(One(67))&#10;net.sf.zipme.DeflaterHuffman.reset()V(One(412))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(528))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(746), One(0))&#10;-&gt;&#10;1: One(0)" this="67"/>
				<line interaction="-1" text="length (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.reset()V(One(68))&#10;net.sf.zipme.DeflaterHuffman.reset()V(One(413))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(528))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(2191), One(0))&#10;-&gt;&#10;1: One(0)" this="68"/>
				<line interaction="1" text="codes (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.setStaticCodes([S[B)V(One(91))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(526))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(746), One(0))" this="91"/>
				<line interaction="1" text="codes (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.buildCodes()V(One(98))&#10;net.sf.zipme.DeflaterHuffman.sendAllTrees(I)V(One(439))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(531))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2570), One(0))" this="98"/>
				<line interaction="1" text="length (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.buildLength([I)V(One(121))&#10;net.sf.zipme.DeflaterHuffman$Tree.buildTree()V(One(250))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(504))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2191), One(0))" this="121"/>
				<line interaction="1" text="numCodes (!GZIP)&#10;net.sf.zipme.DeflaterHuffman$Tree.buildTree()V(One(201))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(504))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(19), One(0))" this="201"/>
				<line interaction="1" text="pending (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(400))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1058), One(0))" this="400"/>
				<line interaction="1" text="literalTree (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(401))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1062), One(0))" this="401"/>
				<line interaction="1" text="distTree (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(402))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1065), One(0))" this="402"/>
				<line interaction="1" text="blTree (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(403))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1068), One(0))" this="403"/>
				<line interaction="1" text="d_buf (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(404))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1071), One(0))" this="404"/>
				<line interaction="1" text="l_buf (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(405))&#10;net.sf.zipme.DeflaterEngine.&lt;init&gt;(Lnet/sf/zipme/DeflaterPending;)V(One(88))&#10;net.sf.zipme.Deflater.hook25__role__Compress()V(One(248))&#10;net.sf.zipme.Deflater.hook25()V(One(254))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(140))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1072), One(0))" this="405"/>
				<line interaction="-1" text="last_lit (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.reset()V(One(409))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(528))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(4), One(0))&#10;-&gt;&#10;1: One(0)" this="409"/>
				<line interaction="-1" text="extra_bits (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.reset()V(One(410))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(533))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1187), One(0))&#10;-&gt;&#10;1: One(0)" this="410"/>
				<line interaction="1" text="last_lit (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.tallyLit(I)Z(One(549))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(412))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="549"/>
				<line interaction="1" text="extra_bits (!GZIP)&#10;net.sf.zipme.DeflaterHuffman.tallyDist(II)Z(One(566))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(398))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.deflate()V(One(71))&#10;net.sf.zipme.DeflaterOutputStream.write([BII)V(One(151))&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(251))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="566"/>
			</coverage>
		</File>
		<File name="DeflaterOutputStream.java">
			<coverage>
				<line interaction="1" text="out (!GZIP)&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;I)V(One(58))&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;)V(One(45))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(706), One(0))" this="58"/>
				<line interaction="1" text="buf (!GZIP)&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;I)V(One(61))&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;)V(One(45))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1077), One(0))" this="61"/>
				<line interaction="1" text="def (!GZIP)&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;I)V(One(62))&#10;net.sf.zipme.DeflaterOutputStream.&lt;init&gt;(Ljava/io/OutputStream;Lnet/sf/zipme/Deflater;)V(One(45))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1057), One(0))" this="62"/>
			</coverage>
		</File>
		<File name="Deflater_deflate2.java">
			<coverage>
				<line interaction="1" text="_this (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.&lt;init&gt;(Lnet/sf/zipme/Deflater;[BII)V(One(8))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1057), One(0))" this="8"/>
				<line interaction="1" text="output (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.&lt;init&gt;(Lnet/sf/zipme/Deflater;[BII)V(One(9))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1077), One(0))" this="9"/>
				<line interaction="1" text="length (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.&lt;init&gt;(Lnet/sf/zipme/Deflater;[BII)V(One(11))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4096), One(0))" this="11"/>
				<line interaction="1" text="origLength (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(15))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4096), One(0))" this="15"/>
				<line interaction="1" text="count (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(34))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="34"/>
				<line interaction="1" text="offset (!GZIP)&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(35))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="35"/>
			</coverage>
		</File>
		<File name="DoubleTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(14))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="14"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(16))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="16"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(18))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="18"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(20))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="20"/>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(23))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="23"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="25"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.DoubleTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.DoubleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="27"/>
				<line interaction="1" text="i (z):&#10;cmu.datatypes.DoubleTest.testFloat()V(One(36))&#10;cmu.datatypes.DoubleTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1076494336] )&#10; -&gt; &#10;2 : Choice(z, One( [1073741824] ), One( [1076494336] ))" this="36"/>
				<line interaction="1" text="j (y):&#10;cmu.datatypes.DoubleTest.testFloat()V(One(39))&#10;cmu.datatypes.DoubleTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1078067200] )&#10; -&gt; &#10;2 : Choice(y, One( [1074790400] ), One( [1078067200] ))" this="39"/>
				<line interaction="3" text="k (True):&#10;cmu.datatypes.DoubleTest.testFloat()V(One(43))&#10;cmu.datatypes.DoubleTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;4 : Choice(!y &amp; z, One( [1078132736] ), Choice(y &amp; z, One( [1075314688] ), Choice(!y &amp; !z, One( [1078493184] ), One( [1076953088] ))))" this="43"/>
				<line interaction="3" text="? (True):&#10;cmu.datatypes.DoubleTest.testFloat()V(One(47))&#10;cmu.datatypes.DoubleTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;Choice(!y &amp; z, One( [1068265927] ), Choice(!y &amp; !z, One( [1071062129] ), Choice(y &amp; z, One( [1071644672] ), One( [1074397184] ))))" this="47"/>
				<line interaction="1" text="? (True):&#10;cmu.datatypes.DoubleTest.testDoubleReturn()V(One(54))&#10;cmu.datatypes.DoubleTest.[testDoubleReturn](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(c, One( [1072693248] ), One( [0] ))" this="54"/>
				<line interaction="1" text="d (!c):&#10;cmu.datatypes.DoubleTest.method()D(One(62))&#10;cmu.datatypes.DoubleTest.testDoubleReturn()V(One(54))&#10;cmu.datatypes.DoubleTest.[testDoubleReturn](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!c, One( [1072693248] ), One( [0] ))" this="62"/>
			</coverage>
		</File>
		<File name="DurableOutputStream.java">
			<coverage>
				<line interaction="1" text="_writeLock (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(22))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56916), One(0))" this="22"/>
				<line interaction="1" text="_syncLock (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(23))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56917), One(0))" this="23"/>
				<line interaction="1" text="_active (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(38))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56918), One(0))" this="38"/>
				<line interaction="1" text="_inactive (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(41))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56920), One(0))" this="41"/>
				<line interaction="1" text="_file (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(56))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56901), One(0))" this="56"/>
				<line interaction="1" text="_fileOutputStream (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56922), One(0))" this="57"/>
				<line interaction="1" text="_fileDescriptor (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(58))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56925), One(0))" this="58"/>
				<line interaction="1" text="_journalDiskSync (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(59))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE &amp; !USE_JOURNAL_DISK_SYNC | USE_TRANSIENT_MODE, One(0), One(1))" this="59"/>
				<line interaction="1" text="_objectsWritten (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(94))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="94"/>
				<line interaction="-2" text="count (!USE_TRANSIENT_MODE)&#10;java.io.ByteArrayOutputStream.reset()V(One(166))&#10;org.prevayler.foundation.DurableOutputStream.waitUntilSynced(I)V(One(149))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(78))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(147), One(159)), One(0))&#10;-&gt;&#10;1: One(0)" this="149"/>
				<line interaction="1" text="_objectsSynced (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.waitUntilSynced(I)V(One(160))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(78))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="160"/>
				<line interaction="1" text="_fileSyncCount (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.waitUntilSynced(I)V(One(161))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(78))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="161"/>
				<line interaction="1" text="_closed (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.internalClose()V(One(181))&#10;org.prevayler.foundation.DurableOutputStream.close()V(One(173))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(94))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="181"/>
				<line interaction="-1" text="_active (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.internalClose()V(One(182))&#10;org.prevayler.foundation.DurableOutputStream.close()V(One(173))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(94))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(56741), One(0))&#10;-&gt;&#10;1: One(0)" this="182"/>
				<line interaction="-1" text="_inactive (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.DurableOutputStream.internalClose()V(One(183))&#10;org.prevayler.foundation.DurableOutputStream.close()V(One(173))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(94))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(56739), One(0))&#10;-&gt;&#10;1: One(0)" this="183"/>
			</coverage>
		</File>
		<File name="Edge.java">
			<coverage>
				<line interaction="1" text="start (MSTKRUSKAL___)&#10;GPL.Edge.&lt;init&gt;(LGPL/Vertex;LGPL/Vertex;I)V(One(26))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(453))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:2360 }" this="26"/>
				<line interaction="1" text="end (MSTKRUSKAL___)&#10;GPL.Edge.&lt;init&gt;(LGPL/Vertex;LGPL/Vertex;I)V(One(27))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(453))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:2352 }" this="27"/>
				<line interaction="1" text="weight (MSTKRUSKAL___)&#10;GPL.Edge.&lt;init&gt;(LGPL/Vertex;LGPL/Vertex;I)V(One(28))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(453))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:10 }" this="28"/>
			</coverage>
		</File>
		<File name="Elevator.java">
			<coverage>
				<line interaction="1" text="size (weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;ElevatorSystem.Elevator.enterElevator__before__weight(LElevatorSystem/Person;)V(One(99))&#10;ElevatorSystem.Elevator.enterElevator__role__weight(LElevatorSystem/Person;)V(One(107))&#10;ElevatorSystem.Elevator.enterElevator(LElevatorSystem/Person;)V(One(115))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(52))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:218 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!executivefloor &amp; !overloaded:0 ; !executivefloor &amp; overloaded | executivefloor:1 }&#10;-&gt;&#10;3: {!executivefloor &amp; !overloaded:0 ; !weight &amp; !executivefloor &amp; overloaded | !weight &amp; executivefloor | weight &amp; !twothirdsfull &amp; overloaded | weight &amp; twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; twothirdsfull &amp; executivefloor:1 ; weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:2 }" this="99"/>
				<line interaction="1" text="weight (weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.enterElevator__role__weight(LElevatorSystem/Person;)V(One(108))&#10;ElevatorSystem.Elevator.enterElevator(LElevatorSystem/Person;)V(One(115))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(52))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:218 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!weight &amp; !overloaded | weight &amp; !executivefloor &amp; !overloaded:0 ; !weight &amp; overloaded | weight &amp; !executivefloor &amp; overloaded | weight &amp; executivefloor:150 }&#10;-&gt;&#10;3: {!weight &amp; !overloaded | weight &amp; !executivefloor &amp; !overloaded:0 ; weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:190 ; !weight &amp; overloaded | weight &amp; !twothirdsfull &amp; overloaded | weight &amp; twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; twothirdsfull &amp; executivefloor:150 }" this="108"/>
				<line interaction="1" text="modCount (weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.fastRemove(I)V(One(523))&#10;java.util.ArrayList.remove(Ljava/lang/Object;)Z(One(511))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(127))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 }&#10;-&gt;&#10;4: {!twothirdsfull &amp; overloaded | twothirdsfull &amp; !executivefloor &amp; overloaded | twothirdsfull &amp; executivefloor:1 ; !executivefloor &amp; !overloaded:2 ; !weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; !empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:3 ; weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:4 }" this="127"/>
				<line interaction="1" text="weight (weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(138))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!weight &amp; !overloaded | weight &amp; !executivefloor &amp; !overloaded:0 ; weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:190 ; !weight &amp; overloaded | weight &amp; !twothirdsfull &amp; overloaded | weight &amp; twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; twothirdsfull &amp; executivefloor:150 }&#10;-&gt;&#10;4: {!weight &amp; !overloaded | weight &amp; !executivefloor &amp; !overloaded:0 ; weight &amp; !empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:190 ; weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:40 ; !weight &amp; overloaded | weight &amp; !twothirdsfull &amp; overloaded | weight &amp; twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; twothirdsfull &amp; executivefloor:150 }" this="138"/>
				<line interaction="1" text="doors (overloaded)&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(211))&#10;ElevatorSystem.Elevator.timeShift__role__overloaded()V(One(249))&#10;ElevatorSystem.Elevator.timeShift()V(One(257))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(310))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(102))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(769)&#10;-&gt;&#10;2: {overloaded:766 ; !overloaded:769 }" this="211"/>
				<line interaction="2" text="p (twothirdsfull &amp; !overloaded):&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(213))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!twothirdsfull | twothirdsfull &amp; overloaded: [0]  ; twothirdsfull &amp; executivefloor &amp; !overloaded: &lt;787&gt;  ; twothirdsfull &amp; !executivefloor &amp; !overloaded: &lt;815&gt;  }" this="213"/>
				<line interaction="1" text="doors (!overloaded)&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(222))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(102))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(766)&#10;-&gt;&#10;2: {overloaded:766 ; !overloaded:769 }" this="222"/>
				<line interaction="1" text="blocked (overloaded)&#10;ElevatorSystem.Elevator.timeShift__role__overloaded()V(One(245))&#10;ElevatorSystem.Elevator.timeShift()V(One(257))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(102))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overloaded:0 ; overloaded:1 }" this="245"/>
				<line interaction="2" text="? (!weight &amp; !twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; !twothirdsfull &amp; !executivefloor):&#10;ElevatorSystem.Elevator.timeShift()V(One(261))&#10;ElevatorSystem.PL_Interface_impl.Specification13()V(One(298))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(101))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull: [0]  ; weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded: &lt;864&gt;  ; !twothirdsfull &amp; !executivefloor &amp; overloaded: &lt;843&gt;  }" this="261"/>
				<line interaction="1" text="currentHeading (twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(313))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(232))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(750)&#10;-&gt;&#10;2: {!twothirdsfull | twothirdsfull &amp; !executivefloor | twothirdsfull &amp; executivefloor &amp; overloaded:750 ; twothirdsfull &amp; executivefloor &amp; !overloaded:756 }" this="313"/>
				<line interaction="1" text="currentHeading (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(317))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(750)&#10;-&gt;&#10;2: {!twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:750 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:756 }" this="317"/>
				<line interaction="-1" text="currentHeading (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(322))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:750 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:756 }&#10;-&gt;&#10;1: One(750)" this="322"/>
				<line interaction="1" text="currentFloorID (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(326))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {overloaded:1 ; !overloaded:3 }&#10;-&gt;&#10;3: {overloaded:1 ; !twothirdsfull &amp; !executivefloor &amp; !overloaded | twothirdsfull &amp; !overloaded:3 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:4 }" this="326"/>
				<line interaction="1" text="currentFloorID (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(328))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {overloaded:1 ; !overloaded:3 }&#10;-&gt;&#10;3: {overloaded:1 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:2 ; !twothirdsfull &amp; !executivefloor &amp; !overloaded | twothirdsfull &amp; !overloaded:3 }" this="328"/>
				<line interaction="1" text="? (!twothirdsfull &amp; executivefloor &amp; !overloaded):&#10;ElevatorSystem.Elevator.isExecutiveFloorCalling()Z(One(465))&#10;Specifications.Specification_ExecutiveFloor.ajc$after$Specifications_Specification_ExecutiveFloor$1$f51a68b7(LElevatorSystem/Elevator;)V(One(18))&#10;ElevatorSystem.Elevator.timeShift()V(One(261))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [4] )&#10; -&gt; &#10;2 : {twothirdsfull &amp; executivefloor &amp; !overloaded: [4]  ; !twothirdsfull &amp; executivefloor &amp; !overloaded: [5]  }" this="465"/>
			</coverage>
		</File>
		<File name="Email.java">
			<coverage>
				<line interaction="1" text="id (addressbook)&#10;EmailSystem.Email.&lt;init&gt;(I)V(One(27))&#10;EmailSystem.Email.createEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)LEmailSystem/Email;(One(33))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(253))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(1), One(0))" this="27"/>
				<line interaction="1" text="body (addressbook)&#10;EmailSystem.Email.setEmailBody(Ljava/lang/String;)V(One(179))&#10;EmailSystem.Email.createEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)LEmailSystem/Email;(One(37))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(253))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(861), One(0))" this="179"/>
				<line interaction="1" text="from (addressbook)&#10;EmailSystem.Email.setEmailFrom(LEmailSystem/Client;)V(One(185))&#10;EmailSystem.Email.createEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)LEmailSystem/Email;(One(34))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(253))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(786), One(0))" this="185"/>
				<line interaction="1" text="subject (addressbook)&#10;EmailSystem.Email.setEmailSubject(Ljava/lang/String;)V(One(191))&#10;EmailSystem.Email.createEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)LEmailSystem/Email;(One(36))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(253))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook, One(859), One(0))" this="191"/>
				<line interaction="1" text="to (addressbook &amp; sign)&#10;EmailSystem.Email.setEmailTo(Ljava/lang/String;)V(One(197))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(201))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing__role__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(234))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(241))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(addressbook, One(837), One(0))&#10;-&gt;&#10;3: Choice(addressbook &amp; sign, One(813), Choice(addressbook, One(837), One(0)))" this="197"/>
				<line interaction="1" text="isEncrypted (encrypt &amp; addressbook &amp; sign)&#10;EmailSystem.Email.setEmailIsEncrypted(Z)V(One(222))&#10;EmailSystem.Client.outgoing__role__encrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(167))&#10;EmailSystem.Client.outgoing__before__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(183))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(206))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing__role__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(234))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(241))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; addressbook &amp; sign, One(1), One(0))" this="222"/>
				<line interaction="1" text="encryptionKey (encrypt &amp; addressbook &amp; sign)&#10;EmailSystem.Email.setEmailEncryptionKey(I)V(One(228))&#10;EmailSystem.Client.outgoing__role__encrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(166))&#10;EmailSystem.Client.outgoing__before__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(183))&#10;EmailSystem.Client.outgoing__role__addressbook(LEmailSystem/Client;LEmailSystem/Email;)V(One(206))&#10;EmailSystem.Client.outgoing__before__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(220))&#10;EmailSystem.Client.outgoing__role__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(234))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(241))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; addressbook &amp; sign, One(456), One(0))" this="228"/>
				<line interaction="1" text="signed (addressbook &amp; sign)&#10;EmailSystem.Email.setEmailIsSigned(Z)V(One(246))&#10;EmailSystem.Client.sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(534))&#10;EmailSystem.Client.outgoing__role__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(233))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(241))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; sign, One(1), One(0))" this="246"/>
				<line interaction="1" text="signkey (addressbook &amp; sign)&#10;EmailSystem.Email.setEmailSignKey(I)V(One(252))&#10;EmailSystem.Client.sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(535))&#10;EmailSystem.Client.outgoing__role__sign(LEmailSystem/Client;LEmailSystem/Email;)V(One(233))&#10;EmailSystem.Client.outgoing(LEmailSystem/Client;LEmailSystem/Email;)V(One(241))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(255))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(134))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(addressbook &amp; sign, One(123), One(0))" this="252"/>
				<line interaction="1" text="isSignatureVerified (verify &amp; decrypt)&#10;EmailSystem.Email.setIsSignatureVerified(Z)V(One(279))&#10;EmailSystem.Client.verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(569))&#10;EmailSystem.Client.incoming__role__verify(LEmailSystem/Client;LEmailSystem/Email;)V(One(90))&#10;EmailSystem.Client.incoming__before__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(100))&#10;EmailSystem.Client.incoming__role__decrypt(LEmailSystem/Client;LEmailSystem/Email;)V(One(124))&#10;EmailSystem.Client.incoming(LEmailSystem/Client;LEmailSystem/Email;)V(One(131))&#10;EmailSystem.Client.sendEmail(LEmailSystem/Client;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I(One(258))&#10;EmailSystem.Test_Actions.bobToRjh()V(One(150))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(39))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(verify &amp; decrypt, One(1), One(0))" this="279"/>
			</coverage>
		</File>
		<File name="Environment.java">
			<coverage>
				<line interaction="1" text="waterLevel (action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor  | ...)&#10;MinePumpSystem.Environment.lowerWaterLevel()V(One(19))&#10;MinePumpSystem.MinePump.timeShift()V({action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor  | ...:20 })&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {action1_1 &amp; !action3_1 &amp; !action4_1 &amp; !highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; !highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; stopCommand | action1_1 &amp; action3_1 &amp; !highWaterSensor:730 ; !action1_1 | action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor:727 }&#10;-&gt;&#10;3: {action1_1 &amp; !action3_1 &amp; !action4_1 &amp; !highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; !highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; stopCommand | action1_1 &amp; action3_1 &amp; !highWaterSensor:730 ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor  | ...:724 ; !action1_1  | ...:727 }" this="19"/>
				<line interaction="1" text="waterLevel (action1_1)&#10;MinePumpSystem.Environment.waterRise()V(One(30))&#10;MinePumpSystem.Actions.waterRise()V(One(15))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(146))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(727)&#10;-&gt;&#10;2: {action1_1:730 ; !action1_1:727 }" this="30"/>
				<line interaction="1" text="methaneLevelCritical (action2_1)&#10;MinePumpSystem.Environment.changeMethaneLevel()V(One(36))&#10;MinePumpSystem.Actions.methaneChange()V(One(19))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(153))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action2_1:0 ; action2_1:1 }" this="36"/>
			</coverage>
		</File>
		<File name="ExampleTest.java">
			<coverage>
				<line interaction="1" text="SMILEY (True)&#10;cmu.datatypes.ExampleTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.ExampleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SMILEY:0 ; SMILEY:1 }" this="25"/>
				<line interaction="1" text="WEATHER (True)&#10;cmu.datatypes.ExampleTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.ExampleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEATHER:0 ; WEATHER:1 }" this="27"/>
				<line interaction="1" text="content (SMILEY):&#10;cmu.datatypes.ExampleTest.getHTML()Ljava/lang/String;(One(34))&#10;cmu.datatypes.ExampleTest.getHTMLTest()V(One(20))&#10;cmu.datatypes.ExampleTest.[getHTMLTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;628&gt; )&#10; -&gt; &#10;2 : {!SMILEY: &lt;628&gt;  ; SMILEY: &lt;634&gt;  }" this="34"/>
				<line interaction="1" text="content (WEATHER):&#10;cmu.datatypes.ExampleTest.getHTML()Ljava/lang/String;(One(37))&#10;cmu.datatypes.ExampleTest.getHTMLTest()V(One(20))&#10;cmu.datatypes.ExampleTest.[getHTMLTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!SMILEY: &lt;628&gt;  ; SMILEY: &lt;634&gt;  }&#10; -&gt; &#10;3 : {!SMILEY &amp; !WEATHER: &lt;628&gt;  ; SMILEY: &lt;634&gt;  ; !SMILEY &amp; WEATHER: &lt;640&gt;  }" this="37"/>
				<line interaction="1" text="FOO (True)&#10;cmu.datatypes.ExampleTest.&lt;clinit&gt;()V(One(51))&#10;cmu.datatypes.ExampleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!FOO:0 ; FOO:1 }" this="51"/>
				<line interaction="1" text="BAR (True)&#10;cmu.datatypes.ExampleTest.&lt;clinit&gt;()V(One(53))&#10;cmu.datatypes.ExampleTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!BAR:0 ; BAR:1 }" this="53"/>
				<line interaction="1" text="b (FOO):&#10;cmu.datatypes.ExampleTest.method()V(One(66))&#10;cmu.datatypes.ExampleTest.testExample()V(One(58))&#10;cmu.datatypes.ExampleTest.[testExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!FOO: [0]  ; FOO: [1]  }" this="66"/>
				<line interaction="1" text="a (FOO):&#10;cmu.datatypes.ExampleTest.method()V(One(72))&#10;cmu.datatypes.ExampleTest.testExample()V(One(58))&#10;cmu.datatypes.ExampleTest.[testExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : {!FOO: [2]  ; FOO: [4]  }" this="72"/>
				<line interaction="2" text="a (BAR):&#10;cmu.datatypes.ExampleTest.method()V(One(74))&#10;cmu.datatypes.ExampleTest.testExample()V(One(58))&#10;cmu.datatypes.ExampleTest.[testExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!FOO: [2]  ; FOO: [4]  }&#10; -&gt; &#10;4 : {!FOO &amp; !BAR: [2]  ; FOO &amp; !BAR: [4]  ; !FOO &amp; BAR: [6]  ; FOO &amp; BAR: [12]  }" this="74"/>
				<line interaction="-1" text="b (!FOO &amp; BAR | FOO):&#10;cmu.datatypes.ExampleTest.method()V(One(76))&#10;cmu.datatypes.ExampleTest.testExample()V(One(58))&#10;cmu.datatypes.ExampleTest.[testExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!FOO: [0]  ; FOO: [1]  }&#10; -&gt; &#10;1 : One( [0] )" this="76"/>
			</coverage>
		</File>
		<File name="Exception.java">
			<coverage>
				<line interaction="1" text="cause (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(10))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:875 }" this="66"/>
			</coverage>
		</File>
		<File name="FeatureModel.java">
			<coverage>
				<line interaction="1" text="interest (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(12))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!interest:0 ; interest:1 }" this="12"/>
				<line interaction="1" text="overdraft (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(14))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft:0 ; overdraft:1 }" this="14"/>
				<line interaction="1" text="logging (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(16))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!logging:0 ; logging:1 }" this="16"/>
				<line interaction="1" text="interestestimation (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(18))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!interestestimation:0 ; interestestimation:1 }" this="18"/>
				<line interaction="1" text="transaction (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(20))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transaction:0 ; transaction:1 }" this="20"/>
				<line interaction="1" text="transactionlog (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(22))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transactionlog:0 ; transactionlog:1 }" this="22"/>
				<line interaction="1" text="dailylimit (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(24))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!dailylimit:0 ; dailylimit:1 }" this="24"/>
				<line interaction="1" text="creditworthiness (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(26))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!creditworthiness:0 ; creditworthiness:1 }" this="26"/>
				<line interaction="1" text="lock (True)&#10;FM.FeatureModel.&lt;clinit&gt;()V(One(30))&#10;FM.FeatureModel.[&lt;clinit&gt;](One(0))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(6))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!lock:0 ; lock:1 }" this="30"/>
			</coverage>
		</File>
		<File name="FeatureSwitches.java">
			<coverage>
				<line interaction="1" text="__SELECTED_FEATURE_highWaterSensor (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(13))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!highWaterSensor:0 ; highWaterSensor:1 }" this="13"/>
				<line interaction="1" text="__SELECTED_FEATURE_lowWaterSensor (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(15))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!lowWaterSensor:0 ; lowWaterSensor:1 }" this="15"/>
				<line interaction="1" text="__SELECTED_FEATURE_methaneQuery (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(17))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!methaneQuery:0 ; methaneQuery:1 }" this="17"/>
				<line interaction="1" text="__SELECTED_FEATURE_methaneAlarm (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(19))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!methaneAlarm:0 ; methaneAlarm:1 }" this="19"/>
				<line interaction="1" text="__SELECTED_FEATURE_stopCommand (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(21))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!stopCommand:0 ; stopCommand:1 }" this="21"/>
				<line interaction="1" text="__SELECTED_FEATURE_startCommand (True)&#10;MinePumpSystem.FeatureSwitches.&lt;clinit&gt;()V(One(23))&#10;MinePumpSystem.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;MinePumpSystem.Actions.startSystem()V(One(47))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1:162 ; action3_1:160 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!startCommand:0 ; startCommand:1 }" this="23"/>
				<line interaction="1" text="__SELECTED_FEATURE_ClassMethods (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(24))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!ClassMethods:0 ; ClassMethods:1 }" this="24"/>
				<line interaction="1" text="__SELECTED_FEATURE_verify (True)&#10;verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(25))&#10;verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(84))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(verify, One(1), One(0))" this="25"/>
				<line interaction="1" text="__SELECTED_FEATURE_ClassConstructors (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(26))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!ClassConstructors:0 ; ClassConstructors:1 }" this="26"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeGZIPCRC (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(27))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeGZIPCRC, One(1), One(0))" this="27"/>
				<line interaction="1" text="__SELECTED_FEATURE_InterfaceMethods (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(28))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!InterfaceMethods:0 ; InterfaceMethods:1 }" this="28"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeCompressCRC (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(29))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeCompressCRC, One(1), One(0))" this="29"/>
				<line interaction="1" text="__SELECTED_FEATURE_AspectMethods (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(30))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!AspectMethods:0 ; AspectMethods:1 }" this="30"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeExtractCRC (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(31))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeExtractCRC, One(1), One(0))" this="31"/>
				<line interaction="1" text="__SELECTED_FEATURE_AspectConstructors (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(32))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!AspectConstructors:0 ; AspectConstructors:1 }" this="32"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeCompressGZIP (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(33))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeCompressGZIP, One(1), One(0))" this="33"/>
				<line interaction="1" text="__SELECTED_FEATURE_ClassFields (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(34))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!ClassFields:0 ; ClassFields:1 }" this="34"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeCompressAdler32Checksum (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(35))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeCompressAdler32Checksum, One(1), One(0))" this="35"/>
				<line interaction="1" text="__SELECTED_FEATURE_InterfaceFields (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(36))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!InterfaceFields:0 ; InterfaceFields:1 }" this="36"/>
				<line interaction="1" text="__SELECTED_FEATURE_DerivativeCompressGZIPCRC (True)&#10;zipme.verificationClasses.FeatureSwitches.&lt;clinit&gt;()V(One(37))&#10;zipme.verificationClasses.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(39))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(DerivativeCompressGZIPCRC, One(1), One(0))" this="37"/>
				<line interaction="1" text="__SELECTED_FEATURE_AspectFields (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(38))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!AspectFields:0 ; AspectFields:1 }" this="38"/>
				<line interaction="1" text="__SELECTED_FEATURE_Advice (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(40))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!Advice:0 ; Advice:1 }" this="40"/>
				<line interaction="1" text="__SELECTED_FEATURE_Pointcuts (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(42))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!Pointcuts:0 ; Pointcuts:1 }" this="42"/>
				<line interaction="1" text="__SELECTED_FEATURE_InterTypeFields (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(48))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!InterTypeFields:0 ; InterTypeFields:1 }" this="48"/>
				<line interaction="1" text="__SELECTED_FEATURE_InterTypeDeclare (True)&#10;ajs.FeatureSwitches.&lt;clinit&gt;()V(One(50))&#10;ajs.FeatureSwitches.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.AJStatsTest.ajStats2Test()V(One(19))&#10;cmu.testprograms.AJStatsTest.[ajStats2Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!InterTypeDeclare:0 ; InterTypeDeclare:1 }" this="50"/>
			</coverage>
		</File>
		<File name="FibonacciTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(11))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="11"/>
				<line interaction="1" text="b (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(13))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="13"/>
				<line interaction="1" text="c (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(15))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="15"/>
				<line interaction="1" text="d (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(17))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="17"/>
				<line interaction="1" text="e (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(19))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(e, One(1), One(0))" this="19"/>
				<line interaction="1" text="f (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(21))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(f, One(1), One(0))" this="21"/>
				<line interaction="1" text="g (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(23))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(g, One(1), One(0))" this="23"/>
				<line interaction="1" text="h (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(25))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(h, One(1), One(0))" this="25"/>
				<line interaction="1" text="j (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(27))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(j, One(1), One(0))" this="27"/>
				<line interaction="1" text="k (True)&#10;cmu.FibonacciTest.&lt;clinit&gt;()V(One(29))&#10;cmu.FibonacciTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(k, One(1), One(0))" this="29"/>
				<line interaction="1" text="x (a):&#10;cmu.FibonacciTest.fiboTest()V(One(35))&#10;cmu.FibonacciTest.[fiboTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(a, One( [2] ), One( [1] ))" this="35"/>
				<line interaction="1" text="x (b):&#10;cmu.FibonacciTest.fiboTest()V(One(36))&#10;cmu.FibonacciTest.[fiboTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : Choice(a, One( [2] ), One( [1] ))&#10; -&gt; &#10;3 : Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] )))" this="36"/>
				<line interaction="1" text="x (c):&#10;cmu.FibonacciTest.fiboTest()V(One(37))&#10;cmu.FibonacciTest.[fiboTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] )))&#10; -&gt; &#10;4 : Choice(c, One( [4] ), Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] ))))" this="37"/>
				<line interaction="1" text="x (d):&#10;cmu.FibonacciTest.fiboTest()V(One(38))&#10;cmu.FibonacciTest.[fiboTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4 : Choice(c, One( [4] ), Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] ))))&#10; -&gt; &#10;5 : Choice(d, One( [5] ), Choice(c, One( [4] ), Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] )))))" this="38"/>
				<line interaction="1" text="x (e):&#10;cmu.FibonacciTest.fiboTest()V(One(39))&#10;cmu.FibonacciTest.[fiboTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5 : Choice(d, One( [5] ), Choice(c, One( [4] ), Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] )))))&#10; -&gt; &#10;6 : Choice(e, One( [6] ), Choice(d, One( [5] ), Choice(c, One( [4] ), Choice(b, One( [3] ), Choice(a, One( [2] ), One( [1] ))))))" this="39"/>
			</coverage>
		</File>
		<File name="File.java">
			<coverage>
				<line interaction="1" text="path (!USE_TRANSIENT_MODE)&#10;java.io.File.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;org.prevayler.implementation.PrevaylerDirectory.&lt;init&gt;(Ljava/lang/String;)V(One(29))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(327))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(581), One(0))" this="55"/>
				<line interaction="1" text="path (!USE_TRANSIENT_MODE)&#10;java.io.File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V(One(63))&#10;org.prevayler.implementation.PrevaylerDirectory.file(JLjava/lang/String;)Ljava/io/File;(One(98))&#10;org.prevayler.implementation.PrevaylerDirectory.journalFile(JLjava/lang/String;)Ljava/io/File;(One(90))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(124))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56913), One(0))" this="63"/>
				<line interaction="1" text="elementData (!USE_TRANSIENT_MODE)&#10;java.util.ArrayList.&lt;init&gt;()V(One(152))&#10;java.io.File.listFiles(Ljava/io/FileFilter;)[Ljava/io/File;(One(158))&#10;org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile(J)Ljava/io/File;(One(155))&#10;org.prevayler.implementation.journal.PersistentJournal.update(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(138))&#10;org.prevayler.implementation.publishing.CentralPublisher.subscribe(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(98))&#10;org.prevayler.implementation.PrevalentSystemGuard.subscribeTo(Lorg/prevayler/implementation/publishing/TransactionPublisher;)V(One(46))&#10;org.prevayler.implementation.PrevaylerImpl.&lt;init&gt;(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;Lorg/prevayler/implementation/publishing/TransactionPublisher;Lorg/prevayler/foundation/serialization/Serializer;)V(One(48))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(295))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1590), One(0))" this="158"/>
			</coverage>
		</File>
		<File name="FileDescriptor.java">
			<coverage>
				<line interaction="1" text="fileName (!USE_TRANSIENT_MODE)&#10;java.io.FileDescriptor.&lt;init&gt;(Ljava/lang/String;I)V(One(56))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56923), One(0))" this="56"/>
				<line interaction="1" text="mode (!USE_TRANSIENT_MODE)&#10;java.io.FileDescriptor.&lt;init&gt;(Ljava/lang/String;I)V(One(57))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="57"/>
				<line interaction="1" text="fd (!USE_TRANSIENT_MODE)&#10;java.io.FileDescriptor.&lt;init&gt;(Ljava/lang/String;I)V(One(59))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(304), One(0))" this="59"/>
				<line interaction="1" text="state (!USE_TRANSIENT_MODE)&#10;java.io.FileDescriptor.&lt;init&gt;(Ljava/lang/String;I)V(One(62))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="62"/>
			</coverage>
		</File>
		<File name="FileOutputStream.java">
			<coverage>
				<line interaction="1" text="fd (!USE_TRANSIENT_MODE)&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56925), One(0))" this="30"/>
				<line interaction="1" text="fd (!USE_TRANSIENT_MODE)&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V(One(30))&#10;java.io.FileOutputStream.&lt;init&gt;(Ljava/io/File;)V(One(37))&#10;org.prevayler.foundation.DurableOutputStream.&lt;init&gt;(Ljava/io/File;Z)V(One(57))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(126))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56925), One(0))" this="37"/>
			</coverage>
		</File>
		<File name="FinishTimeWorkSpace.java">
			<coverage>
				<line interaction="1" text="FinishCounter (STRONGLYCONNECTED___)&#10;GPL.FinishTimeWorkSpace.&lt;init&gt;()V(One(16))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(137))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="16"/>
				<line interaction="1" text="finishTime (STRONGLYCONNECTED___)&#10;GPL.FinishTimeWorkSpace.postVisitAction(LGPL/Vertex;)V(One(30))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(157))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(140))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:90 }" this="30"/>
			</coverage>
		</File>
		<File name="FloatTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(14))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="14"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(16))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="16"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(18))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="18"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(20))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="20"/>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(23))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="23"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="25"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.FloatTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.FloatTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="27"/>
				<line interaction="1" text="i (z):&#10;cmu.datatypes.FloatTest.testFloat()V(One(36))&#10;cmu.datatypes.FloatTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1067869798] )&#10; -&gt; &#10;2 : Choice(z, One( [1073741824] ), One( [1067869798] ))" this="36"/>
				<line interaction="1" text="j (y):&#10;cmu.datatypes.FloatTest.testFloat()V(One(39))&#10;cmu.datatypes.FloatTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1080452710] )&#10; -&gt; &#10;2 : Choice(y, One( [1082130432] ), One( [1080452710] ))" this="39"/>
				<line interaction="3" text="k (True):&#10;cmu.datatypes.FloatTest.testFloat()V(One(43))&#10;cmu.datatypes.FloatTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;4 : Choice(y &amp; !z, One( [1084856730] ), Choice(!y &amp; !z, One( [1084017868] ), Choice(y &amp; z, One( [1086324736] ), One( [1085485875] ))))" this="43"/>
				<line interaction="1" text="? (True):&#10;cmu.datatypes.FloatTest.testFloat()V(One(47))&#10;cmu.datatypes.FloatTest.[testFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;Choice(!z, One( [1067869798] ), One( [1073741824] ))" this="47"/>
			</coverage>
		</File>
		<File name="Floor.java">
			<coverage>
				<line interaction="1" text="elevatorCall (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Floor.reset()V(One(40))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(55))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(218))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {!twothirdsfull &amp; executivefloor &amp; !overloaded:0 ; !twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:1 }" this="40"/>
				<line interaction="1" text="lastRet (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;)V(One(822))&#10;java.util.ArrayList$Itr.&lt;init&gt;(Ljava/util/ArrayList;Ljava/util/ArrayList$1;)V(One(820))&#10;java.util.ArrayList.iterator()Ljava/util/Iterator;(One(814))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(51))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(218))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:0 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:-1 }" this="51"/>
				<line interaction="1" text="modCount (!twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;java.util.ArrayList.clear()V(One(536))&#10;ElevatorSystem.Floor.processWaitingPersons(LElevatorSystem/Elevator;)V(One(54))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(218))&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!twothirdsfull &amp; !executivefloor | !twothirdsfull &amp; executivefloor &amp; overloaded | twothirdsfull:0 ; !twothirdsfull &amp; executivefloor &amp; !overloaded:1 }" this="54"/>
			</coverage>
		</File>
		<File name="GZIPInputStream.java">
			<coverage>
				<line interaction="1" text="crc (GZIP)&#10;net.sf.zipme.GZIPInputStream.hook__role__DerivativeGZIPCRC()V(One(85))&#10;net.sf.zipme.GZIPInputStream.hook()V(One(91))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;I)V(One(78))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(64))&#10;net.sf.zipme.ZipTest.getZipInStream__role__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(58))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2249), One(0))" this="85"/>
				<line interaction="1" text="readGZIPHeader (GZIP)&#10;net.sf.zipme.GZIPInputStream.readHeader()V(One(211))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;I)V(One(79))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(64))&#10;net.sf.zipme.ZipTest.getZipInStream__role__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(58))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="211"/>
				<line interaction="1" text="headCRC (GZIP)&#10;net.sf.zipme.GZIPInputStream.hook1__role__DerivativeGZIPCRC()V(One(248))&#10;net.sf.zipme.GZIPInputStream.hook1()V(One(254))&#10;net.sf.zipme.GZIPInputStream.readHeader()V(One(133))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;I)V(One(79))&#10;net.sf.zipme.GZIPInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(64))&#10;net.sf.zipme.ZipTest.getZipInStream__role__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(58))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2250), One(0))" this="248"/>
				<line interaction="1" text="eos (GZIP)&#10;net.sf.zipme.GZIPInputStream.readFooter()V(One(278))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(125))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="278"/>
			</coverage>
		</File>
		<File name="GZIPOutputStream.java">
			<coverage>
				<line interaction="1" text="crc (GZIP)&#10;net.sf.zipme.GZIPOutputStream.hook__role__DerivativeCompressGZIPCRC()V(One(42))&#10;net.sf.zipme.GZIPOutputStream.hook()V(One(48))&#10;net.sf.zipme.GZIPOutputStream.&lt;init&gt;(Ljava/io/OutputStream;I)V(One(32))&#10;net.sf.zipme.GZIPOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream__role__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(40))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(783), One(0))" this="42"/>
			</coverage>
		</File>
		<File name="GZIPOutputStream_hook22.java">
			<coverage>
				<line interaction="1" text="_this (GZIP)&#10;net.sf.zipme.GZIPOutputStream_hook22.&lt;init&gt;(Lnet/sf/zipme/GZIPOutputStream;[B)V(One(9))&#10;net.sf.zipme.GZIPOutputStream.hook2([B)V(One(81))&#10;net.sf.zipme.GZIPOutputStream.finish()V(One(72))&#10;net.sf.zipme.GZIPOutputStream.close()V(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(716), One(0))" this="9"/>
				<line interaction="1" text="gzipFooter (GZIP)&#10;net.sf.zipme.GZIPOutputStream_hook22.&lt;init&gt;(Lnet/sf/zipme/GZIPOutputStream;[B)V(One(10))&#10;net.sf.zipme.GZIPOutputStream.hook2([B)V(One(81))&#10;net.sf.zipme.GZIPOutputStream.finish()V(One(72))&#10;net.sf.zipme.GZIPOutputStream.close()V(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2170), One(0))" this="10"/>
				<line interaction="1" text="crcval (GZIP)&#10;net.sf.zipme.GZIPOutputStream_hook22.execute__role__DerivativeCompressGZIPCRC()V(One(16))&#10;net.sf.zipme.GZIPOutputStream_hook22.execute()V(One(26))&#10;net.sf.zipme.GZIPOutputStream.hook2([B)V(One(81))&#10;net.sf.zipme.GZIPOutputStream.finish()V(One(72))&#10;net.sf.zipme.GZIPOutputStream.close()V(One(64))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(-1451030495), One(0))" this="16"/>
			</coverage>
		</File>
		<File name="GenericSnapshotManager.java">
			<coverage>
				<line interaction="1" text="index (USE_XSTREAM)&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(911))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(8), One(7))" this="26"/>
				<line interaction="1" text="suffix (True):&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_XSTREAM, One( &lt;1765&gt; ), One( &lt;1789&gt; ))" this="27"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(467))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( &lt;1789&gt; ), One( &lt;1765&gt; ))" this="31"/>
				<line interaction="1" text="_primarySuffix (True)&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(36))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1765), One(1789))" this="36"/>
			</coverage>
		</File>
		<File name="Graph.java">
			<coverage>
				<line interaction="1" text="this$0 (STRONGLYCONNECTED___)&#10;GPL.Graph$1.&lt;init&gt;(LGPL/Graph;)V(One(1))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(144))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:668 }" this="1"/>
				<line interaction="1" text="vertices (STRONGLYCONNECTED___)&#10;GPL.Graph.&lt;init&gt;()V(One(21))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(185))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9815 }" this="21"/>
				<line interaction="1" text="next (STRONGLYCONNECTED___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.addVertex(LGPL/Vertex;)V(One(25))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(191))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9995 }" this="25"/>
				<line interaction="1" text="aVertex (True):&#10;GPL.Graph.display()V(One(82))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(108))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;2272&gt; )&#10; -&gt; &#10;2 : {STRONGLYCONNECTED___: &lt;2352&gt;  ; !STRONGLYCONNECTED___: &lt;2280&gt;  }" this="82"/>
				<line interaction="1" text="v (NUMBER___):&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(99))&#10;GPL.Graph.NumberVertices()V(One(126))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(647))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;2272&gt; )&#10; -&gt; &#10;2 : {NUMBER___ &amp; STRONGLYCONNECTED___: &lt;2352&gt;  ; NUMBER___ &amp; !STRONGLYCONNECTED___: &lt;2280&gt;  }" this="99"/>
				<line interaction="1" text="v (NUMBER___):&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(106))&#10;GPL.Graph.NumberVertices()V(One(126))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(647))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{NUMBER___ &amp; !STRONGLYCONNECTED___: &lt;2352&gt;  ; NUMBER___ &amp; STRONGLYCONNECTED___: &lt;2280&gt;  }" this="106"/>
				<line interaction="1" text="item (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.set(Ljava/lang/Object;)V(One(937))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(221))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2352)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:2352 ; STRONGLYCONNECTED___:2280 }" this="143"/>
				<line interaction="1" text="size (STRONGLYCONNECTED___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(214))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="214"/>
				<line interaction="1" text="key (MSTPRIM___)&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(250))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:2147483647 }" this="250"/>
				<line interaction="-1" text="key (MSTPRIM___)&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(254))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:2147483647 }&#10;-&gt;&#10;1: One(0)" this="254"/>
				<line interaction="1" text="next (MSTPRIM___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(266))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8274 }" this="266"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(130))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(270))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8275 }" this="270"/>
				<line interaction="-1" text="size (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(180))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:1 }&#10;-&gt;&#10;1: One(0)" this="286"/>
				<line interaction="1" text="pred (MSTPRIM___)&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(309))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:2293 }" this="309"/>
				<line interaction="-1" text="item (MSTPRIM___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(227))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(319))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:2360 }&#10;-&gt;&#10;1: One(0)" this="319"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(157))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(343))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8280 }" this="343"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(156))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(347))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8350 }" this="347"/>
				<line interaction="1" text="size (MSTPRIM___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(389))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:1 }" this="389"/>
				<line interaction="1" text="representative (MSTKRUSKAL___)&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(434))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:2360 }" this="434"/>
				<line interaction="1" text="members (MSTKRUSKAL___)&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(435))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:6727 }" this="435"/>
				<line interaction="1" text="next (MSTKRUSKAL___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(451))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:7052 }" this="451"/>
				<line interaction="1" text="nextIndex (MSTKRUSKAL___)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(892))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(220))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(458))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="458"/>
				<line interaction="1" text="next (MSTKRUSKAL___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(489))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:7170 }" this="489"/>
				<line interaction="1" text="next (MSTKRUSKAL___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(505))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:7171 }" this="505"/>
				<line interaction="1" text="modCount (MSTKRUSKAL___)&#10;java.util.LinkedList.clear()V(One(460))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(508))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="508"/>
				<line interaction="1" text="modCount (MSTKRUSKAL___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(520))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="520"/>
				<line interaction="1" text="modCount (MSTKRUSKAL___)&#10;java.util.LinkedList.clear()V(One(460))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(523))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="523"/>
				<line interaction="1" text="size (MSTKRUSKAL___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(562))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="562"/>
				<line interaction="1" text="gaux3 (SHORTEST___):&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!SHORTEST___: [0]  ; SHORTEST___: &lt;5062&gt;  }" this="597"/>
				<line interaction="2" text="gaux2 (MSTKRUSKAL___):&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!MSTKRUSKAL___ &amp; !SHORTEST___: [0]  ; !MSTKRUSKAL___ &amp; SHORTEST___: &lt;5062&gt;  ; MSTKRUSKAL___: &lt;7172&gt;  }" this="606"/>
				<line interaction="3" text="gaux (MSTPRIM___):&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!MSTPRIM___ &amp; !MSTKRUSKAL___ &amp; !SHORTEST___: [0]  ; MSTPRIM___: &lt;8367&gt;  ; !MSTPRIM___ &amp; !MSTKRUSKAL___ &amp; SHORTEST___: &lt;5062&gt;  ; !MSTPRIM___ &amp; MSTKRUSKAL___: &lt;7172&gt;  }" this="615"/>
				<line interaction="4" text="gaux4 (STRONGLYCONNECTED___):&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!STRONGLYCONNECTED___ &amp; !MSTPRIM___ &amp; !MSTKRUSKAL___ &amp; !SHORTEST___: [0]  ; !STRONGLYCONNECTED___ &amp; MSTPRIM___: &lt;8367&gt;  ; !STRONGLYCONNECTED___ &amp; !MSTPRIM___ &amp; !MSTKRUSKAL___ &amp; SHORTEST___: &lt;5062&gt;  ; !STRONGLYCONNECTED___ &amp; !MSTPRIM___ &amp; MSTKRUSKAL___: &lt;7172&gt;  ; STRONGLYCONNECTED___: &lt;9814&gt;  }" this="631"/>
				<line interaction="1" text="dweight (SHORTEST___)&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(670))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:2147483647 }" this="670"/>
				<line interaction="-1" text="dweight (SHORTEST___)&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(673))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!SHORTEST___:0 ; SHORTEST___:2147483647 }&#10;-&gt;&#10;1: One(0)" this="673"/>
				<line interaction="1" text="next (SHORTEST___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(685))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:4903 }" this="685"/>
				<line interaction="1" text="prev (SHORTEST___)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(130))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(689))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:4904 }" this="689"/>
				<line interaction="-1" text="size (SHORTEST___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(180))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(702))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!SHORTEST___:0 ; SHORTEST___:1 }&#10;-&gt;&#10;1: One(0)" this="702"/>
				<line interaction="1" text="next (SHORTEST___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(705))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:5061 }" this="705"/>
				<line interaction="1" text="dweight (SHORTEST___)&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(719))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:-2147483639 }" this="719"/>
				<line interaction="1" text="predecessor (SHORTEST___)&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(720))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:2293 }" this="720"/>
				<line interaction="-1" text="item (SHORTEST___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(227))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(727))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!SHORTEST___:0 ; SHORTEST___:2360 }&#10;-&gt;&#10;1: One(0)" this="727"/>
				<line interaction="1" text="next (SHORTEST___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(508))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(751))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:5051 }" this="751"/>
				<line interaction="1" text="prev (SHORTEST___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(156))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(755))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:5034 }" this="755"/>
				<line interaction="1" text="size (SHORTEST___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(797))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:1 }" this="797"/>
			</coverage>
		</File>
		<File name="Gregorian.java">
			<coverage>
				<line interaction="1" text="cachedYear (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(165))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2004), One(0))" this="45"/>
				<line interaction="1" text="year (!GZIP)&#10;sun.util.calendar.CalendarDate.setYear(I)Lsun/util/calendar/CalendarDate;(One(128))&#10;sun.util.calendar.Gregorian$Date.setNormalizedYear(I)V(One(53))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(461))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2015), One(0))" this="53"/>
				<line interaction="1" text="cachedYear (!GZIP)&#10;sun.util.calendar.BaseCalendar$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(165))&#10;sun.util.calendar.Gregorian$Date.&lt;init&gt;(Ljava/util/TimeZone;)V(One(45))&#10;sun.util.calendar.Gregorian.newCalendarDate(Ljava/util/TimeZone;)Lsun/util/calendar/Gregorian$Date;(One(85))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2004), One(0))" this="85"/>
			</coverage>
		</File>
		<File name="GregorianCalendar.java">
			<coverage>
				<line interaction="1" text="gregorianCutoverYear (!GZIP)&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(535))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1582), One(0))" this="535"/>
				<line interaction="1" text="gregorianCutoverYearJulian (!GZIP)&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(541))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1582), One(0))" this="541"/>
				<line interaction="1" text="zone (!GZIP)&#10;java.util.Calendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(955))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(619))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1096), One(0))" this="619"/>
				<line interaction="1" text="gdate (!GZIP)&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(620))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1809), One(0))" this="620"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="621"/>
				<line interaction="1" text="cdate (!GZIP)&#10;java.util.GregorianCalendar.computeFields(II)I(One(2343))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1809), One(0))" this="2248"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="2251"/>
				<line interaction="1" text="zoneOffsets (!GZIP)&#10;java.util.GregorianCalendar.computeFields(II)I(One(2272))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1810), One(0))" this="2272"/>
				<line interaction="1" text="normalized (!GZIP)&#10;sun.util.calendar.CalendarDate.setNormalized(Z)V(One(487))&#10;sun.util.calendar.BaseCalendar.getCalendarDateFromFixedDate(Lsun/util/calendar/CalendarDate;J)V(One(466))&#10;java.util.GregorianCalendar.computeFields(II)I(One(2333))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="2333"/>
				<line interaction="-1" text="cachedFixedDate (!GZIP)&#10;java.util.GregorianCalendar.computeFields(II)I(One(2334))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(-9223372036854775808), One(0))&#10;-&gt;&#10;1: One(735771)" this="2334"/>
				<line interaction="1" text="calsys (!GZIP)&#10;java.util.GregorianCalendar.computeFields(II)I(One(2342))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1795), One(0))" this="2342"/>
				<line interaction="1" text="cdate (!GZIP)&#10;java.util.GregorianCalendar.computeFields(II)I(One(2343))&#10;java.util.GregorianCalendar.computeFields()V(One(2248))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1809), One(0))" this="2343"/>
			</coverage>
		</File>
		<File name="HashMap.java">
			<coverage>
				<line interaction="1" text="table (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(154))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1605), One(0))" this="154"/>
				<line interaction="1" text="loadFactor (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(260))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1061158912), One(0))" this="260"/>
				<line interaction="1" text="threshold (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(261))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(16), One(0))" this="261"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(242))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="262"/>
				<line interaction="1" text="threshold (encrypt &amp; !autoresponder &amp; !verify)&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(261))&#10;java.util.HashMap.&lt;init&gt;(I)V(One(273))&#10;java.util.HashSet.&lt;init&gt;(I)V(One(142))&#10;TestSpecifications.Specification6.&lt;init&gt;()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__encrypt()V(One(14))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__autoresponder()V(One(23))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__sign()V(One(45))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(66))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(87))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; !autoresponder &amp; !verify, One(2), One(0))" this="273"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(242))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="281"/>
				<line interaction="1" text="threshold (USE_XSTREAM)&#10;java.util.HashMap.inflateTable(I)V(One(315))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(488))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V(One(269))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(16)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(12), One(16))" this="315"/>
				<line interaction="1" text="table (USE_XSTREAM)&#10;java.util.HashMap.inflateTable(I)V(One(316))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(488))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V(One(269))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1605)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1780), One(1605))" this="316"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.hash(Ljava/lang/Object;)I(One(362))&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(462))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( [284874180] ), One( [-1776127044] ))" this="362"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(467))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( &lt;1789&gt; ), One( &lt;1765&gt; ))" this="449"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(462))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_XSTREAM, One( [-1637482681] ), One( [299209062] ))" this="462"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(463))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_XSTREAM, One( &lt;1784&gt; ), One( &lt;1792&gt; ))" this="463"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap.getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;(One(467))&#10;java.util.HashMap.containsKey(Ljava/lang/Object;)Z(One(449))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(31))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( &lt;1789&gt; ), One( &lt;1765&gt; ))" this="467"/>
				<line interaction="1" text="table (USE_XSTREAM)&#10;java.util.HashMap.inflateTable(I)V(One(316))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(488))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V(One(269))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1605)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1780), One(1605))" this="488"/>
				<line interaction="1" text="modCount (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(504))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(72))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="504"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="505"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="811"/>
				<line interaction="1" text="next (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(812))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56934), One(0))" this="812"/>
				<line interaction="1" text="key (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(813))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(2724), One(0))" this="813"/>
				<line interaction="1" text="hash (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(814))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(905210181), One(0))" this="814"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="884"/>
				<line interaction="1" text="hash (!USE_XSTREAM)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(814))&#10;java.util.HashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(897))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V(One(265))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(250))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_XSTREAM, One(299209062), One(0))" this="897"/>
				<line interaction="1" text="size (USE_XSTREAM)&#10;java.util.HashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(898))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V(One(269))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1), One(0))" this="898"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(910))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( &lt;1791&gt; ), One( &lt;1780&gt; ))" this="910"/>
				<line interaction="1" text="index (USE_XSTREAM)&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(911))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(8), One(7))" this="911"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(923))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_XSTREAM, One( &lt;1784&gt; ), One( &lt;1792&gt; ))" this="923"/>
				<line interaction="-1" text="next (True)&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(927))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(USE_XSTREAM, One(1784), One(1792))&#10;-&gt;&#10;1: One(0)" this="927"/>
				<line interaction="1" text="? (True):&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(928))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_XSTREAM, One( &lt;1791&gt; ), One( &lt;1780&gt; ))" this="928"/>
				<line interaction="-1" text="index (!USE_XSTREAM)&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(929))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(USE_XSTREAM, One(16), One(15))&#10;-&gt;&#10;1: One(16)" this="929"/>
				<line interaction="1" text="current (True)&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(932))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1784), One(1792))" this="932"/>
				<line interaction="1" text="index (USE_XSTREAM)&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(911))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(8), One(7))" this="954"/>
				<line interaction="1" text="current (True)&#10;java.util.HashMap$HashIterator.nextEntry()Ljava/util/HashMap$Entry;(One(932))&#10;java.util.HashMap$KeyIterator.next()Ljava/lang/Object;(One(956))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(27))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1784), One(1792))" this="956"/>
				<line interaction="1" text="index (USE_XSTREAM)&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(911))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(8), One(7))" this="968"/>
				<line interaction="1" text="index (USE_XSTREAM)&#10;java.util.HashMap$HashIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(911))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;)V(One(954))&#10;java.util.HashMap$KeyIterator.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(954))&#10;java.util.HashMap.newKeyIterator()Ljava/util/Iterator;(One(968))&#10;java.util.HashMap$KeySet.iterator()Ljava/util/Iterator;(One(1002))&#10;org.prevayler.implementation.snapshot.GenericSnapshotManager.&lt;init&gt;(Ljava/util/Map;Ljava/lang/String;Ljava/lang/Object;Lorg/prevayler/implementation/PrevaylerDirectory;Lorg/prevayler/foundation/serialization/Serializer;)V(One(26))&#10;org.prevayler.PrevaylerFactory.snapshotManager()Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;(One(348))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(292))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(8), One(7))" this="1002"/>
				<line interaction="1" text="entrySet (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.entrySet0()Ljava/util/Set;(One(1073))&#10;java.util.HashMap.entrySet()Ljava/util/Set;(One(1068))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56945), One(0))" this="1068"/>
				<line interaction="1" text="entrySet (!USE_TRANSIENT_MODE)&#10;java.util.HashMap.entrySet0()Ljava/util/Set;(One(1073))&#10;java.util.HashMap.entrySet()Ljava/util/Set;(One(1068))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56945), One(0))" this="1073"/>
				<line interaction="1" text="this$0 (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$EntrySet.&lt;init&gt;(Ljava/util/HashMap;)V(One(1076))&#10;java.util.HashMap$EntrySet.&lt;init&gt;(Ljava/util/HashMap;Ljava/util/HashMap$1;)V(One(1076))&#10;java.util.HashMap.entrySet0()Ljava/util/Set;(One(1073))&#10;java.util.HashMap.entrySet()Ljava/util/Set;(One(1068))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56928), One(0))" this="1076"/>
				<line interaction="1" text="expectedModCount (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(375))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(3), One(0))" this="1078"/>
			</coverage>
		</File>
		<File name="HashSet.java">
			<coverage>
				<line interaction="1" text="map (encrypt &amp; !autoresponder &amp; !verify)&#10;java.util.HashSet.&lt;init&gt;(I)V(One(142))&#10;TestSpecifications.Specification6.&lt;init&gt;()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__encrypt()V(One(14))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__autoresponder()V(One(23))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__sign()V(One(45))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(66))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(87))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; !autoresponder &amp; !verify, One(776), One(0))" this="142"/>
			</coverage>
		</File>
		<File name="Inflater.java">
			<coverage>
				<line interaction="1" text="nowrap (!GZIP)&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(116))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="116"/>
				<line interaction="1" text="input (!GZIP)&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(118))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2257), One(0))" this="118"/>
				<line interaction="1" text="outputWindow (!GZIP)&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(119))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2258), One(0))" this="119"/>
				<line interaction="1" text="mode (!GZIP)&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(120))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2), One(0))" this="120"/>
				<line interaction="1" text="mode (!GZIP &amp; Adler32Checksum)&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(298))&#10;net.sf.zipme.Inflater.reset__role__Adler32Checksum()V(One(313))&#10;net.sf.zipme.Inflater.reset()V(One(323))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(12), One(0))&#10;-&gt;&#10;3: Choice(!GZIP &amp; Adler32Checksum, One(2), Choice(!GZIP, One(12), One(0)))" this="298"/>
				<line interaction="-1" text="totalIn (!GZIP &amp; !Adler32Checksum)&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(299))&#10;net.sf.zipme.Inflater.reset()V(One(325))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; Adler32Checksum | GZIP, One(0), One(4028))&#10;-&gt;&#10;1: One(0)" this="299"/>
				<line interaction="-1" text="dynHeader (!GZIP &amp; !Adler32Checksum)&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(302))&#10;net.sf.zipme.Inflater.reset()V(One(325))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; Adler32Checksum | GZIP, One(0), One(3057))&#10;-&gt;&#10;1: One(0)" this="302"/>
				<line interaction="-1" text="isLastBlock (!GZIP &amp; !Adler32Checksum)&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(305))&#10;net.sf.zipme.Inflater.reset()V(One(325))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; Adler32Checksum | GZIP, One(0), One(1))&#10;-&gt;&#10;1: One(0)" this="305"/>
				<line interaction="-1" text="totalIn (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.Inflater.setInput([BII)V(One(389))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(137))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; DerivativeExtractCRC, One(4028), One(0))&#10;-&gt;&#10;1: One(4028)" this="389"/>
				<line interaction="-1" text="distTree (GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(456))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(GZIP, One(2283), One(0))&#10;-&gt;&#10;1: One(0)" this="456"/>
				<line interaction="-1" text="litlenTree (GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(457))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(GZIP, One(2278), One(0))&#10;-&gt;&#10;1: One(0)" this="457"/>
				<line interaction="1" text="repLength (!GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(463))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(10), One(0))" this="463"/>
				<line interaction="-1" text="neededBits (!GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(464))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(7), One(0))&#10;-&gt;&#10;1: One(0)" this="464"/>
				<line interaction="1" text="repDist (!GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(483))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(33), One(0))" this="483"/>
				<line interaction="1" text="neededBits (!GZIP)&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(484))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(8), One(0))" this="484"/>
				<line interaction="1" text="isLastBlock (GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(559))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="559"/>
				<line interaction="1" text="litlenTree (GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(566))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2278), One(0))" this="566"/>
				<line interaction="1" text="distTree (GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(567))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2283), One(0))" this="567"/>
				<line interaction="1" text="dynHeader (!GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(571))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3057), One(0))" this="571"/>
				<line interaction="1" text="litlenTree (!GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(605))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3065), One(0))" this="605"/>
				<line interaction="1" text="distTree (!GZIP)&#10;net.sf.zipme.Inflater.decode()Z(One(606))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3070), One(0))" this="606"/>
				<line interaction="1" text="adler (!GZIP &amp; Adler32Checksum)&#10;net.sf.zipme.Inflater.hook32__role__Adler32Checksum()V(One(623))&#10;net.sf.zipme.Inflater.hook32()V(One(629))&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(117))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; Adler32Checksum, One(2256), One(0))" this="623"/>
			</coverage>
		</File>
		<File name="InflaterDynHeader.java">
			<coverage>
				<line interaction="1" text="lnum (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(47))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(11), One(0))" this="47"/>
				<line interaction="1" text="mode (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(52))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="52"/>
				<line interaction="1" text="dnum (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(54))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(20), One(0))" this="54"/>
				<line interaction="1" text="num (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(59))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(289), One(0))" this="59"/>
				<line interaction="1" text="litdistLens (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(60))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3058), One(0))" this="60"/>
				<line interaction="1" text="blnum (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(63))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(10), One(0))" this="63"/>
				<line interaction="1" text="blLens (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(68))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3059), One(0))" this="68"/>
				<line interaction="1" text="ptr (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(78))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="78"/>
				<line interaction="1" text="blTree (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(80))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3060), One(0))" this="80"/>
				<line interaction="-1" text="blLens (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(81))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(3059), One(0))&#10;-&gt;&#10;1: One(0)" this="81"/>
				<line interaction="-1" text="ptr (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(82))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(14), One(0))&#10;-&gt;&#10;1: One(0)" this="82"/>
				<line interaction="1" text="lastLen (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(87))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="87"/>
				<line interaction="-1" text="lastLen (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(95))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(9), One(0))&#10;-&gt;&#10;1: One(0)" this="95"/>
				<line interaction="1" text="repSymbol (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(100))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2), One(0))" this="100"/>
				<line interaction="1" text="ptr (!GZIP)&#10;net.sf.zipme.InflaterDynHeader.decode(Lnet/sf/zipme/StreamManipulator;)Z(One(113))&#10;net.sf.zipme.Inflater.decode()Z(One(603))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="113"/>
			</coverage>
		</File>
		<File name="InflaterHuffmanTree.java">
			<coverage>
				<line interaction="1" text="tree (!GZIP)&#10;net.sf.zipme.InflaterHuffmanTree.buildTree([B)V(One(66))&#10;net.sf.zipme.InflaterHuffmanTree.&lt;init&gt;([B)V(One(42))&#10;net.sf.zipme.InflaterDynHeader.buildDistTree()Lnet/sf/zipme/InflaterHuffmanTree;(One(133))&#10;net.sf.zipme.Inflater.decode()Z(One(606))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3073), One(0))" this="66"/>
			</coverage>
		</File>
		<File name="InflaterInputStream.java">
			<coverage>
				<line interaction="1" text="onebytebuffer (!GZIP)&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;I)V(One(41))&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;)V(One(61))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2260), One(0))" this="41"/>
				<line interaction="1" text="in (!GZIP)&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;I)V(One(73))&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;)V(One(61))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2221), One(0))" this="73"/>
				<line interaction="1" text="inf (!GZIP)&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;I)V(One(80))&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;)V(One(61))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2255), One(0))" this="80"/>
				<line interaction="1" text="buf (!GZIP)&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;I)V(One(81))&#10;net.sf.zipme.InflaterInputStream.&lt;init&gt;(Ljava/io/InputStream;Lnet/sf/zipme/Inflater;)V(One(61))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2261), One(0))" this="81"/>
				<line interaction="-1" text="in (GZIP)&#10;net.sf.zipme.InflaterInputStream.close()V(One(100))&#10;net.sf.zipme.GZIPInputStream.close()V(One(103))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(138))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(GZIP, One(2221), One(0))&#10;-&gt;&#10;1: One(0)" this="100"/>
				<line interaction="1" text="len (GZIP)&#10;net.sf.zipme.InflaterInputStream.fill()V(One(109))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(165))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(4096), One(0))" this="109"/>
			</coverage>
		</File>
		<File name="IntArrayTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.IntArrayTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.IntArrayTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="13"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.IntArrayTest.&lt;clinit&gt;()V(One(15))&#10;cmu.datatypes.IntArrayTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="15"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.IntArrayTest.&lt;clinit&gt;()V(One(17))&#10;cmu.datatypes.IntArrayTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="17"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.IntArrayTest.&lt;clinit&gt;()V(One(19))&#10;cmu.datatypes.IntArrayTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="19"/>
				<line interaction="1" text="array (a):&#10;cmu.datatypes.IntArrayTest.intArrayTest2()V(One(43))&#10;cmu.datatypes.IntArrayTest.[intArrayTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;608&gt; )&#10; -&gt; &#10;2 : Choice(a, One( &lt;609&gt; ), One( &lt;608&gt; ))" this="43"/>
			</coverage>
		</File>
		<File name="IntTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(14))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="14"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(16))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="16"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(18))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="18"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(20))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="20"/>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(23))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="23"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="25"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.IntTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.IntTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="27"/>
				<line interaction="1" text="i (z):&#10;cmu.datatypes.IntTest.testAll()V(One(35))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(z, One( [2] ), One( [1] ))" this="35"/>
				<line interaction="1" text="j (y):&#10;cmu.datatypes.IntTest.testAll()V(One(38))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : Choice(y, One( [4] ), One( [3] ))" this="38"/>
				<line interaction="2" text="k (True):&#10;cmu.datatypes.IntTest.testAll()V(One(42))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : Choice(y &amp; !z, One( [5] ), Choice(!y &amp; !z, One( [4] ), Choice(y &amp; z, One( [6] ), One( [5] ))))" this="42"/>
				<line interaction="1" text="k (True):&#10;cmu.datatypes.IntTest.testAll()V(One(44))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : Choice(y &amp; !z, One( [-3] ), Choice(!y &amp; !z | y &amp; z, One( [-2] ), One( [-1] )))&#10; -&gt; &#10;4 : Choice(y &amp; !z, One( [4] ), Choice(!y &amp; !z, One( [3] ), Choice(y &amp; z, One( [8] ), One( [6] ))))" this="44"/>
				<line interaction="-3" text="k (True):&#10;cmu.datatypes.IntTest.testAll()V(One(45))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4 : Choice(y &amp; !z, One( [4] ), Choice(!y &amp; !z, One( [3] ), Choice(y &amp; z, One( [8] ), One( [6] ))))&#10; -&gt; &#10;1 : One( [0] )" this="45"/>
				<line interaction="1" text="? (True):&#10;cmu.datatypes.IntTest.testAll()V(One(46))&#10;cmu.datatypes.IntTest.[testAll](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;Choice(!z, One( [1] ), One( [2] ))" this="46"/>
				<line interaction="1" text="i (z):&#10;cmu.datatypes.IntTest.testDivNull()V(One(56))&#10;cmu.datatypes.IntTest.[testDivNull](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(z, One( [2] ), One( [1] ))" this="56"/>
				<line interaction="1" text="j (y):&#10;cmu.datatypes.IntTest.testDivNull()V(One(59))&#10;cmu.datatypes.IntTest.[testDivNull](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : Choice(y, One( [0] ), One( [3] ))" this="59"/>
				<line interaction="1" text="i (z):&#10;cmu.datatypes.IntTest.testModNull()V(One(73))&#10;cmu.datatypes.IntTest.[testModNull](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(z, One( [2] ), One( [1] ))" this="73"/>
				<line interaction="1" text="j (y):&#10;cmu.datatypes.IntTest.testModNull()V(One(76))&#10;cmu.datatypes.IntTest.[testModNull](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : Choice(y, One( [0] ), One( [3] ))" this="76"/>
			</coverage>
		</File>
		<File name="Integer.java">
			<coverage>
				<line interaction="1" text="value (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.lang.Integer.&lt;init&gt;(I)V(One(660))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEIGHTED___ | WEIGHTED___ &amp; !STRONGLYCONNECTED___:0 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10 }" this="660"/>
			</coverage>
		</File>
		<File name="InterfaceTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.InterfaceTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.InterfaceTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="13"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.InterfaceTest.&lt;clinit&gt;()V(One(15))&#10;cmu.datatypes.InterfaceTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="15"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.InterfaceTest.&lt;clinit&gt;()V(One(17))&#10;cmu.datatypes.InterfaceTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="17"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.InterfaceTest.&lt;clinit&gt;()V(One(19))&#10;cmu.datatypes.InterfaceTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="19"/>
			</coverage>
		</File>
		<File name="LinkedHashMap.java">
			<coverage>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(242))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="198"/>
				<line interaction="1" text="header (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(241))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="241"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.init()V(One(242))&#10;java.util.HashMap.&lt;init&gt;(IF)V(One(262))&#10;java.util.HashMap.&lt;init&gt;()V(One(281))&#10;java.util.LinkedHashMap.&lt;init&gt;()V(One(198))&#10;org.prevayler.foundation.Chunk.&lt;init&gt;([B)V(One(12))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(71))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="242"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$Entry.addBefore(Ljava/util/LinkedHashMap$Entry;)V(One(341))&#10;java.util.LinkedHashMap$Entry.access$600(Ljava/util/LinkedHashMap$Entry;Ljava/util/LinkedHashMap$Entry;)V(One(320))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(444))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56934), One(0))" this="320"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="325"/>
				<line interaction="1" text="after (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$Entry.addBefore(Ljava/util/LinkedHashMap$Entry;)V(One(340))&#10;java.util.LinkedHashMap$Entry.access$600(Ljava/util/LinkedHashMap$Entry;Ljava/util/LinkedHashMap$Entry;)V(One(320))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(444))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56929), One(0))" this="340"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$Entry.addBefore(Ljava/util/LinkedHashMap$Entry;)V(One(341))&#10;java.util.LinkedHashMap$Entry.access$600(Ljava/util/LinkedHashMap$Entry;Ljava/util/LinkedHashMap$Entry;)V(One(320))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(444))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56934), One(0))" this="341"/>
				<line interaction="1" text="expectedModCount (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(375))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(3), One(0))" this="366"/>
				<line interaction="1" text="nextEntry (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(367))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56931), One(0))" this="367"/>
				<line interaction="1" text="expectedModCount (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(375))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(3), One(0))" this="375"/>
				<line interaction="1" text="lastReturned (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.nextEntry()Ljava/util/LinkedHashMap$Entry;(One(398))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/util/Map$Entry;(One(413))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/lang/Object;(One(412))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(32))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56931), One(0))" this="398"/>
				<line interaction="1" text="lastReturned (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.nextEntry()Ljava/util/LinkedHashMap$Entry;(One(398))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/util/Map$Entry;(One(413))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/lang/Object;(One(412))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(32))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56931), One(0))" this="412"/>
				<line interaction="1" text="lastReturned (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.nextEntry()Ljava/util/LinkedHashMap$Entry;(One(398))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/util/Map$Entry;(One(413))&#10;java.util.LinkedHashMap$EntryIterator.next()Ljava/lang/Object;(One(412))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(32))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56931), One(0))" this="413"/>
				<line interaction="1" text="expectedModCount (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(375))&#10;java.util.LinkedHashMap$LinkedHashIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(366))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;)V(One(412))&#10;java.util.LinkedHashMap$EntryIterator.&lt;init&gt;(Ljava/util/LinkedHashMap;Ljava/util/LinkedHashMap$1;)V(One(412))&#10;java.util.LinkedHashMap.newEntryIterator()Ljava/util/Iterator;(One(419))&#10;java.util.HashMap$EntrySet.iterator()Ljava/util/Iterator;(One(1078))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(30))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(3), One(0))" this="419"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="427"/>
				<line interaction="3" text="value (!USE_TRANSIENT_MODE)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(811))&#10;java.util.LinkedHashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(325))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(442))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(53893), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53889))), One(0))" this="442"/>
				<line interaction="1" text="before (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap$Entry.addBefore(Ljava/util/LinkedHashMap$Entry;)V(One(341))&#10;java.util.LinkedHashMap$Entry.access$600(Ljava/util/LinkedHashMap$Entry;Ljava/util/LinkedHashMap$Entry;)V(One(320))&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(444))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(49))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56934), One(0))" this="444"/>
				<line interaction="1" text="size (!USE_TRANSIENT_MODE)&#10;java.util.LinkedHashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(445))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.LinkedHashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(427))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.foundation.Chunk.setParameter(Ljava/lang/String;Ljava/lang/String;)V(One(25))&#10;org.prevayler.implementation.Capsule.toChunk()Lorg/prevayler/foundation/Chunk;(One(72))&#10;org.prevayler.implementation.TransactionTimestamp.toChunk()Lorg/prevayler/foundation/Chunk;(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="445"/>
			</coverage>
		</File>
		<File name="LinkedList.java">
			<coverage>
				<line interaction="1" text="next (MSTPRIM___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(964))&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(125))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(270))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8231 }" this="125"/>
				<line interaction="1" text="first (i)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(126))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(72))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(776)&#10;-&gt;&#10;2: {i:785 ; !i:776 }" this="126"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(130))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(270))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8275 }" this="130"/>
				<line interaction="1" text="size (i)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(131))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(72))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;9: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h  | ...:5 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:6 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:7 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; !d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; !e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; !f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h:8 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h:9 }&#10;-&gt;&#10;10: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:7 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:8 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:9 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i:10 }" this="131"/>
				<line interaction="1" text="modCount (i)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(132))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(72))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;9: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h  | ...:5 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:6 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:7 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; !d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; !e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; !f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h:8 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h:9 }&#10;-&gt;&#10;10: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:7 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:8 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:9 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i:10 }" this="132"/>
				<line interaction="8" text="? (j):&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(139))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(75))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;9 : {h &amp; j: &lt;784&gt;  ; f &amp; !g &amp; !h &amp; j: &lt;782&gt;  ; g &amp; !h &amp; j: &lt;783&gt;  ; d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j: &lt;780&gt;  ; e &amp; !f &amp; !g &amp; !h &amp; j: &lt;781&gt;  ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j: &lt;778&gt;  ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j: &lt;779&gt;  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j: &lt;776&gt;  ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j: &lt;777&gt;  }" this="139"/>
				<line interaction="9" text="prev (j)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(75))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;10: {!j:0 ; h &amp; j:784 ; f &amp; !g &amp; !h &amp; j:782 ; g &amp; !h &amp; j:783 ; d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:780 ; e &amp; !f &amp; !g &amp; !h &amp; j:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:778 ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:777 }" this="140"/>
				<line interaction="1" text="last (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(141))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; BFS___ &amp; NUMBER___:11695 }&#10;-&gt;&#10;3: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11696 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11695 }" this="141"/>
				<line interaction="1" text="first (BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(143))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; BFS___ &amp; NUMBER___:11686 }" this="143"/>
				<line interaction="1" text="next (UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___ | UNDIRECTED___ &amp; !BFS___ | UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___:0 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11835 }" this="145"/>
				<line interaction="1" text="size (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(146))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; BFS___ &amp; NUMBER___:9 }&#10;-&gt;&#10;3: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:9 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:10 }" this="146"/>
				<line interaction="2" text="modCount (BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !CONNECTED___:0 ; BFS___ &amp; CONNECTED___:160 }&#10;-&gt;&#10;4: {!BFS___ | BFS___ &amp; !NUMBER___ &amp; !CONNECTED___:0 ; BFS___ &amp; NUMBER___ &amp; !CONNECTED___:1 ; BFS___ &amp; NUMBER___ &amp; CONNECTED___:161 ; BFS___ &amp; !NUMBER___ &amp; CONNECTED___:160 }" this="147"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(156))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(347))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8350 }" this="156"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(157))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(347))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8348 }" this="157"/>
				<line interaction="-1" text="item (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(173))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:2016 }&#10;-&gt;&#10;1: One(0)" this="173"/>
				<line interaction="-1" text="next (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(174))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8280 }&#10;-&gt;&#10;1: One(0)" this="174"/>
				<line interaction="-1" text="first (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(175))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8280 }&#10;-&gt;&#10;1: One(0)" this="175"/>
				<line interaction="-1" text="last (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(177))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8280 }&#10;-&gt;&#10;1: One(0)" this="177"/>
				<line interaction="-1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(179))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8356 }&#10;-&gt;&#10;1: One(0)" this="179"/>
				<line interaction="-1" text="size (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(180))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:1 }&#10;-&gt;&#10;1: One(0)" this="180"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(209))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; SHORTEST___: &lt;2042&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___: &lt;2026&gt;  }" this="209"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(210))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="210"/>
				<line interaction="1" text="first (BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(214))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; BFS___ &amp; NUMBER___:11695 }&#10;-&gt;&#10;3: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11696 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11697 }" this="214"/>
				<line interaction="-1" text="next (MSTPRIM___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(216))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(319))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8274 }&#10;-&gt;&#10;1: One(0)" this="216"/>
				<line interaction="-1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(217))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(319))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8280 }&#10;-&gt;&#10;1: One(0)" this="217"/>
				<line interaction="-1" text="last (BFS___ &amp; CONNECTED___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(221))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.ConnectedComponents()V({CONNECTED___:130 })&#10;GPL.Graph.run(LGPL/Vertex;)V({CONNECTED___:641 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !CONNECTED___:0 ; BFS___ &amp; CONNECTED___:11679 }&#10;-&gt;&#10;1: One(0)" this="221"/>
				<line interaction="-1" text="prev (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(223))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;({BFS___ &amp; NUMBER___:524 })&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!UNDIRECTED___ &amp; !BFS___ | !UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | UNDIRECTED___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11832 }&#10;-&gt;&#10;1: One(0)" this="223"/>
				<line interaction="-1" text="next (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(224))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;({BFS___ &amp; NUMBER___:524 })&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!UNDIRECTED___ &amp; !BFS___ | !UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | UNDIRECTED___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:11834 }&#10;-&gt;&#10;1: One(0)" this="224"/>
				<line interaction="-1" text="item (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(227))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;({BFS___ &amp; NUMBER___:524 })&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!UNDIRECTED___ &amp; !BFS___ | !UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | UNDIRECTED___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:2360 }&#10;-&gt;&#10;1: One(0)" this="227"/>
				<line interaction="1" text="size (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; SHORTEST___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(228))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:18 }&#10;-&gt;&#10;3: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; SHORTEST___:17 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___:18 }" this="228"/>
				<line interaction="1" text="modCount (!UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___)&#10;java.util.LinkedList.unlink(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(229))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V({!UNDIRECTED___ &amp; !BFS___ | !UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___ | UNDIRECTED___ &amp; !BFS___ | UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; MSTPRIM___:125 })&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4: {!BFS___ | BFS___ &amp; !NUMBER___ &amp; !CONNECTED___:0 ; BFS___ &amp; !NUMBER___ &amp; CONNECTED___:748 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; CONNECTED___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; CONNECTED___ &amp; MSTPRIM___:1094 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !CONNECTED___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; CONNECTED___ &amp; !MSTPRIM___ &amp; SHORTEST___:346 }&#10;-&gt;&#10;5: {!BFS___ | BFS___ &amp; !NUMBER___ &amp; !CONNECTED___:0 ; BFS___ &amp; !NUMBER___ &amp; CONNECTED___:748 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; CONNECTED___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; CONNECTED___ &amp; MSTPRIM___:1095 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !CONNECTED___ &amp; !MSTPRIM___ &amp; !SHORTEST___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !CONNECTED___ &amp; MSTPRIM___:347 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ | UNDIRECTED___ &amp; BFS___ &amp; NUMBER___ &amp; !MSTPRIM___ &amp; SHORTEST___:346 }" this="229"/>
				<line interaction="1" text="? (True):&#10;java.util.LinkedList.getFirst()Ljava/lang/Object;(One(240))&#10;cmu.datatypes.LinkedListTest.testSameList()V(One(33))&#10;cmu.datatypes.LinkedListTest.[testSameList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!a, One( &lt;1157&gt; ), One( &lt;899&gt; ))" this="240"/>
				<line interaction="-1" text="size (MSTPRIM___)&#10;java.util.LinkedList.unlinkFirst(Ljava/util/LinkedList$Node;)Ljava/lang/Object;(One(180))&#10;java.util.LinkedList.removeFirst()Ljava/lang/Object;(One(269))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(286))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:1 }&#10;-&gt;&#10;1: One(0)" this="269"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(130))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(270))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8275 }" this="291"/>
				<line interaction="9" text="prev (j)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(75))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;10: {!j:0 ; h &amp; j:784 ; f &amp; !g &amp; !h &amp; j:782 ; g &amp; !h &amp; j:783 ; d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:780 ; e &amp; !f &amp; !g &amp; !h &amp; j:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:778 ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:777 }" this="336"/>
				<line interaction="1" text="modCount (MSTKRUSKAL___)&#10;java.util.LinkedList.clear()V(One(460))&#10;GPL.Graph.Kruskal()LGPL/Graph;(One(508))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(606))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="460"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(573))&#10;java.util.LinkedList.get(I)Ljava/lang/Object;(One(475))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(123))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="475"/>
				<line interaction="1" text="next (SHORTEST___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(145))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(508))&#10;GPL.Graph.ShortestPath(LGPL/Vertex;)LGPL/Graph;(One(751))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(597))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:5051 }" this="508"/>
				<line interaction="1" text="prev (MSTPRIM___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(156))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(347))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8350 }" this="510"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(573))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="524"/>
				<line interaction="2" text="? (!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f | !a &amp; !b &amp; !c &amp; !d &amp; e | !a &amp; !b &amp; !c &amp; d | !a &amp; !b &amp; c | !a &amp; b | a):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(568))&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(877))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i: [0]  ; i: &lt;785&gt;  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; e &amp; !i | !a &amp; !b &amp; !c &amp; d &amp; !i | !a &amp; !b &amp; c &amp; !i | !a &amp; b &amp; !i | a &amp; !i: &lt;776&gt;  }" this="568"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(573))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="573"/>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="866"/>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="873"/>
				<line interaction="1" text="this$0 (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(875))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(218))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:696 }" this="875"/>
				<line interaction="2" text="? (!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f | !a &amp; !b &amp; !c &amp; !d &amp; e | !a &amp; !b &amp; !c &amp; d | !a &amp; !b &amp; c | !a &amp; b | a):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(568))&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(877))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i: [0]  ; i: &lt;785&gt;  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; !i | !a &amp; !b &amp; !c &amp; !d &amp; e &amp; !i | !a &amp; !b &amp; !c &amp; d &amp; !i | !a &amp; !b &amp; c &amp; !i | !a &amp; b &amp; !i | a &amp; !i: &lt;776&gt;  }" this="877"/>
				<line interaction="8" text="lastReturned (!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f | !a &amp; !b &amp; !c &amp; !d &amp; e | !a &amp; !b &amp; !c &amp; d | !a &amp; !b &amp; c | !a &amp; b | a)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(890))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(457))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {i:785 ; !i:776 }&#10;-&gt;&#10;10: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; !i:786 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; !i:784 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; !i:782 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; !i:783 ; !a &amp; !b &amp; !c &amp; d &amp; !i:780 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; !i:781 ; !a &amp; b &amp; !i:778 ; !a &amp; !b &amp; c &amp; !i:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; i | !a &amp; !b &amp; !c &amp; !d &amp; e &amp; i | !a &amp; !b &amp; !c &amp; d &amp; i | !a &amp; !b &amp; c &amp; i | !a &amp; b &amp; i | a &amp; i:776 ; a &amp; !i:777 }" this="890"/>
				<line interaction="9" text="next (True)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(891))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(457))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {i:785 ; !i:776 }&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:0 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; !i:786 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; !i:784 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; !i:782 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; !i:783 ; !a &amp; !b &amp; !c &amp; d &amp; !i:780 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; !i:781 ; !a &amp; b &amp; !i:778 ; !a &amp; !b &amp; c &amp; !i:779 ; i:776 ; a &amp; !i:777 }" this="891"/>
				<line interaction="1" text="nextIndex (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.next()Ljava/lang/Object;(One(892))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(220))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="892"/>
				<line interaction="1" text="item (STRONGLYCONNECTED___)&#10;java.util.LinkedList$ListItr.set(Ljava/lang/Object;)V(One(937))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(221))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2352)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:2352 ; STRONGLYCONNECTED___:2280 }" this="937"/>
				<line interaction="2" text="item (BFS___ &amp; NUMBER___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(963))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.random1Test()V(One(12))&#10;cmu.testprograms.GPLTest.[random1Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: {!BFS___ | BFS___ &amp; !NUMBER___:0 ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:2322 ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___:2066 }" this="963"/>
				<line interaction="1" text="next (MSTPRIM___)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(964))&#10;java.util.LinkedList.linkBefore(Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(156))&#10;java.util.LinkedList.add(ILjava/lang/Object;)V(One(510))&#10;GPL.Graph.Prim(LGPL/Vertex;)LGPL/Graph;(One(347))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(615))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:8364 }" this="964"/>
				<line interaction="9" text="prev (j)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(75))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;10: {!j:0 ; h &amp; j:784 ; f &amp; !g &amp; !h &amp; j:782 ; g &amp; !h &amp; j:783 ; d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:780 ; e &amp; !f &amp; !g &amp; !h &amp; j:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:778 ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:777 }" this="965"/>
			</coverage>
		</File>
		<File name="LinkedListTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.LinkedListTest.&lt;clinit&gt;()V(One(16))&#10;cmu.datatypes.LinkedListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="16"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.LinkedListTest.&lt;clinit&gt;()V(One(18))&#10;cmu.datatypes.LinkedListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="18"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.LinkedListTest.&lt;clinit&gt;()V(One(20))&#10;cmu.datatypes.LinkedListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="20"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.LinkedListTest.&lt;clinit&gt;()V(One(22))&#10;cmu.datatypes.LinkedListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="22"/>
				<line interaction="1" text="modCount (a)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.LinkedListTest.testSameList()V(One(29))&#10;cmu.datatypes.LinkedListTest.[testSameList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="29"/>
				<line interaction="1" text="item (!a)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(963))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.LinkedListTest.testSameList()V(One(31))&#10;cmu.datatypes.LinkedListTest.[testSameList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!a, One(1031), One(0))" this="31"/>
				<line interaction="1" text="? (True):&#10;java.util.LinkedList.getFirst()Ljava/lang/Object;(One(240))&#10;cmu.datatypes.LinkedListTest.testSameList()V(One(33))&#10;cmu.datatypes.LinkedListTest.[testSameList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!a, One( &lt;1157&gt; ), One( &lt;899&gt; ))" this="33"/>
				<line interaction="1" text="modCount (a)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.LinkedListTest.testDifferentList()V(One(42))&#10;cmu.datatypes.LinkedListTest.[testDifferentList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="42"/>
				<line interaction="1" text="list (!a):&#10;cmu.datatypes.LinkedListTest.testDifferentList()V(One(44))&#10;cmu.datatypes.LinkedListTest.[testDifferentList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;635&gt; )&#10; -&gt; &#10;2 : Choice(!a, One( &lt;900&gt; ), One( &lt;635&gt; ))" this="44"/>
				<line interaction="1" text="modCount (!a)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.LinkedListTest.testDifferentList()V(One(45))&#10;cmu.datatypes.LinkedListTest.[testDifferentList](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!a, One(1), One(0))" this="45"/>
				<line interaction="1" text="modCount (b)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.LinkedListTest.testDifferentList2()V(One(57))&#10;cmu.datatypes.LinkedListTest.[testDifferentList2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: Choice(b, One(2), One(1))" this="57"/>
				<line interaction="1" text="? (b):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(568))&#10;java.util.LinkedList.get(I)Ljava/lang/Object;(One(475))&#10;cmu.datatypes.LinkedListTest.testDifferentList2()V(One(59))&#10;cmu.datatypes.LinkedListTest.[testDifferentList2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(b, One( &lt;899&gt; ), One( [0] ))" this="59"/>
			</coverage>
		</File>
		<File name="ListTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a:0 ; a:1 }" this="13"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(15))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!b:0 ; b:1 }" this="15"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(17))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!c:0 ; c:1 }" this="17"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(19))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!d:0 ; d:1 }" this="19"/>
				<line interaction="1" text="e (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(21))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!e:0 ; e:1 }" this="21"/>
				<line interaction="1" text="f (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(23))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!f:0 ; f:1 }" this="23"/>
				<line interaction="1" text="g (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!g:0 ; g:1 }" this="25"/>
				<line interaction="1" text="h (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!h:0 ; h:1 }" this="27"/>
				<line interaction="1" text="i (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(29))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!i:0 ; i:1 }" this="29"/>
				<line interaction="1" text="j (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(31))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!j:0 ; j:1 }" this="31"/>
				<line interaction="1" text="k (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(33))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!k:0 ; k:1 }" this="33"/>
				<line interaction="1" text="l (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(35))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!l:0 ; l:1 }" this="35"/>
				<line interaction="1" text="m (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(37))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!m:0 ; m:1 }" this="37"/>
				<line interaction="1" text="n (True)&#10;cmu.datatypes.ListTest.&lt;clinit&gt;()V(One(39))&#10;cmu.datatypes.ListTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!n:0 ; n:1 }" this="39"/>
				<line interaction="1" text="modCount (a)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(48))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {!a:1 ; a:2 }" this="48"/>
				<line interaction="2" text="prev (b)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(51))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: {!b:0 ; !a &amp; b:776 ; a &amp; b:777 }" this="51"/>
				<line interaction="3" text="prev (c)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(54))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: {!c:0 ; b &amp; c:778 ; !a &amp; !b &amp; c:776 ; a &amp; !b &amp; c:777 }" this="54"/>
				<line interaction="4" text="prev (d)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(57))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;5: {!d:0 ; b &amp; !c &amp; d:778 ; c &amp; d:779 ; !a &amp; !b &amp; !c &amp; d:776 ; a &amp; !b &amp; !c &amp; d:777 }" this="57"/>
				<line interaction="5" text="prev (e)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(60))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;6: {!e:0 ; d &amp; e:780 ; b &amp; !c &amp; !d &amp; e:778 ; c &amp; !d &amp; e:779 ; !a &amp; !b &amp; !c &amp; !d &amp; e:776 ; a &amp; !b &amp; !c &amp; !d &amp; e:777 }" this="60"/>
				<line interaction="6" text="prev (f)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(63))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;7: {!f:0 ; d &amp; !e &amp; f:780 ; e &amp; f:781 ; b &amp; !c &amp; !d &amp; !e &amp; f:778 ; c &amp; !d &amp; !e &amp; f:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f:777 }" this="63"/>
				<line interaction="7" text="prev (g)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(66))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;8: {!g:0 ; f &amp; g:782 ; d &amp; !e &amp; !f &amp; g:780 ; e &amp; !f &amp; g:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g:778 ; c &amp; !d &amp; !e &amp; !f &amp; g:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g:777 }" this="66"/>
				<line interaction="8" text="prev (h)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(69))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;9: {!h:0 ; f &amp; !g &amp; h:782 ; g &amp; h:783 ; d &amp; !e &amp; !f &amp; !g &amp; h:780 ; e &amp; !f &amp; !g &amp; h:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h:778 ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h:777 }" this="69"/>
				<line interaction="1" text="modCount (i)&#10;java.util.LinkedList.linkFirst(Ljava/lang/Object;)V(One(132))&#10;java.util.LinkedList.addFirst(Ljava/lang/Object;)V(One(291))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(72))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;9: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h  | ...:5 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:6 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h  | ...:7 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; !d &amp; e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; !e &amp; f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; !f &amp; g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g &amp; h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h:8 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h:9 }&#10;-&gt;&#10;10: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:7 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:8 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i  | ...:9 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; i:10 }" this="72"/>
				<line interaction="9" text="prev (j)&#10;java.util.LinkedList$Node.&lt;init&gt;(Ljava/util/LinkedList$Node;Ljava/lang/Object;Ljava/util/LinkedList$Node;)V(One(965))&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(140))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(75))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;10: {!j:0 ; h &amp; j:784 ; f &amp; !g &amp; !h &amp; j:782 ; g &amp; !h &amp; j:783 ; d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:780 ; e &amp; !f &amp; !g &amp; !h &amp; j:781 ; b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:778 ; c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:779 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:776 ; a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j:777 }" this="75"/>
				<line interaction="10" text="expectedModCount (True)&#10;java.util.LinkedList$ListItr.&lt;init&gt;(Ljava/util/LinkedList;I)V(One(873))&#10;java.util.LinkedList.listIterator(I)Ljava/util/ListIterator;(One(866))&#10;java.util.AbstractList.listIterator()Ljava/util/ListIterator;(One(299))&#10;java.util.AbstractSequentialList.iterator()Ljava/util/Iterator;(One(239))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(450))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;11: {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; !i:1 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; !j &amp; i  | ...:2 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; !h &amp; j &amp; i  | ...:3 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; !g &amp; h &amp; j &amp; i  | ...:4 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !f &amp; g &amp; h &amp; j &amp; i  | ...:5 ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:6 ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:7 ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:8 ; !a &amp; !b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:9 ; !a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i  | ...:10 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:11 }" this="90"/>
			</coverage>
		</File>
		<File name="LogEntry.java">
			<coverage>
				<line interaction="1" text="source (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccountLong.LogEntry.&lt;init&gt;(LBankAccountLong/Account;LBankAccountLong/Account;J)V(One(20))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(63))&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog:662 }" this="20"/>
				<line interaction="1" text="destination (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccountLong.LogEntry.&lt;init&gt;(LBankAccountLong/Account;LBankAccountLong/Account;J)V(One(21))&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(63))&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog:666 }" this="21"/>
				<line interaction="1" text="value (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccountFloat.LogEntry.&lt;init&gt;(LBankAccountFloat/Account;LBankAccountFloat/Account;F)V(One(22))&#10;BankAccountFloat.Transaction.transfer(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z(One(63))&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog:1148846080 }" this="22"/>
			</coverage>
		</File>
		<File name="LongTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(14))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="14"/>
				<line interaction="1" text="b (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(16))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="16"/>
				<line interaction="1" text="c (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(18))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="18"/>
				<line interaction="1" text="d (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(20))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="20"/>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(23))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="23"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(25))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="25"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.LongTest.&lt;clinit&gt;()V(One(27))&#10;cmu.datatypes.LongTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="27"/>
				<line interaction="1" text="k (True):&#10;cmu.datatypes.LongTest.testLong()V(One(43))&#10;cmu.datatypes.LongTest.[testLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!y | y &amp; z, One( [-1] ), One( [0] ))" this="43"/>
				<line interaction="-1" text="k (True):&#10;cmu.datatypes.LongTest.testLong()V(One(44))&#10;cmu.datatypes.LongTest.[testLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : Choice(!y | y &amp; z, One( [-1] ), One( [0] ))&#10; -&gt; &#10;1 : One( [0] )" this="44"/>
			</coverage>
		</File>
		<File name="Main.java">
			<coverage>
				<line interaction="4" text="oldvalueA (transaction):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(64))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;5 : {!transaction: [0]  ; interest &amp; transaction &amp; !dailylimit: [1080385536]  ; !interest &amp; transaction &amp; !dailylimit: [1080377344]  ; interest &amp; transaction &amp; dailylimit: [1080631296]  ; !interest &amp; transaction &amp; dailylimit: [1080623104]  }" this="64"/>
				<line interaction="4" text="oldvalueB (transaction):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(65))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;5 : {!transaction: [0]  ; !interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; logging &amp; transaction &amp; !dailylimit: [1081794560]  ; interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; logging &amp; transaction &amp; !dailylimit: [1081798656]  ; interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; dailylimit | interest &amp; !logging &amp; transaction &amp; transactionlog | interest &amp; logging &amp; transaction &amp; dailylimit: [1081675776]  ; !interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; dailylimit | !interest &amp; !logging &amp; transaction &amp; transactionlog | !interest &amp; logging &amp; transaction &amp; dailylimit: [1081671680]  }" this="65"/>
				<line interaction="2" text="oldvalueA (transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(67))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!transaction: [0]  ; interest &amp; transaction: [171]  ; !interest &amp; transaction: [170]  }" this="67"/>
				<line interaction="2" text="newvalueA (transaction):&#10;BankAccountLong.Main.&lt;init&gt;()V(One(68))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!transaction: [0]  ; interest &amp; transaction: [1106771968]  ; !interest &amp; transaction: [1106247680]  }" this="68"/>
				<line interaction="2" text="newvalueB (transaction):&#10;BankAccountLong.Main.&lt;init&gt;()V(One(69))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!transaction: [0]  ; !interest &amp; transaction: [1141800960]  ; interest &amp; transaction: [1141817344]  }" this="69"/>
				<line interaction="2" text="newvalueA (transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(71))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!transaction: [0]  ; interest &amp; transaction: [31]  ; !interest &amp; transaction: [30]  }" this="71"/>
				<line interaction="2" text="newvalueB (transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(72))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!transaction: [0]  ; interest &amp; transaction: [571]  ; !interest &amp; transaction: [570]  }" this="72"/>
				<line interaction="4" text="newvalueA (transaction &amp; dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(73))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; !interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; logging &amp; transaction &amp; !dailylimit: [1077805056]  ; interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; logging &amp; transaction &amp; !dailylimit: [1077870592]  ; interest &amp; transaction &amp; dailylimit: [1080631296]  ; !interest &amp; transaction &amp; dailylimit: [1080623104]  }" this="73"/>
				<line interaction="4" text="newvalueB (transaction &amp; dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(74))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; interest &amp; transaction &amp; dailylimit: [1081675776]  ; !interest &amp; transaction &amp; dailylimit: [1081671680]  ; interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; logging &amp; transaction &amp; !dailylimit: [1082251264]  ; !interest &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; logging &amp; transaction &amp; !dailylimit: [1082249216]  }" this="74"/>
				<line interaction="6" text="newvalueA (overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | overdraft &amp; logging &amp; transaction &amp; !dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(83))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; !interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1077805056]  ; interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1077870592]  ; interest &amp; transaction &amp; dailylimit: [1080631296]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [-1064415232]  ; !interest &amp; transaction &amp; dailylimit: [1080623104]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; overdraft &amp;..." this="83"/>
				<line interaction="6" text="newvalueB (overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | overdraft &amp; logging &amp; transaction &amp; !dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(84))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1083738112]  ; interest &amp; transaction &amp; dailylimit: [1081675776]  ; !interest &amp; transaction &amp; dailylimit: [1081671680]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1083739136]  ; interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1082251264]  ; !interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; !overdraft &amp; ..." this="84"/>
				<line interaction="4" text="newvalueA (overdraft &amp; !logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(86))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!transaction: [0]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | interest &amp; overdraft &amp; logging &amp; transaction: [-969]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !interest &amp; overdraft &amp; logging &amp; transaction: [-970]  ; interest &amp; !overdraft &amp; transaction | interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [31]  ; !interest &amp; !overdraft &amp; transaction | !interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [30]  }" this="86"/>
				<line interaction="4" text="newvalueB (overdraft &amp; !logging &amp; transaction &amp; !transactionlog | overdraft &amp; logging &amp; transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(87))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!transaction: [0]  ; interest &amp; !overdraft &amp; transaction | interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [571]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !interest &amp; overdraft &amp; logging &amp; transaction: [1570]  ; !interest &amp; !overdraft &amp; transaction | !interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [570]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | interest &amp; overdraft &amp; logging &amp; transaction: [1571]  }" this="87"/>
				<line interaction="6" text="newvalueA (!overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !overdraft &amp; !logging &amp; transaction &amp; transactionlog &amp; dailylimit | !overdraft &amp; logging &amp; transaction | overdraft &amp; transaction &amp; dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(89))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; !interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1077805056]  ; interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1077870592]  ; interest &amp; transaction &amp; dailylimit: [1080631296]  ; !interest &amp; transaction &amp; dailylimit: [1080623104]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [-1064415232]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; overdraft &amp;..." this="89"/>
				<line interaction="6" text="newvalueB (!overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !overdraft &amp; !logging &amp; transaction &amp; transactionlog &amp; dailylimit | !overdraft &amp; logging &amp; transaction | overdraft &amp; transaction &amp; dailylimit):&#10;BankAccountDouble.Main.&lt;init&gt;()V(One(90))&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!logging &amp; !transaction | !logging &amp; transaction &amp; transactionlog &amp; !dailylimit | logging &amp; !transaction: [0]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1083738112]  ; interest &amp; transaction &amp; dailylimit: [1081675776]  ; !interest &amp; transaction &amp; dailylimit: [1081671680]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1083739136]  ; interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | interest &amp; !overdraft &amp; logging &amp; transaction &amp; !dailylimit: [1082251264]  ; !interest &amp; !overdraft &amp; !logging &amp; transaction &amp; !transactionlog &amp; !dailylimit | !interest &amp; !overdraft &amp; ..." this="90"/>
				<line interaction="4" text="newvalueA (!overdraft &amp; transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(92))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!transaction: [0]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | interest &amp; overdraft &amp; logging &amp; transaction: [-969]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !interest &amp; overdraft &amp; logging &amp; transaction: [-970]  ; interest &amp; !overdraft &amp; transaction: [31]  ; !interest &amp; !overdraft &amp; transaction: [30]  }" this="92"/>
				<line interaction="4" text="newvalueB (!overdraft &amp; transaction):&#10;BankAccount.Main.&lt;init&gt;()V(One(93))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!transaction: [0]  ; !interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | !interest &amp; overdraft &amp; logging &amp; transaction: [1570]  ; interest &amp; !overdraft &amp; transaction: [571]  ; interest &amp; overdraft &amp; !logging &amp; transaction &amp; !transactionlog | interest &amp; overdraft &amp; logging &amp; transaction: [1571]  ; !interest &amp; !overdraft &amp; transaction: [570]  }" this="93"/>
				<line interaction="1" text="Src (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(156))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!Src:0 ; Src:1 }" this="156"/>
				<line interaction="1" text="SrcProg (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(158))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SrcProg:0 ; SrcProg:1 }" this="158"/>
				<line interaction="1" text="Src2 (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(160))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!Src2:0 ; Src2:1 }" this="160"/>
				<line interaction="1" text="DIRECTED___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(164))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!DIRECTED___:0 ; DIRECTED___:1 }" this="164"/>
				<line interaction="1" text="UNDIRECTED___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(166))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___:0 ; UNDIRECTED___:1 }" this="166"/>
				<line interaction="1" text="WEIGHTED___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(168))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEIGHTED___:0 ; WEIGHTED___:1 }" this="168"/>
				<line interaction="1" text="SEARCH___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(170))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SEARCH___:0 ; SEARCH___:1 }" this="170"/>
				<line interaction="1" text="BFS___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(172))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!BFS___:0 ; BFS___:1 }" this="172"/>
				<line interaction="1" text="DFS___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(174))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!DFS___:0 ; DFS___:1 }" this="174"/>
				<line interaction="1" text="NUMBER___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(176))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!NUMBER___:0 ; NUMBER___:1 }" this="176"/>
				<line interaction="1" text="CONNECTED___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(178))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!CONNECTED___:0 ; CONNECTED___:1 }" this="178"/>
				<line interaction="1" text="STRONGLYCONNECTED___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(180))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="180"/>
				<line interaction="1" text="TRANSPOSE___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(182))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!TRANSPOSE___:0 ; TRANSPOSE___:1 }" this="182"/>
				<line interaction="1" text="CYCLE___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(184))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!CYCLE___:0 ; CYCLE___:1 }" this="184"/>
				<line interaction="1" text="MSTPRIM___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(186))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTPRIM___:0 ; MSTPRIM___:1 }" this="186"/>
				<line interaction="1" text="MSTKRUSKAL___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(188))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!MSTKRUSKAL___:0 ; MSTKRUSKAL___:1 }" this="188"/>
				<line interaction="1" text="SHORTEST___ (True)&#10;GPL.Main.&lt;clinit&gt;()V(One(190))&#10;GPL.Main.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!SHORTEST___:0 ; SHORTEST___:1 }" this="190"/>
			</coverage>
		</File>
		<File name="Matcher.java">
			<coverage>
				<line interaction="1" text="first (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(150))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(-1), One(0))" this="150"/>
				<line interaction="1" text="oldLast (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(155))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(-1), One(0))" this="155"/>
				<line interaction="1" text="anchoringBounds (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(207))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="207"/>
				<line interaction="1" text="parentPattern (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(219))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(2760), One(0))" this="219"/>
				<line interaction="3" text="text (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(220))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53889), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53893))), One(0))" this="220"/>
				<line interaction="1" text="groups (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(224))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56968), One(0))" this="224"/>
				<line interaction="1" text="locals (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(225))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56969), One(0))" this="225"/>
				<line interaction="2" text="to (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.reset()Ljava/util/regex/Matcher;(One(308))&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(228))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(1), One(13)), One(0))" this="228"/>
				<line interaction="2" text="to (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.reset()Ljava/util/regex/Matcher;(One(308))&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(228))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(1), One(13)), One(0))" this="308"/>
				<line interaction="2" text="oldLast (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.match(II)Z(One(1224))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(13), One(1)), One(0))" this="559"/>
				<line interaction="-1" text="first (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.match(II)Z(One(1216))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(-1), One(0))&#10;-&gt;&#10;1: One(0)" this="1216"/>
				<line interaction="-1" text="oldLast (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.match(II)Z(One(1217))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(-1), One(0))&#10;-&gt;&#10;1: One(0)" this="1217"/>
				<line interaction="1" text="acceptMode (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.match(II)Z(One(1220))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="1220"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4155))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [2] ), One( [1] ))" this="1221"/>
				<line interaction="2" text="oldLast (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.match(II)Z(One(1224))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(13), One(1)), One(0))" this="1224"/>
			</coverage>
		</File>
		<File name="MinePump.java">
			<coverage>
				<line interaction="1" text="pumpRunning (action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneQuery &amp; methaneAlarm  | ...)&#10;MinePumpSystem.MinePump.activatePump__before__methaneQuery()V(One(79))&#10;MinePumpSystem.MinePump.activatePump__role__methaneQuery()V(One(84))&#10;MinePumpSystem.MinePump.activatePump()V({action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneQuery &amp; methaneAlarm  | ...:92 })&#10;MinePumpSystem.MinePump.processEnvironment__role__highWaterSensor()V({action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm:31 })&#10;MinePumpSystem.MinePump.processEnvironment__before__lowWaterSensor()V({!action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm | !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action3_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneAlarm:40 })&#10;MinePumpSystem.MinePump.processEnvironment__role__lowWaterSensor()V(One(50))&#10;MinePumpSystem.MinePump.processEnvironment__before__methaneAlarm()V({!action3_1 &amp; !action4_1 &amp; lowWaterSensor &amp; methaneAlarm | !action3_1 &amp; action4_1 &amp; lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action3_1 &amp; lowWaterSensor &amp; methaneAlarm:56 })&#10;MinePumpSystem.MinePump.processEnvironment__role__methaneAlarm()V(One(66))&#10;MinePumpSystem.MinePump.processEnvironment()V({!action3_1 &amp; !action4_1 &amp; methaneAlarm | !action3_1 &amp; action4_1 &amp; methaneAlarm &amp; !stopCommand | action3_1 &amp; methaneAlarm:72 })&#10;MinePumpSystem.MinePump.timeShift()V({!action3_1 &amp; !action4_1 | !action3_1 &amp; action4_1 &amp; !stopCommand | action3_1:22 })&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(171))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; lowWaterSensor &amp; methaneQuery &amp; methaneAlarm  | ...:1 }" this="79"/>
				<line interaction="1" text="systemActive (!action3_1 &amp; action4_1 &amp; stopCommand)&#10;MinePumpSystem.MinePump.stopSystem()V(One(129))&#10;MinePumpSystem.Actions.stopSystem__role__stopCommand()V(One(27))&#10;MinePumpSystem.Actions.stopSystem()V(One(32))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V({!action3_1 &amp; action4_1:166 })&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {!action3_1 &amp; action4_1 &amp; stopCommand:0 ; !action3_1 &amp; !action4_1 | !action3_1 &amp; action4_1 &amp; !stopCommand | action3_1:1 }" this="129"/>
			</coverage>
		</File>
		<File name="NativeTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.peers.NativeTest.&lt;clinit&gt;()V(One(14))&#10;cmu.peers.NativeTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a, One(1), One(0))" this="14"/>
				<line interaction="1" text="b (True)&#10;cmu.peers.NativeTest.&lt;clinit&gt;()V(One(16))&#10;cmu.peers.NativeTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(b, One(1), One(0))" this="16"/>
				<line interaction="1" text="c (True)&#10;cmu.peers.NativeTest.&lt;clinit&gt;()V(One(18))&#10;cmu.peers.NativeTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(c, One(1), One(0))" this="18"/>
				<line interaction="1" text="d (True)&#10;cmu.peers.NativeTest.&lt;clinit&gt;()V(One(20))&#10;cmu.peers.NativeTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(d, One(1), One(0))" this="20"/>
				<line interaction="1" text="i (True):&#10;cmu.peers.NativeTest.intTest()V(One(25))&#10;cmu.peers.NativeTest.[intTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(a, One( [1] ), One( [3] ))" this="25"/>
				<line interaction="1" text="j (True):&#10;cmu.peers.NativeTest.intTest()V(One(26))&#10;cmu.peers.NativeTest.[intTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(b, One( [2] ), One( [4] ))" this="26"/>
				<line interaction="2" text="max (True):&#10;cmu.peers.NativeTest.intTest()V(One(27))&#10;cmu.peers.NativeTest.[intTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : Choice(a &amp; b, One( [2] ), Choice(!a &amp; !b | a, One( [4] ), One( [3] )))" this="27"/>
				<line interaction="1" text="i (True):&#10;cmu.peers.NativeTest.floatTest()V(One(44))&#10;cmu.peers.NativeTest.[floatTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(a, One( [1065353216] ), One( [1077936128] ))" this="44"/>
				<line interaction="1" text="j (True):&#10;cmu.peers.NativeTest.floatTest()V(One(45))&#10;cmu.peers.NativeTest.[floatTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(b, One( [1073741824] ), One( [1082130432] ))" this="45"/>
				<line interaction="2" text="max (True):&#10;cmu.peers.NativeTest.floatTest()V(One(46))&#10;cmu.peers.NativeTest.[floatTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : Choice(a &amp; b, One( [1073741824] ), Choice(!a &amp; !b | a, One( [1082130432] ), One( [1077936128] )))" this="46"/>
				<line interaction="1" text="i (True):&#10;cmu.peers.NativeTest.doubleTest()V(One(63))&#10;cmu.peers.NativeTest.[doubleTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!a, One( [1074266112] ), One( [1072693248] ))" this="63"/>
				<line interaction="1" text="j (True):&#10;cmu.peers.NativeTest.doubleTest()V(One(64))&#10;cmu.peers.NativeTest.[doubleTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!b, One( [1074790400] ), One( [1073741824] ))" this="64"/>
				<line interaction="2" text="max (True):&#10;cmu.peers.NativeTest.doubleTest()V(One(65))&#10;cmu.peers.NativeTest.[doubleTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : Choice(a &amp; b, One( [1073741824] ), Choice(!a &amp; !b | a, One( [1074790400] ), One( [1074266112] )))" this="65"/>
				<line interaction="1" text="x (True):&#10;cmu.peers.NativeTest.conditionalSinTest()V(One(112))&#10;cmu.peers.NativeTest.[conditionalSinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!a, One( [1073291771] ), One( [0] ))" this="112"/>
				<line interaction="1" text="res (True):&#10;cmu.peers.NativeTest.conditionalSinTest()V(One(113))&#10;cmu.peers.NativeTest.[conditionalSinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(a, One( [0] ), One( [1072693248] ))" this="113"/>
			</coverage>
		</File>
		<File name="NonStaticVariabilityAwareTest.java">
			<coverage>
				<line interaction="1" text="rounds (cmu.NonStaticFeature.a-626):&#10;cmu.NonStaticVariabilityAwareTest.simpleForTest()V(One(27))&#10;cmu.NonStaticVariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;10 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625: [1]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; cmu.NonStaticFeature.a-625  | ...: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; cmu.NonStaticFeature.a-624 &amp; cm...&#10; -&gt; &#10;11 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; !cmu.NonStaticFeature.a-626: [1]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626  | ...: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !..." this="27"/>
				<line interaction="1" text="start (cmu.NonStaticFeature.a-617 &amp; cmu.NonStaticFeature.a-618 &amp; cmu.NonStaticFeature.a-619 &amp; cmu.NonStaticFeature.a-620 &amp; cmu.NonStaticFeature.a-621 &amp; cmu.NonStaticFeature.a-622 &amp; cmu.NonStaticFeature.a-623 &amp; cmu.NonStaticFeature.a-624 &amp; cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626):&#10;cmu.NonStaticVariabilityAwareTest.simpleForTest()V(One(32))&#10;cmu.NonStaticVariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;10 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; !cmu.NonStaticFeature.a-626: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626  | ...: [3]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !...&#10; -&gt; &#10;11 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; !cmu.NonStaticFeature.a-626: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626  | ...: [3]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !..." this="32"/>
				<line interaction="1" text="a (cmu.NonStaticFeature.a-617 &amp; cmu.NonStaticFeature.a-618 &amp; cmu.NonStaticFeature.a-619 &amp; cmu.NonStaticFeature.a-620 &amp; cmu.NonStaticFeature.a-621 &amp; cmu.NonStaticFeature.a-622 &amp; cmu.NonStaticFeature.a-623 &amp; cmu.NonStaticFeature.a-624 &amp; cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626):&#10;cmu.NonStaticVariabilityAwareTest.simpleForTest()V(One(33))&#10;cmu.NonStaticVariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;10 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; !cmu.NonStaticFeature.a-626: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626  | ...: [3]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !...&#10; -&gt; &#10;11 : {!cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; !cmu.NonStaticFeature.a-626: [2]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !cmu.NonStaticFeature.a-623 &amp; !cmu.NonStaticFeature.a-624 &amp; !cmu.NonStaticFeature.a-625 &amp; cmu.NonStaticFeature.a-626  | ...: [3]  ; !cmu.NonStaticFeature.a-617 &amp; !cmu.NonStaticFeature.a-618 &amp; !cmu.NonStaticFeature.a-619 &amp; !cmu.NonStaticFeature.a-620 &amp; !cmu.NonStaticFeature.a-621 &amp; !cmu.NonStaticFeature.a-622 &amp; !..." this="33"/>
				<line interaction="1" text="a (True)&#10;cmu.NonStaticFeature.&lt;init&gt;()V(One(45))&#10;cmu.NonStaticVariabilityAwareTest.simpleForTest()V(One(22))&#10;cmu.NonStaticVariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!cmu.NonStaticFeature.a-626:0 ; cmu.NonStaticFeature.a-626:1 }" this="45"/>
			</coverage>
		</File>
		<File name="NumberWorkSpace.java">
			<coverage>
				<line interaction="1" text="VertexNumber (!UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___)&#10;GPL.NumberWorkSpace.preVisitAction(LGPL/Vertex;)V(One(24))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(136))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({!BFS___ &amp; NUMBER___:121 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: {!UNDIRECTED___ &amp; !BFS___ | !UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___ | UNDIRECTED___ &amp; !NUMBER___:0 ; BFS___ &amp; NUMBER___:10 ; UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___:11 }&#10;-&gt;&#10;4: {!NUMBER___:0 ; BFS___ &amp; NUMBER___:10 ; UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___:11 ; !UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___:44 }" this="24"/>
			</coverage>
		</File>
		<File name="OutOfMemory_ComparisonTest.java">
			<coverage>
				<line interaction="1" text="a1 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(30))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a1, One(1), One(0))" this="30"/>
				<line interaction="1" text="a2 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(32))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a2, One(1), One(0))" this="32"/>
				<line interaction="1" text="a3 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(34))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a3, One(1), One(0))" this="34"/>
				<line interaction="1" text="a4 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(36))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a4, One(1), One(0))" this="36"/>
				<line interaction="1" text="a5 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(38))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a5, One(1), One(0))" this="38"/>
				<line interaction="1" text="a6 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(40))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a6, One(1), One(0))" this="40"/>
				<line interaction="1" text="a7 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(42))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a7, One(1), One(0))" this="42"/>
				<line interaction="1" text="a8 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(44))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a8, One(1), One(0))" this="44"/>
				<line interaction="1" text="a9 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(46))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a9, One(1), One(0))" this="46"/>
				<line interaction="1" text="a10 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(48))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a10, One(1), One(0))" this="48"/>
				<line interaction="1" text="a11 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(50))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a11, One(1), One(0))" this="50"/>
				<line interaction="1" text="a12 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(52))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a12, One(1), One(0))" this="52"/>
				<line interaction="1" text="a13 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(54))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a13, One(1), One(0))" this="54"/>
				<line interaction="1" text="a14 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(56))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a14, One(1), One(0))" this="56"/>
				<line interaction="1" text="a15 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(58))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a15, One(1), One(0))" this="58"/>
				<line interaction="1" text="a16 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(60))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a16, One(1), One(0))" this="60"/>
				<line interaction="1" text="a17 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(62))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a17, One(1), One(0))" this="62"/>
				<line interaction="1" text="a18 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(64))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a18, One(1), One(0))" this="64"/>
				<line interaction="1" text="a19 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(66))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a19, One(1), One(0))" this="66"/>
				<line interaction="1" text="a20 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(68))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a20, One(1), One(0))" this="68"/>
				<line interaction="1" text="a21 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(70))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a21, One(1), One(0))" this="70"/>
				<line interaction="1" text="a22 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(72))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a22, One(1), One(0))" this="72"/>
				<line interaction="1" text="a23 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(74))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a23, One(1), One(0))" this="74"/>
				<line interaction="1" text="a24 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(76))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a24, One(1), One(0))" this="76"/>
				<line interaction="1" text="a25 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(78))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a25, One(1), One(0))" this="78"/>
				<line interaction="1" text="a26 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(80))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a26, One(1), One(0))" this="80"/>
				<line interaction="1" text="a27 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(82))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a27, One(1), One(0))" this="82"/>
				<line interaction="1" text="a28 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(84))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a28, One(1), One(0))" this="84"/>
				<line interaction="1" text="a29 (True)&#10;cmu.OutOfMemory_ComparisonTest.&lt;clinit&gt;()V(One(86))&#10;cmu.OutOfMemory_ComparisonTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(a29, One(1), One(0))" this="86"/>
				<line interaction="1" text="i (a1):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(163))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a1: [0]  ; a1: [1]  }" this="163"/>
				<line interaction="1" text="i (a2):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(164))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!a1: [0]  ; a1: [1]  }&#10; -&gt; &#10;3 : {!a1 &amp; !a2: [0]  ; !a1 &amp; a2 | a1 &amp; !a2: [1]  ; a1 &amp; a2: [2]  }" this="164"/>
				<line interaction="1" text="i (a3):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(165))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : {!a1 &amp; !a2: [0]  ; !a1 &amp; a2 | a1 &amp; !a2: [1]  ; a1 &amp; a2: [2]  }&#10; -&gt; &#10;4 : {!a1 &amp; !a2 &amp; !a3: [0]  ; !a1 &amp; !a2 &amp; a3 | !a1 &amp; a2 &amp; !a3 | a1 &amp; !a2 &amp; !a3: [1]  ; !a1 &amp; a2 &amp; a3 | a1 &amp; !a2 &amp; a3 | a1 &amp; a2 &amp; !a3: [2]  ; a1 &amp; a2 &amp; a3: [3]  }" this="165"/>
				<line interaction="1" text="i (a4):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(166))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4 : {!a1 &amp; !a2 &amp; !a3: [0]  ; !a1 &amp; !a2 &amp; a3 | !a1 &amp; a2 &amp; !a3 | a1 &amp; !a2 &amp; !a3: [1]  ; !a1 &amp; a2 &amp; a3 | a1 &amp; !a2 &amp; a3 | a1 &amp; a2 &amp; !a3: [2]  ; a1 &amp; a2 &amp; a3: [3]  }&#10; -&gt; &#10;5 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 | !a1 &amp; !a2 &amp; a3 &amp; !a4 | !a1 &amp; a2 &amp; !a3 &amp; !a4 | a1 &amp; !a2 &amp; !a3 &amp; !a4: [1]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 | !a1 &amp; a2 &amp; !a3 &amp; a4 | !a1 &amp; a2 &amp; a3 &amp; !a4 | a1 &amp; !a2 &amp; !a3 &amp; a4 | a1 &amp; !a2 &amp; a3 &amp; !a4 | a1 &amp; a2 &amp; !a3 &amp; !a4: [2]  ; !a1 &amp; a2 &amp; a3 &amp; a4 | a1 &amp; !a2 &amp; a3 &amp; a4 | a1 &amp; a2 &amp; !a3 &amp; a4 | a1 &amp; a2 &amp; a3 &amp; !a4: [3]  ; a1 &amp; a2 &amp; a3 &amp; a4: [4]  }" this="166"/>
				<line interaction="1" text="i (a5):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(167))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 | !a1 &amp; !a2 &amp; a3 &amp; !a4 | !a1 &amp; a2 &amp; !a3 &amp; !a4 | a1 &amp; !a2 &amp; !a3 &amp; !a4: [1]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 | !a1 &amp; a2 &amp; !a3 &amp; a4 | !a1 &amp; a2 &amp; a3 &amp; !a4 | a1 &amp; !a2 &amp; !a3 &amp; a4 | a1 &amp; !a2 &amp; a3 &amp; !a4 | a1 &amp; a2 &amp; !a3 &amp; !a4: [2]  ; !a1 &amp; a2 &amp; a3 &amp; a4 | a1 &amp; !a2 &amp; a3 &amp; a4 | a1 &amp; a2 &amp; !a3 &amp; a4 | a1 &amp; a2 &amp; a3 &amp; !a4: [3]  ; a1 &amp; a2 &amp; a3 &amp; a4: [4]  }&#10; -&gt; &#10;6 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; a5 | !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; !a5 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; a5 | !a1 &amp; a2 &amp; !a3 &amp; a4 &amp; !a5 | !a1 &amp; a2 &amp; a3 &amp; !a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 | a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 | a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 | a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5: [2]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 | !a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 | !a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 | !a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; !a5 | a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; a5 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; !a5 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; !a5: [3]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 ..." this="167"/>
				<line interaction="1" text="i (a6):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(168))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;6 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; a5 | !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; !a5 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; a5 | !a1 &amp; a2 &amp; !a3 &amp; a4 &amp; !a5 | !a1 &amp; a2 &amp; a3 &amp; !a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 | a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 | a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 | a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5: [2]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 | !a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 | !a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 | !a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 | a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; !a5 | a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; a5 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; !a5 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; !a5: [3]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 ...&#10; -&gt; &#10;7 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; !a6 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 &amp; !a6 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 &amp; !a6 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6  | ...: [3]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6  | ...: [4]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; !a6: [5]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6: [6]  }" this="168"/>
				<line interaction="1" text="i (a7):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(169))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;7 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; !a6 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 &amp; !a6 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 &amp; !a6 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6  | ...: [3]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6  | ...: [4]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 &amp; a6 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; !a6: [5]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6: [6]  }&#10; -&gt; &#10;8 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; !a7 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; !a6 &amp; !a7 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 &amp; !a6 &amp; !a7 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7  | ...: [4]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7  | ...: [5]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; !a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; !a7: [..." this="169"/>
				<line interaction="1" text="i (a8):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(170))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;8 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; !a7 | !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; !a6 &amp; !a7 | !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; !a5 &amp; !a6 &amp; !a7 | !a1 &amp; !a2 &amp; a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 | !a1 &amp; a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 | a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7  | ...: [4]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7  | ...: [5]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; !a5 &amp; a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; !a6 &amp; a7 | a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; !a7: [...&#10; -&gt; &#10;9 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [5]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [6]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [7]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8: [8]  }" this="170"/>
				<line interaction="1" text="i (a9):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(171))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;9 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [5]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [6]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8  | ...: [7]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8: [8]  }&#10; -&gt; &#10;10 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [6]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [7]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [8]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9: [9]  }" this="171"/>
				<line interaction="1" text="i (a10):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(172))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;10 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [6]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [7]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9  | ...: [8]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9: [9]  }&#10; -&gt; &#10;11 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [7]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [8]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [9]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10: [10]  }" this="172"/>
				<line interaction="1" text="i (a11):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(173))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;11 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [7]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [8]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10  | ...: [9]  ; a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10: [10]  }&#10; -&gt; &#10;12 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [8]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [9]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; ..." this="173"/>
				<line interaction="1" text="i (a12):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(174))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;12 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [8]  ; !a1 &amp; !a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11  | ...: [9]  ; !a1 &amp; a2 &amp; a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; ...&#10; -&gt; &#10;13 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [8]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a1..." this="174"/>
				<line interaction="1" text="i (a13):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(175))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;13 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12  | ...: [8]  ; !a1 &amp; !a2 &amp; !a3 &amp; a4 &amp; a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a1...&#10; -&gt; &#10;14 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ......" this="175"/>
				<line interaction="1" text="i (a14):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(176))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;14 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13  | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; a6 &amp; a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 | ......&#10; -&gt; &#10;15 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 ..." this="176"/>
				<line interaction="1" text="i (a15):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(177))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;15 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; a8 &amp; a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 | ...: [7]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 ...&#10; -&gt; &#10;16 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a1..." this="177"/>
				<line interaction="1" text="i (a16):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(178))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;16 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; a9 &amp; a10 &amp; a11 &amp; a1...&#10; -&gt; &#10;17 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; ..." this="178"/>
				<line interaction="1" text="i (a17):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(179))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;17 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; a11 &amp; a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 | ...: [6]  ; !a1 &amp; !a2 &amp; !a3 &amp; ...&#10; -&gt; &#10;18 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp;..." this="179"/>
				<line interaction="1" text="i (a18):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(180))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;18 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; a12 &amp; a13 &amp; a14 &amp;...&#10; -&gt; &#10;19 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17 &amp; a18  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !..." this="180"/>
				<line interaction="1" text="i (a19):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(181))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;19 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17 &amp; a18  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 | ...: [5]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !...&#10; -&gt; &#10;20 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18 &amp; a19  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17 &amp; a18 &amp; a19 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 &amp; a19 | ...: [5]  ; !..." this="181"/>
				<line interaction="1" text="i (a20):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(182))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;20 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18 &amp; a19  | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a16 &amp; a17 &amp; a18 &amp; a19 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; a15 &amp; a16 &amp; a17 &amp; a18 &amp; a19 | ...: [5]  ; !...&#10; -&gt; &#10;21 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19 &amp; a20 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18 &amp; a19 &amp; a20 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a1..." this="182"/>
				<line interaction="1" text="i (a21):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(183))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;21 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19 &amp; a20 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; a17 &amp; a18 &amp; a19 &amp; a20 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; a1...&#10; -&gt; &#10;22 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20 &amp; a21 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19 &amp; a20 &amp; a21 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a..." this="183"/>
				<line interaction="1" text="i (a22):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(184))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;22 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20 &amp; a21 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; a18 &amp; a19 &amp; a20 &amp; a21 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a...&#10; -&gt; &#10;23 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21 &amp; a22  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21 &amp; a22 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20 &amp; a21 &amp; a22 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 ..." this="184"/>
				<line interaction="1" text="i (a23):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(185))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;23 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21 &amp; a22  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21 &amp; a22 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; a19 &amp; a20 &amp; a21 &amp; a22 | ...: [4]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 ...&#10; -&gt; &#10;24 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22 &amp; a23  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21 &amp; a22 &amp; a23 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21 &amp; a22 &amp; a23 | ...: ..." this="185"/>
				<line interaction="1" text="i (a24):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(186))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;24 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22 &amp; a23  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; a21 &amp; a22 &amp; a23 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; a20 &amp; a21 &amp; a22 &amp; a23 | ...: ...&#10; -&gt; &#10;25 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23 &amp; a24  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22 &amp; a23 &amp; a24 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !..." this="186"/>
				<line interaction="1" text="i (a25):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(187))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;25 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23 &amp; a24  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; a22 &amp; a23 &amp; a24 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !...&#10; -&gt; &#10;26 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24 &amp; a25  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23 &amp; a24 &amp; a25 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !..." this="187"/>
				<line interaction="1" text="i (a26):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(188))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;26 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24 &amp; a25  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; a23 &amp; a24 &amp; a25 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !...&#10; -&gt; &#10;27 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25 &amp; a26  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24 &amp; a25 &amp; a26 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !..." this="188"/>
				<line interaction="1" text="i (a27):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(189))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;27 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25 &amp; a26  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; a24 &amp; a25 &amp; a26 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !...&#10; -&gt; &#10;28 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; a27  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26 &amp; a27  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25 &amp; a26 &amp; a27 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp;..." this="189"/>
				<line interaction="1" text="i (a28):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(190))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;28 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; a27  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26 &amp; a27  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; a25 &amp; a26 &amp; a27 | ...: [3]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp;...&#10; -&gt; &#10;29 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; !a28: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; a28  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; a27 &amp; a28  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26 &amp; a27 &amp; a28 | ...: [3]  ; !a1 &amp; !a2 &amp; !..." this="190"/>
				<line interaction="1" text="i (a29):&#10;cmu.OutOfMemory_ComparisonTest.testFunction_bdd()V(One(191))&#10;cmu.OutOfMemory_ComparisonTest.executeJPF_Bdd()V(One(120))&#10;cmu.OutOfMemory_ComparisonTest.[executeJPF_Bdd](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;29 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; !a28: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; a28  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; a27 &amp; a28  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; a26 &amp; a27 &amp; a28 | ...: [3]  ; !a1 &amp; !a2 &amp; !...&#10; -&gt; &#10;30 : {!a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; !a28 &amp; !a29: [0]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; !a28 &amp; a29  | ...: [1]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; !a27 &amp; a28 &amp; a29  | ...: [2]  ; !a1 &amp; !a2 &amp; !a3 &amp; !a4 &amp; !a5 &amp; !a6 &amp; !a7 &amp; !a8 &amp; !a9 &amp; !a10 &amp; !a11 &amp; !a12 &amp; !a13 &amp; !a14 &amp; !a15 &amp; !a16 &amp; !a17 &amp; !a18 &amp; !a19 &amp; !a20 &amp; !a21 &amp; !a22 &amp; !a23 &amp; !a24 &amp; !a25 &amp; !a26 &amp; a27 &amp; a28 &amp; a29..." this="191"/>
			</coverage>
		</File>
		<File name="OutputStream.java">
			<coverage>
				<line interaction="1" text="? (!USE_TRANSIENT_MODE):&#10;java.util.Arrays.copyOf([BI)[B(One(2271))&#10;java.io.ByteArrayOutputStream.grow(I)V(One(113))&#10;java.io.ByteArrayOutputStream.ensureCapacity(I)V(One(93))&#10;java.io.ByteArrayOutputStream.write([BII)V(One(140))&#10;java.io.OutputStream.write([B)V(One(75))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(47))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( &lt;56974&gt; ), One( &lt;56975&gt; ))" this="75"/>
			</coverage>
		</File>
		<File name="OutputWindow.java">
			<coverage>
				<line interaction="1" text="window (!GZIP)&#10;net.sf.zipme.OutputWindow.&lt;init&gt;()V(One(27))&#10;net.sf.zipme.Inflater.&lt;init&gt;(Z)V(One(119))&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2259), One(0))" this="27"/>
				<line interaction="1" text="window_filled (GZIP)&#10;net.sf.zipme.OutputWindow.write(I)V(One(34))&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(448))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="34"/>
				<line interaction="1" text="window_end (GZIP)&#10;net.sf.zipme.OutputWindow.write(I)V(One(36))&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(448))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="36"/>
				<line interaction="-1" text="window_filled (GZIP)&#10;net.sf.zipme.OutputWindow.copyOutput([BII)I(One(113))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(GZIP, One(4), One(0))&#10;-&gt;&#10;1: One(0)" this="113"/>
				<line interaction="-1" text="window_end (!GZIP &amp; !Adler32Checksum)&#10;net.sf.zipme.OutputWindow.reset()V(One(120))&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(301))&#10;net.sf.zipme.Inflater.reset()V(One(325))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; Adler32Checksum | GZIP, One(0), One(4))&#10;-&gt;&#10;1: One(0)" this="120"/>
			</coverage>
		</File>
		<File name="PL_Interface_impl.java">
			<coverage>
				<line interaction="2" text="e (action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor):&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(40))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor  | ...: &lt;864&gt;  ; !action1_1  | ...: &lt;678&gt;  ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm: &lt;875&gt;  }" this="40"/>
				<line interaction="2" text="e (!executivefloor | executivefloor &amp; overloaded):&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(50))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!executivefloor &amp; !overloaded: &lt;849&gt;  ; executivefloor &amp; !overloaded: &lt;680&gt;  ; overloaded: &lt;827&gt;  }" this="50"/>
				<line interaction="2" text="e (action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor):&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(52))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!action1_1  | ...: [0]  ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor  | ...: &lt;864&gt;  ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm: &lt;875&gt;  }" this="52"/>
				<line interaction="2" text="e (!executivefloor | executivefloor &amp; overloaded):&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(64))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {executivefloor &amp; !overloaded: [0]  ; !executivefloor &amp; !overloaded: &lt;849&gt;  ; overloaded: &lt;827&gt;  }" this="64"/>
				<line interaction="1" text="action1_1 (True)&#10;MinePumpSystem.PL_Interface_impl.&lt;clinit&gt;()V(One(87))&#10;MinePumpSystem.PL_Interface_impl.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1:0 ; action1_1:1 }" this="87"/>
				<line interaction="1" text="action2_1 (True)&#10;MinePumpSystem.PL_Interface_impl.&lt;clinit&gt;()V(One(88))&#10;MinePumpSystem.PL_Interface_impl.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action2_1:0 ; action2_1:1 }" this="88"/>
				<line interaction="1" text="action3_1 (True)&#10;MinePumpSystem.PL_Interface_impl.&lt;clinit&gt;()V(One(89))&#10;MinePumpSystem.PL_Interface_impl.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action3_1:0 ; action3_1:1 }" this="89"/>
				<line interaction="1" text="action4_1 (True)&#10;MinePumpSystem.PL_Interface_impl.&lt;clinit&gt;()V(One(90))&#10;MinePumpSystem.PL_Interface_impl.[&lt;clinit&gt;](One(0))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action4_1:0 ; action4_1:1 }" this="90"/>
				<line interaction="2" text="? (!executivefloor | executivefloor &amp; overloaded):&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(108))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {executivefloor &amp; !overloaded: [0]  ; !executivefloor &amp; !overloaded: &lt;849&gt;  ; overloaded: &lt;827&gt;  }" this="108"/>
				<line interaction="-1" text="action1 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(109))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!action1_1: [0]  ; action1_1: [1]  }&#10; -&gt; &#10;1 : One( [1] )" this="109"/>
				<line interaction="-1" text="action2 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(110))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!action2_1: [0]  ; action2_1: [1]  }&#10; -&gt; &#10;1 : One( [1] )" this="110"/>
				<line interaction="-1" text="action3 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(111))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!action3_1: [0]  ; action3_1: [1]  }&#10; -&gt; &#10;1 : One( [1] )" this="111"/>
				<line interaction="1" text="action1 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(114))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!action1_1: [0]  ; action1_1: [1]  }" this="114"/>
				<line interaction="1" text="action2 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(115))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!action2_1: [0]  ; action2_1: [1]  }" this="115"/>
				<line interaction="1" text="action3 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(116))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!action3_1: [0]  ; action3_1: [1]  }" this="116"/>
				<line interaction="1" text="action4 (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(137))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!action4_1: [0]  ; action4_1: [1]  }" this="137"/>
				<line interaction="-4" text="actionName (True):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(141))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5 : {action3_1: &lt;820&gt;  ; action2_1 &amp; !action3_1 &amp; !action4_1: &lt;813&gt;  ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1: &lt;808&gt;  ; !action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1: &lt;741&gt;  ; !action3_1 &amp; action4_1: &lt;827&gt;  }&#10; -&gt; &#10;1 : One( &lt;741&gt; )" this="141"/>
				<line interaction="1" text="actionName (action1_1):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(147))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;741&gt; )&#10; -&gt; &#10;2 : {action1_1: &lt;831&gt;  ; !action1_1: &lt;741&gt;  }" this="147"/>
				<line interaction="1" text="actionName (action2_1):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(154))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {action1_1: &lt;831&gt;  ; !action1_1: &lt;741&gt;  }&#10; -&gt; &#10;3 : {action2_1: &lt;836&gt;  ; action1_1 &amp; !action2_1: &lt;831&gt;  ; !action1_1 &amp; !action2_1: &lt;741&gt;  }" this="154"/>
				<line interaction="1" text="counter (!overloaded):&#10;ElevatorSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(158))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(106))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest9_4()V(One(71))&#10;cmu.testprograms.ElevatorTest.[elevatorTest9_4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [6] )&#10; -&gt; &#10;2 : {overloaded: [6]  ; !overloaded: [7]  }" this="158"/>
				<line interaction="1" text="actionName (action3_1):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(161))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : {action2_1: &lt;836&gt;  ; action1_1 &amp; !action2_1: &lt;831&gt;  ; !action1_1 &amp; !action2_1: &lt;741&gt;  }&#10; -&gt; &#10;4 : {action2_1 &amp; !action3_1: &lt;836&gt;  ; action3_1: &lt;843&gt;  ; action1_1 &amp; !action2_1 &amp; !action3_1: &lt;831&gt;  ; !action1_1 &amp; !action2_1 &amp; !action3_1: &lt;741&gt;  }" this="161"/>
				<line interaction="1" text="actionName (!action3_1 &amp; action4_1):&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(167))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4 : {action2_1 &amp; !action3_1: &lt;836&gt;  ; action3_1: &lt;843&gt;  ; action1_1 &amp; !action2_1 &amp; !action3_1: &lt;831&gt;  ; !action1_1 &amp; !action2_1 &amp; !action3_1: &lt;741&gt;  }&#10; -&gt; &#10;5 : {!action3_1 &amp; action4_1: &lt;850&gt;  ; action2_1 &amp; !action3_1 &amp; !action4_1: &lt;836&gt;  ; action3_1: &lt;843&gt;  ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1: &lt;831&gt;  ; !action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1: &lt;741&gt;  }" this="167"/>
				<line interaction="1" text="size (!action1_1 | action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(172))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest3()V(One(26))&#10;cmu.testprograms.MineTest.[mineTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; !highWaterSensor | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; action4_1 &amp; !highWaterSensor | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; stopCommand | action1_1 &amp; !action2_1 &amp; action3_1 &amp; !highWaterSensor:0 ; !action1_1 | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !stopCommand | action1_1 &amp; !action2_1 &amp; action3_1 &amp; highWaterSensor | action1_1 &amp; action2_1:1 }&#10;-&gt;&#10;3: {action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; !highWaterSensor | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; action4_1 &amp; !highWaterSensor | action1_1 &amp; !action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; stopCommand | action1_1 &amp; !action2_1 &amp; action3_1 &amp; !highWaterSensor:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; !highWaterSensor | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; !highWaterSensor | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; !highWaterSensor:1 ; !action1_1 | action1_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor | action1_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !stopCommand | action1_1 &amp; action3_1 &amp; highWaterSensor:2 }" this="172"/>
				<line interaction="1" text="i (!overloaded):&#10;ElevatorSystem.PL_Interface_impl.Specification1()V(One(237))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(94))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest1()V(One(15))&#10;cmu.testprograms.ElevatorTest.[elevatorTest1](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : {overloaded: [3]  ; !overloaded: [4]  }" this="237"/>
				<line interaction="1" text="i (!overloaded):&#10;ElevatorSystem.PL_Interface_impl.Specification2()V(One(248))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(95))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest2()V(One(29))&#10;cmu.testprograms.ElevatorTest.[elevatorTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : {overloaded: [3]  ; !overloaded: [4]  }" this="248"/>
				<line interaction="1" text="? (executivefloor):&#10;ElevatorSystem.PL_Interface_impl.Specification3()V(One(271))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(96))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest3()V(One(43))&#10;cmu.testprograms.ElevatorTest.[elevatorTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!executivefloor: [0]  ; executivefloor: &lt;824&gt;  }" this="271"/>
				<line interaction="1" text="i (!overloaded):&#10;ElevatorSystem.PL_Interface_impl.Specification9()V(One(281))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(98))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest9()V(One(64))&#10;cmu.testprograms.ElevatorTest.[elevatorTest9](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : {overloaded: [3]  ; !overloaded: [4]  }" this="281"/>
				<line interaction="1" text="i (!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull):&#10;ElevatorSystem.PL_Interface_impl.Specification13()V(One(297))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [6] )&#10; -&gt; &#10;2 : {!twothirdsfull &amp; executivefloor &amp; overloaded: [6]  ; !weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull: [7]  }" this="297"/>
				<line interaction="2" text="? (!weight &amp; !twothirdsfull &amp; !executivefloor &amp; overloaded | weight &amp; !twothirdsfull &amp; !executivefloor):&#10;ElevatorSystem.PL_Interface_impl.Specification13()V(One(298))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(101))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull: [0]  ; weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded: &lt;864&gt;  ; !twothirdsfull &amp; !executivefloor &amp; overloaded: &lt;843&gt;  }" this="298"/>
				<line interaction="1" text="? (!executivefloor &amp; !overloaded):&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {executivefloor &amp; !overloaded: [0]  ; !executivefloor &amp; !overloaded: &lt;849&gt;  }" this="314"/>
			</coverage>
		</File>
		<File name="Pattern.java">
			<coverage>
				<line interaction="3" text="text (!USE_TRANSIENT_MODE)&#10;java.util.regex.Matcher.&lt;init&gt;(Ljava/util/regex/Pattern;Ljava/lang/CharSequence;)V(One(220))&#10;java.util.regex.Pattern.matcher(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;(One(1088))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53889), Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; !USE_TRANSIENT_MODE, One(53891), One(53893))), One(0))" this="1088"/>
				<line interaction="1" text="last (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3354))&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3694))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4148))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(2), Choice(!USE_TRANSIENT_MODE, One(1), One(0)))" this="3354"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3693))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4148))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [52] ), One( [0] ))" this="3693"/>
				<line interaction="1" text="last (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3354))&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3694))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4148))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(2), Choice(!USE_TRANSIENT_MODE, One(1), One(0)))" this="3694"/>
				<line interaction="1" text="hitEnd (USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3697))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4148))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(1), One(0))" this="3697"/>
				<line interaction="1" text="last (!USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$Node.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3354))&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3694))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4125))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="4125"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4155))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [2] ), One( [1] ))" this="4132"/>
				<line interaction="1" text="hitEnd (USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3697))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4148))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One(1), One(0))" this="4148"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4150))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [1] ), One( [0] ))" this="4150"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4154))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [2] ), One( [1] ))" this="4154"/>
				<line interaction="1" text="? (!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE):&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4155))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(38))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(!USE_BROKEN_CLOCK &amp; !USE_TRANSIENT_MODE, One( [2] ), One( [1] ))" this="4155"/>
				<line interaction="1" text="hitEnd (!USE_TRANSIENT_MODE)&#10;java.util.regex.Pattern$CharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(3697))&#10;java.util.regex.Pattern$Curly.match0(Ljava/util/regex/Matcher;IILjava/lang/CharSequence;)Z(One(4158))&#10;java.util.regex.Pattern$Curly.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z(One(4132))&#10;java.util.regex.Matcher.match(II)Z(One(1221))&#10;java.util.regex.Matcher.matches()Z(One(559))&#10;org.prevayler.foundation.Chunking.validToken(Ljava/lang/String;)Z(One(25))&#10;org.prevayler.foundation.Chunking.writeChunk(Ljava/io/OutputStream;Lorg/prevayler/foundation/Chunk;)V(One(35))&#10;org.prevayler.implementation.TransactionGuide.writeTo(Ljava/io/OutputStream;)V(One(35))&#10;org.prevayler.foundation.DurableOutputStream.writeObject(Lorg/prevayler/foundation/Guided;)I(One(88))&#10;org.prevayler.foundation.DurableOutputStream.sync(Lorg/prevayler/foundation/Guided;)V(One(70))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(86))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="4158"/>
			</coverage>
		</File>
		<File name="PausableClock.java">
			<coverage>
				<line interaction="1" text="_brokenClock (!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK)&#10;org.prevayler.implementation.clock.PausableClock.&lt;init&gt;(Lorg/prevayler/Clock;)V(One(14))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(242))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1743), One(0))" this="14"/>
				<line interaction="2" text="_realClock (True)&#10;org.prevayler.implementation.clock.PausableClock.&lt;init&gt;(Lorg/prevayler/Clock;)V(One(19))&#10;org.prevayler.implementation.publishing.CentralPublisher.&lt;init&gt;(Lorg/prevayler/Clock;Lorg/prevayler/implementation/publishing/censorship/TransactionCensor;Lorg/prevayler/implementation/journal/Journal;)V(One(34))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1745), Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1737), One(1631)))" this="19"/>
				<line interaction="-2" text="_activeClock (True)&#10;org.prevayler.implementation.clock.PausableClock.pause()V(One(27))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(44))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1745), Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1737), One(1631)))&#10;-&gt;&#10;1: One(1867)" this="27"/>
				<line interaction="2" text="_activeClock (True)&#10;org.prevayler.implementation.clock.PausableClock.resume()V(One(34))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(54))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1867)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1745), Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1737), One(1631)))" this="34"/>
			</coverage>
		</File>
		<File name="PendingBuffer.java">
			<coverage>
				<line interaction="1" text="buf (!GZIP)&#10;net.sf.zipme.PendingBuffer.&lt;init&gt;(I)V(One(38))&#10;net.sf.zipme.DeflaterPending.&lt;init&gt;()V(One(20))&#10;net.sf.zipme.Deflater.&lt;init&gt;(IZ)V(One(139))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1059), One(0))" this="38"/>
				<line interaction="-1" text="bits (!GZIP)&#10;net.sf.zipme.PendingBuffer.alignToByte()V(One(86))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(54))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(6), One(0))&#10;-&gt;&#10;1: One(0)" this="86"/>
				<line interaction="-1" text="bitCount (!GZIP)&#10;net.sf.zipme.PendingBuffer.alignToByte()V(One(87))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(54))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(10), One(0))&#10;-&gt;&#10;1: One(0)" this="87"/>
				<line interaction="1" text="bits (!GZIP)&#10;net.sf.zipme.PendingBuffer.writeBits(II)V(One(95))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(524))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3), One(0))" this="95"/>
				<line interaction="1" text="bitCount (!GZIP)&#10;net.sf.zipme.PendingBuffer.writeBits(II)V(One(96))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(524))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(3), One(0))" this="96"/>
				<line interaction="1" text="end (!GZIP)&#10;net.sf.zipme.PendingBuffer.writeBits(II)V(One(98))&#10;net.sf.zipme.DeflaterHuffman$Tree.writeSymbol(I)V(One(75))&#10;net.sf.zipme.DeflaterHuffman.compressBlock()V(One(475))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(527))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="98"/>
				<line interaction="-1" text="bits (!GZIP)&#10;net.sf.zipme.PendingBuffer.writeBits(II)V(One(100))&#10;net.sf.zipme.DeflaterHuffman$Tree.writeSymbol(I)V(One(75))&#10;net.sf.zipme.DeflaterHuffman.compressBlock()V(One(475))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(532))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(43731), One(0))&#10;-&gt;&#10;1: One(0)" this="100"/>
				<line interaction="-1" text="bitCount (!GZIP)&#10;net.sf.zipme.PendingBuffer.writeBits(II)V(One(101))&#10;net.sf.zipme.DeflaterHuffman$Tree.writeSymbol(I)V(One(75))&#10;net.sf.zipme.DeflaterHuffman.compressBlock()V(One(475))&#10;net.sf.zipme.DeflaterHuffman.flushBlock([BIIZ)V(One(532))&#10;net.sf.zipme.DeflaterEngine.deflateSlow(ZZ)Z(One(374))&#10;net.sf.zipme.DeflaterEngine.deflate(ZZ)Z(One(445))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(40))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(16), One(0))&#10;-&gt;&#10;1: One(0)" this="101"/>
				<line interaction="-1" text="end (!GZIP)&#10;net.sf.zipme.PendingBuffer.flush([BII)I(One(136))&#10;net.sf.zipme.Deflater_deflate2.execute()I(One(34))&#10;net.sf.zipme.Deflater.deflate([BII)I(One(414))&#10;net.sf.zipme.DeflaterOutputStream.finish()V(One(101))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(217))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(6), One(0))&#10;-&gt;&#10;1: One(0)" this="136"/>
			</coverage>
		</File>
		<File name="PersistentJournal.java">
			<coverage>
				<line interaction="3" text="_monitor (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.&lt;init&gt;(Lorg/prevayler/implementation/PrevaylerDirectory;JJZLjava/lang/String;Lorg/prevayler/foundation/monitor/Monitor;)V(One(52))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(328))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;4: Choice(!USE_TRANSIENT_MODE, Choice(USE_LOG4J_MONITOR &amp; !USE_TRANSIENT_MODE, One(1616), Choice(!USE_LOG4J_MONITOR &amp; USE_NULL_MONITOR &amp; !USE_TRANSIENT_MODE, One(1620), One(1624))), One(0))" this="52"/>
				<line interaction="1" text="_directory (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.&lt;init&gt;(Lorg/prevayler/implementation/PrevaylerDirectory;JJZLjava/lang/String;Lorg/prevayler/foundation/monitor/Monitor;)V(One(53))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(328))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1860), One(0))" this="53"/>
				<line interaction="1" text="_journalDiskSync (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.&lt;init&gt;(Lorg/prevayler/implementation/PrevaylerDirectory;JJZLjava/lang/String;Lorg/prevayler/foundation/monitor/Monitor;)V(One(57))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(328))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE &amp; !USE_JOURNAL_DISK_SYNC | USE_TRANSIENT_MODE, One(0), One(1))" this="57"/>
				<line interaction="1" text="_journalSuffix (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.&lt;init&gt;(Lorg/prevayler/implementation/PrevaylerDirectory;JJZLjava/lang/String;Lorg/prevayler/foundation/monitor/Monitor;)V(One(58))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(328))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1794), One(0))" this="58"/>
				<line interaction="1" text="_outputJournal (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(2680), One(0))" this="74"/>
				<line interaction="1" text="_journalAgeTimer (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(75))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(2700), One(0))" this="75"/>
				<line interaction="-1" text="_nextTransaction (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(78))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!USE_TRANSIENT_MODE, One(302), One(0))&#10;-&gt;&#10;1: One(303)" this="78"/>
				<line interaction="1" text="_nextTransactionInitialized (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.PersistentJournal.initializeNextTransaction(JJ)V(One(158))&#10;org.prevayler.implementation.journal.PersistentJournal.update(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(141))&#10;org.prevayler.implementation.publishing.CentralPublisher.subscribe(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(98))&#10;org.prevayler.implementation.PrevalentSystemGuard.subscribeTo(Lorg/prevayler/implementation/publishing/TransactionPublisher;)V(One(46))&#10;org.prevayler.implementation.PrevaylerImpl.&lt;init&gt;(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;Lorg/prevayler/implementation/publishing/TransactionPublisher;Lorg/prevayler/foundation/serialization/Serializer;)V(One(48))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(295))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="158"/>
			</coverage>
		</File>
		<File name="Person.java">
			<coverage>
				<line interaction="1" text="destinationReached (weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded)&#10;ElevatorSystem.Person.leaveElevator()V(One(63))&#10;ElevatorSystem.Elevator.leaveElevator__before__weight(LElevatorSystem/Person;)Z(One(128))&#10;ElevatorSystem.Elevator.leaveElevator__role__weight(LElevatorSystem/Person;)Z(One(137))&#10;ElevatorSystem.Elevator.leaveElevator__before__empty(LElevatorSystem/Person;)Z(One(148))&#10;ElevatorSystem.Elevator.leaveElevator__role__empty(LElevatorSystem/Person;)Z(One(159))&#10;ElevatorSystem.Elevator.leaveElevator(LElevatorSystem/Person;)Z({empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:170 })&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V({!twothirdsfull &amp; executivefloor &amp; !overloaded:215 })&#10;ElevatorSystem.Elevator.timeShift()V(One(259))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({executivefloor &amp; !overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!weight | weight &amp; !empty | weight &amp; empty &amp; !twothirdsfull &amp; !executivefloor | weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; overloaded | weight &amp; empty &amp; twothirdsfull:0 ; weight &amp; empty &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded:1 }" this="63"/>
			</coverage>
		</File>
		<File name="PrevaylerDirectory.java">
			<coverage>
				<line interaction="1" text="path (!USE_TRANSIENT_MODE)&#10;java.io.File.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;org.prevayler.implementation.PrevaylerDirectory.&lt;init&gt;(Ljava/lang/String;)V(One(29))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(327))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(581), One(0))" this="29"/>
				<line interaction="1" text="_directory (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.PrevaylerDirectory.&lt;init&gt;(Ljava/io/File;)V(One(33))&#10;org.prevayler.implementation.PrevaylerDirectory.&lt;init&gt;(Ljava/lang/String;)V(One(29))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(327))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1861), One(0))" this="33"/>
				<line interaction="1" text="path (!USE_TRANSIENT_MODE)&#10;java.io.File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V(One(63))&#10;org.prevayler.implementation.PrevaylerDirectory.file(JLjava/lang/String;)Ljava/io/File;(One(98))&#10;org.prevayler.implementation.PrevaylerDirectory.journalFile(JLjava/lang/String;)Ljava/io/File;(One(90))&#10;org.prevayler.implementation.journal.PersistentJournal.createOutputJournal(JLorg/prevayler/foundation/Guided;)Lorg/prevayler/foundation/DurableOutputStream;(One(124))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(74))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(56913), One(0))" this="98"/>
				<line interaction="1" text="elementData (!USE_TRANSIENT_MODE)&#10;java.util.ArrayList.&lt;init&gt;()V(One(152))&#10;java.io.File.listFiles(Ljava/io/FileFilter;)[Ljava/io/File;(One(158))&#10;org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile(J)Ljava/io/File;(One(155))&#10;org.prevayler.implementation.journal.PersistentJournal.update(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(138))&#10;org.prevayler.implementation.publishing.CentralPublisher.subscribe(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(98))&#10;org.prevayler.implementation.PrevalentSystemGuard.subscribeTo(Lorg/prevayler/implementation/publishing/TransactionPublisher;)V(One(46))&#10;org.prevayler.implementation.PrevaylerImpl.&lt;init&gt;(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;Lorg/prevayler/implementation/publishing/TransactionPublisher;Lorg/prevayler/foundation/serialization/Serializer;)V(One(48))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(295))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1590), One(0))" this="155"/>
				<line interaction="1" text="this$0 (!USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.PrevaylerDirectory$2.&lt;init&gt;(Lorg/prevayler/implementation/PrevaylerDirectory;)V(One(161))&#10;org.prevayler.implementation.PrevaylerDirectory.findInitialJournalFile(J)Ljava/io/File;(One(161))&#10;org.prevayler.implementation.journal.PersistentJournal.update(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(138))&#10;org.prevayler.implementation.publishing.CentralPublisher.subscribe(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(98))&#10;org.prevayler.implementation.PrevalentSystemGuard.subscribeTo(Lorg/prevayler/implementation/publishing/TransactionPublisher;)V(One(46))&#10;org.prevayler.implementation.PrevaylerImpl.&lt;init&gt;(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;Lorg/prevayler/implementation/publishing/TransactionPublisher;Lorg/prevayler/foundation/serialization/Serializer;)V(One(48))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(295))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1860), One(0))" this="161"/>
			</coverage>
		</File>
		<File name="PrevaylerFactory.java">
			<coverage>
				<line interaction="1" text="_monitor (!USE_LOG4J_MONITOR &amp; USE_NULL_MONITOR)&#10;org.prevayler.PrevaylerFactory.configureMonitor(Lorg/prevayler/foundation/monitor/Monitor;)V(One(145))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(234))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(USE_LOG4J_MONITOR, One(1616), One(0))&#10;-&gt;&#10;3: Choice(!USE_LOG4J_MONITOR &amp; USE_NULL_MONITOR, One(1620), Choice(USE_LOG4J_MONITOR, One(1616), One(0)))" this="145"/>
				<line interaction="1" text="_transientMode (True)&#10;org.prevayler.PrevaylerFactory.configureTransientMode(Z)V(One(151))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(254))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(0), One(1))" this="151"/>
				<line interaction="1" text="_clock (!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK)&#10;org.prevayler.PrevaylerFactory.configureClock(Lorg/prevayler/Clock;)V(One(158))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(242))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(USE_BROKEN_CLOCK, One(1631), One(0))&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; USE_PAUSABLE_CLOCK, One(1737), Choice(USE_BROKEN_CLOCK, One(1631), One(0)))" this="158"/>
				<line interaction="1" text="_journalDiskSync (True)&#10;org.prevayler.PrevaylerFactory.configureJournalDiskSync(Z)V(One(237))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(255))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: Choice(!USE_JOURNAL_DISK_SYNC, One(0), One(1))" this="237"/>
				<line interaction="1" text="hash (!USE_XSTREAM)&#10;java.util.HashMap$Entry.&lt;init&gt;(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V(One(814))&#10;java.util.HashMap.createEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(897))&#10;java.util.HashMap.addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V(One(884))&#10;java.util.HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;(One(505))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(280))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V(One(265))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(250))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_XSTREAM, One(299209062), One(0))" this="280"/>
				<line interaction="1" text="_primarySnapshotSuffix (USE_XSTREAM)&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V(One(282))&#10;org.prevayler.PrevaylerFactory.configureSnapshotSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V(One(269))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1765), One(0))" this="282"/>
				<line interaction="1" text="directory (!USE_TRANSIENT_MODE):&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(327))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!USE_TRANSIENT_MODE, One( &lt;1860&gt; ), One( [0] ))" this="327"/>
			</coverage>
		</File>
		<File name="PrevaylerTest.java">
			<coverage>
				<line interaction="1" text="USE_LOG4J_MONITOR (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(31))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_LOG4J_MONITOR, One(1), One(0))" this="31"/>
				<line interaction="1" text="USE_NULL_MONITOR (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(33))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_NULL_MONITOR, One(1), One(0))" this="33"/>
				<line interaction="1" text="USE_BROKEN_CLOCK (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(36))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_BROKEN_CLOCK, One(1), One(0))" this="36"/>
				<line interaction="1" text="USE_PAUSABLE_CLOCK (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(38))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_PAUSABLE_CLOCK, One(1), One(0))" this="38"/>
				<line interaction="1" text="USE_XSTREAM (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(41))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1), One(0))" this="41"/>
				<line interaction="1" text="USE_TRANSIENT_MODE (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(47))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(1), One(0))" this="47"/>
				<line interaction="1" text="USE_JOURNAL_DISK_SYNC (True)&#10;cmu.testprograms.PrevaylerTest.&lt;clinit&gt;()V(One(49))&#10;cmu.testprograms.PrevaylerTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_JOURNAL_DISK_SYNC, One(1), One(0))" this="49"/>
			</coverage>
		</File>
		<File name="RegionWorkSpace.java">
			<coverage>
				<line interaction="1" text="componentNumber (CONNECTED___)&#10;GPL.RegionWorkSpace.init_vertex(LGPL/Vertex;)V(One(21))&#10;GPL.Vertex.init_vertex(LGPL/WorkSpace;)V(One(77))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(100))&#10;GPL.Graph.ConnectedComponents()V(One(130))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(641))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!CONNECTED___:0 ; CONNECTED___:-1 }" this="21"/>
				<line interaction="1" text="componentNumber (BFS___ &amp; CONNECTED___)&#10;GPL.RegionWorkSpace.postVisitAction(LGPL/Vertex;)V(One(27))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(103))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.ConnectedComponents()V({CONNECTED___:130 })&#10;GPL.Graph.run(LGPL/Vertex;)V({CONNECTED___:641 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!CONNECTED___:0 ; CONNECTED___:-1 }&#10;-&gt;&#10;3: {!CONNECTED___:0 ; BFS___ &amp; CONNECTED___:1 ; !BFS___ &amp; CONNECTED___:-1 }" this="27"/>
				<line interaction="1" text="counter (CONNECTED___)&#10;GPL.RegionWorkSpace.nextRegionAction(LGPL/Vertex;)V(One(33))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(108))&#10;GPL.Graph.ConnectedComponents()V(One(130))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(641))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!CONNECTED___:0 ; CONNECTED___:1 }" this="33"/>
			</coverage>
		</File>
		<File name="RuntimeException.java">
			<coverage>
				<line interaction="1" text="cause (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(10))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:875 }" this="62"/>
			</coverage>
		</File>
		<File name="SimpleMonitor.java">
			<coverage>
				<line interaction="1" text="_stream (!USE_LOG4J_MONITOR &amp; !USE_NULL_MONITOR)&#10;org.prevayler.foundation.monitor.SimpleMonitor.&lt;init&gt;(Ljava/io/PrintStream;)V(One(26))&#10;org.prevayler.foundation.monitor.SimpleMonitor.&lt;init&gt;()V(One(19))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(236))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_LOG4J_MONITOR &amp; !USE_NULL_MONITOR, One(255), One(0))" this="26"/>
			</coverage>
		</File>
		<File name="Specification1_8.java">
			<coverage>
				<line interaction="1" text="encryptedMails (encrypt &amp; !autoresponder &amp; !verify)&#10;TestSpecifications.Specification1_8.&lt;init&gt;()V(One(18))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__encrypt()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__autoresponder()V(One(23))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__sign()V(One(45))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(66))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(87))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; !autoresponder &amp; !verify, One(769), One(0))" this="18"/>
				<line interaction="1" text="unEncryptedMails (encrypt &amp; !autoresponder &amp; !verify)&#10;TestSpecifications.Specification1_8.&lt;init&gt;()V(One(26))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__encrypt()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__autoresponder()V(One(23))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__sign()V(One(45))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(66))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(87))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; !autoresponder &amp; !verify, One(771), One(0))" this="26"/>
			</coverage>
		</File>
		<File name="Specification2.aj">
			<coverage>
				<line interaction="1" text="methAndRunningLastTime (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; !methaneAlarm  | ...)&#10;Specifications.Specification2.ajc$after$Specifications_Specification2$1$a150bd12(LMinePumpSystem/MinePump;)V(One(19))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(171))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest2()V(One(19))&#10;cmu.testprograms.MineTest.[mineTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; !methaneAlarm  | ...:1 }" this="19"/>
				<line interaction="-1" text="methAndRunningLastTime (True)&#10;Specifications.Specification2.ajc$after$Specifications_Specification2$1$a150bd12(LMinePumpSystem/MinePump;)V(One(21))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(171))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest2()V(One(19))&#10;cmu.testprograms.MineTest.[mineTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; !methaneAlarm  | ...:1 }&#10;-&gt;&#10;1: One(0)" this="21"/>
			</coverage>
		</File>
		<File name="Specification3.java">
			<coverage>
				<line interaction="1" text="signedMails (verify)&#10;TestSpecifications.Specification3.&lt;init&gt;()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__sign()V(One(54))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(64))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__verify()V(One(77))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(85))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(verify, One(709), One(0))" this="12"/>
			</coverage>
		</File>
		<File name="Specification5.aj">
			<coverage>
				<line interaction="1" text="switchedOnBeforeTS (True)&#10;Specifications.Specification5.ajc$before$Specifications_Specification5$1$a150bd12(LMinePumpSystem/MinePump;)V(One(15))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(171))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V(One(51))&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest5()V(One(40))&#10;cmu.testprograms.MineTest.[mineTest5](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; !action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor  | ...:1 }" this="15"/>
			</coverage>
		</File>
		<File name="Specification6.java">
			<coverage>
				<line interaction="1" text="encryptedMails (encrypt &amp; !autoresponder &amp; !verify)&#10;TestSpecifications.Specification6.&lt;init&gt;()V(One(12))&#10;TestSpecifications.SpecificationManager.setupSpecifications__role__encrypt()V(One(14))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__autoresponder()V(One(23))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__sign()V(One(45))&#10;TestSpecifications.SpecificationManager.setupSpecifications__before__verify()V(One(66))&#10;TestSpecifications.SpecificationManager.setupSpecifications()V(One(87))&#10;EmailSystem.Test_Actions.setup()V(One(327))&#10;EmailSystem.Scenario.test()V(One(6))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(encrypt &amp; !autoresponder &amp; !verify, One(775), One(0))" this="12"/>
			</coverage>
		</File>
		<File name="SpecificationException.java">
			<coverage>
				<line interaction="1" text="cause (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(10))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:875 }" this="10"/>
				<line interaction="1" text="specificationName (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(11))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:865 }" this="11"/>
				<line interaction="1" text="cause (!executivefloor &amp; !overloaded)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(13))&#10;Specifications.Specification_ExecutiveFloor.ajc$after$Specifications_Specification_ExecutiveFloor$1$f51a68b7(LElevatorSystem/Elevator;)V(One(21))&#10;ElevatorSystem.Elevator.timeShift()V(One(261))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!executivefloor &amp; overloaded | executivefloor:0 ; !executivefloor &amp; !overloaded:849 }" this="13"/>
				<line interaction="1" text="specificationName (!executivefloor &amp; !overloaded)&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(14))&#10;Specifications.Specification_ExecutiveFloor.ajc$after$Specifications_Specification_ExecutiveFloor$1$f51a68b7(LElevatorSystem/Elevator;)V(One(21))&#10;ElevatorSystem.Elevator.timeShift()V(One(261))&#10;ElevatorSystem.PL_Interface_impl.Specification14()V(One(314))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!overloaded:102 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest14()V(One(106))&#10;cmu.testprograms.ElevatorTest.[elevatorTest14](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!executivefloor &amp; overloaded | executivefloor:0 ; !executivefloor &amp; !overloaded:828 }" this="14"/>
			</coverage>
		</File>
		<File name="Specification_Base.aj">
			<coverage>
				<line interaction="1" text="floor (True):&#10;Specifications.Specification_Base.ajc$after$Specifications_Specification_Base$3$948ac827(LElevatorSystem/Elevator;)V(One(35))&#10;ElevatorSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(161))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(106))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest1_4()V(One(22))&#10;cmu.testprograms.ElevatorTest.[elevatorTest1_4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!overloaded: [3]  ; overloaded: [4]  }" this="35"/>
				<line interaction="3" text="floor (!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull):&#10;Specifications.Specification_Base.ajc$after$Specifications_Specification_Base$7$948ac827(LElevatorSystem/Elevator;)V(One(68))&#10;ElevatorSystem.PL_Interface_impl.Specification13()V(One(298))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(101))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;4 : {!weight &amp; !twothirdsfull &amp; !executivefloor &amp; overloaded | !weight &amp; twothirdsfull &amp; !executivefloor | weight &amp; !executivefloor: [0]  ; twothirdsfull &amp; executivefloor: [1]  ; !weight &amp; !twothirdsfull &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded: [2]  ; !twothirdsfull &amp; executivefloor &amp; overloaded: [3]  }" this="68"/>
				<line interaction="1" text="expectedDirection (!executivefloor)&#10;Specifications.Specification_Base.ajc$before$Specifications_Specification_Base$9$f51a68b7(LElevatorSystem/Elevator;)V(One(88))&#10;ElevatorSystem.Elevator.timeShift()V(One(256))&#10;ElevatorSystem.PL_Interface_impl.Specification3()V(One(271))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(96))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest3()V(One(43))&#10;cmu.testprograms.ElevatorTest.[elevatorTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(-1)&#10;-&gt;&#10;2: {!executivefloor:0 ; executivefloor:-1 }" this="88"/>
				<line interaction="1" text="expectedDirection (!overloaded)&#10;Specifications.Specification_Base.ajc$before$Specifications_Specification_Base$9$f51a68b7(LElevatorSystem/Elevator;)V(One(99))&#10;ElevatorSystem.Elevator.timeShift()V(One(256))&#10;ElevatorSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(161))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(106))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest3_4()V(One(50))&#10;cmu.testprograms.ElevatorTest.[elevatorTest3_4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {overloaded:0 ; !overloaded:-1 }" this="99"/>
			</coverage>
		</File>
		<File name="Specification_Empty.aj">
			<coverage>
				<line interaction="1" text="floor (True):&#10;Specifications.Specification_Empty.ajc$after$Specifications_Specification_Empty$5$948ac827(LElevatorSystem/Elevator;)V(One(70))&#10;ElevatorSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(161))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(106))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest9_4()V(One(71))&#10;cmu.testprograms.ElevatorTest.[elevatorTest9_4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!overloaded: [3]  ; overloaded: [4]  }" this="70"/>
			</coverage>
		</File>
		<File name="Specification_Overloaded.aj">
			<coverage>
				<line interaction="1" text="stayAt (!weight &amp; overloaded | weight)&#10;Specifications.Specification_Overloaded.ajc$before$Specifications_Specification_Overloaded$2$f51a68b7(LElevatorSystem/Elevator;)V(One(29))&#10;ElevatorSystem.Elevator.timeShift()V(One(256))&#10;ElevatorSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(161))&#10;ElevatorSystem.PL_Interface_impl.test(II)V(One(106))&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest11_4()V(One(85))&#10;cmu.testprograms.ElevatorTest.[elevatorTest11_4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(-1000)&#10;-&gt;&#10;2: {!weight &amp; !overloaded:-1000 ; !weight &amp; overloaded | weight:4 }" this="29"/>
			</coverage>
		</File>
		<File name="Specification_TwoThirdsFull.aj">
			<coverage>
				<line interaction="1" text="prevDir (twothirdsfull &amp; overloaded)&#10;Specifications.Specification_TwoThirdsFull.ajc$before$Specifications_Specification_TwoThirdsFull$1$2ff610f9(LElevatorSystem/Elevator;)V(One(17))&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(313))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift__role__overloaded()V(One(249))&#10;ElevatorSystem.Elevator.timeShift()V(One(257))&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(750)&#10;-&gt;&#10;2: {!twothirdsfull | twothirdsfull &amp; !overloaded:750 ; twothirdsfull &amp; overloaded:756 }" this="17"/>
				<line interaction="1" text="prevFloor (twothirdsfull &amp; overloaded)&#10;Specifications.Specification_TwoThirdsFull.ajc$before$Specifications_Specification_TwoThirdsFull$1$2ff610f9(LElevatorSystem/Elevator;)V(One(18))&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(313))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(236))&#10;ElevatorSystem.Elevator.timeShift__role__overloaded()V(One(249))&#10;ElevatorSystem.Elevator.timeShift()V(One(257))&#10;ElevatorSystem.PL_Interface_impl.Specification13()V({!weight &amp; !twothirdsfull &amp; !overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull:298 })&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!weight &amp; !twothirdsfull &amp; !executivefloor &amp; overloaded | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; !executivefloor | weight &amp; twothirdsfull:3 ; !weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; !twothirdsfull &amp; executivefloor:4 }&#10;-&gt;&#10;3: {twothirdsfull &amp; overloaded:2 ; !weight &amp; !twothirdsfull &amp; !executivefloor &amp; overloaded | !weight &amp; twothirdsfull &amp; !overloaded | weight &amp; !twothirdsfull &amp; !executivefloor | weight &amp; twothirdsfull &amp; !overloaded:3 ; !weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; !twothirdsfull &amp; executivefloor:4 }" this="18"/>
				<line interaction="1" text="i (weight &amp; executivefloor &amp; !overloaded):&#10;Specifications.Specification_TwoThirdsFull.existInLiftCallsInDirection(LElevatorSystem/Elevator$Direction;LElevatorSystem/Elevator;)Z(One(44))&#10;Specifications.Specification_TwoThirdsFull.ajc$privMethod$Specifications_Specification_TwoThirdsFull$Specifications_Specification_TwoThirdsFull$existInLiftCallsInDirection(LElevatorSystem/Elevator$Direction;LElevatorSystem/Elevator;)Z(One(1))&#10;Specifications.Specification_TwoThirdsFull.ajc$after$Specifications_Specification_TwoThirdsFull$2$2ff610f9(LElevatorSystem/Elevator;)V(One(32))&#10;ElevatorSystem.Elevator.continueInDirection(LElevatorSystem/Elevator$Direction;)V(One(330))&#10;ElevatorSystem.Elevator.timeShift__before__overloaded()V(One(228))&#10;ElevatorSystem.Elevator.timeShift()V({!weight &amp; !overloaded | weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded | weight &amp; twothirdsfull &amp; !overloaded:259 })&#10;ElevatorSystem.PL_Interface_impl.Specification13()V(One(298))&#10;ElevatorSystem.PL_Interface_impl.test(II)V({!weight &amp; !twothirdsfull &amp; !executivefloor &amp; !overloaded | !weight &amp; !twothirdsfull &amp; executivefloor | !weight &amp; twothirdsfull | weight &amp; !twothirdsfull &amp; executivefloor | weight &amp; twothirdsfull:101 })&#10;ElevatorSystem.PL_Interface_impl.start(II)V(One(63))&#10;ElevatorSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(48))&#10;cmu.testprograms.ElevatorTest.elevatorTest13()V(One(92))&#10;cmu.testprograms.ElevatorTest.[elevatorTest13](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {weight &amp; twothirdsfull &amp; executivefloor &amp; !overloaded: [1]  ; weight &amp; !twothirdsfull &amp; executivefloor &amp; !overloaded: [2]  }" this="44"/>
			</coverage>
		</File>
		<File name="StreamManipulator.java">
			<coverage>
				<line interaction="1" text="buffer (GZIP)&#10;net.sf.zipme.StreamManipulator.peekBits(I)I(One(54))&#10;net.sf.zipme.Inflater.decode()Z(One(554))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(19187), One(0))" this="54"/>
				<line interaction="1" text="bits_in_buffer (GZIP)&#10;net.sf.zipme.StreamManipulator.peekBits(I)I(One(55))&#10;net.sf.zipme.Inflater.decode()Z(One(554))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(16), One(0))" this="55"/>
				<line interaction="-1" text="buffer (GZIP)&#10;net.sf.zipme.StreamManipulator.dropBits(I)V(One(61))&#10;net.sf.zipme.InflaterHuffmanTree.getSymbol(Lnet/sf/zipme/StreamManipulator;)I(One(112))&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(447))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(GZIP, One(197), One(0))&#10;-&gt;&#10;1: One(0)" this="61"/>
				<line interaction="-1" text="bits_in_buffer (!GZIP)&#10;net.sf.zipme.StreamManipulator.dropBits(I)V(One(62))&#10;net.sf.zipme.Inflater.decodeHuffman()Z(One(494))&#10;net.sf.zipme.Inflater.decode()Z(One(612))&#10;net.sf.zipme.Inflater.inflate([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(156))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(264))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe2()V(One(29))&#10;cmu.testprograms.ZipMeTest.[runZipMe2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(8), One(0))&#10;-&gt;&#10;1: One(0)" this="62"/>
				<line interaction="-1" text="window_start (!GZIP &amp; !Adler32Checksum)&#10;net.sf.zipme.StreamManipulator.reset()V(One(139))&#10;net.sf.zipme.Inflater.reset__before__Adler32Checksum()V(One(300))&#10;net.sf.zipme.Inflater.reset()V(One(325))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(273))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; Adler32Checksum | GZIP, One(0), One(6))&#10;-&gt;&#10;1: One(0)" this="139"/>
				<line interaction="1" text="window (GZIP)&#10;net.sf.zipme.StreamManipulator.setInput([BII)V(One(152))&#10;net.sf.zipme.Inflater.setInput([BII)V(One(388))&#10;net.sf.zipme.InflaterInputStream.fill()V(One(112))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(165))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(2248), One(0))" this="152"/>
				<line interaction="1" text="window_end (GZIP)&#10;net.sf.zipme.StreamManipulator.setInput([BII)V(One(154))&#10;net.sf.zipme.Inflater.setInput([BII)V(One(388))&#10;net.sf.zipme.InflaterInputStream.fill()V(One(112))&#10;net.sf.zipme.InflaterInputStream.read([BII)I(One(165))&#10;net.sf.zipme.GZIPInputStream.read([BII)I(One(122))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(4096), One(0))" this="154"/>
			</coverage>
		</File>
		<File name="String.java">
			<coverage>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="70"/>
				<line interaction="1" text="value (!GZIP &amp; !DerivativeExtractCRC)&#10;java.lang.String.&lt;init&gt;([BII)V(One(143))&#10;java.lang.String.&lt;init&gt;([B)V(One(151))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(114))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2271), One(0))" this="143"/>
				<line interaction="1" text="value (!GZIP &amp; !DerivativeExtractCRC)&#10;java.lang.String.&lt;init&gt;([BII)V(One(143))&#10;java.lang.String.&lt;init&gt;([B)V(One(151))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(114))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2271), One(0))" this="151"/>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="320"/>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="323"/>
			</coverage>
		</File>
		<File name="StringBuilder.java">
			<coverage>
				<line interaction="1" text="value (a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;java.lang.String.valueOf([C)Ljava/lang/String;(One(323))&#10;java.lang.Character.toString()Ljava/lang/String;(One(4439))&#10;java.lang.String.valueOf(Ljava/lang/Object;)Ljava/lang/String;(One(320))&#10;java.lang.StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;(One(128))&#10;java.util.AbstractCollection.toString()Ljava/lang/String;(One(458))&#10;cmu.datatypes.ListTest.linkedListTest()V(One(90))&#10;cmu.datatypes.ListTest.[linkedListTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a | a &amp; !b | a &amp; b &amp; !c | a &amp; b &amp; c &amp; !d | a &amp; b &amp; c &amp; d &amp; !e | a &amp; b &amp; c &amp; d &amp; e &amp; !f | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; !g | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; !h | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; !j | a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; !i:0 ; a &amp; b &amp; c &amp; d &amp; e &amp; f &amp; g &amp; h &amp; j &amp; i:1001 }" this="128"/>
			</coverage>
		</File>
		<File name="StringBuilderTest.java">
			<coverage>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.StringBuilderTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.StringBuilderTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="13"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.StringBuilderTest.&lt;clinit&gt;()V(One(15))&#10;cmu.datatypes.StringBuilderTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="15"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.StringBuilderTest.&lt;clinit&gt;()V(One(17))&#10;cmu.datatypes.StringBuilderTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="17"/>
				<line interaction="1" text="index (True):&#10;cmu.datatypes.StringBuilderTest.indexOfTest()V(One(100))&#10;cmu.datatypes.StringBuilderTest.[indexOfTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(x, One( [2] ), One( [1] ))" this="100"/>
				<line interaction="1" text="length (x):&#10;cmu.datatypes.StringBuilderTest.conditionalLengtTest()V(One(114))&#10;cmu.datatypes.StringBuilderTest.[conditionalLengtTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : Choice(x, One( [4] ), One( [2] ))" this="114"/>
				<line interaction="1" text="value (True):&#10;cmu.datatypes.StringBuilderTest.conditionalLengtTest()V(One(116))&#10;cmu.datatypes.StringBuilderTest.[conditionalLengtTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(x, One( &lt;608&gt; ), One( &lt;609&gt; ))" this="116"/>
			</coverage>
		</File>
		<File name="StringTest.java">
			<coverage>
				<line interaction="1" text="x (True)&#10;cmu.datatypes.StringTest.&lt;clinit&gt;()V(One(13))&#10;cmu.datatypes.StringTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(x, One(1), One(0))" this="13"/>
				<line interaction="1" text="y (True)&#10;cmu.datatypes.StringTest.&lt;clinit&gt;()V(One(15))&#10;cmu.datatypes.StringTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(y, One(1), One(0))" this="15"/>
				<line interaction="1" text="z (True)&#10;cmu.datatypes.StringTest.&lt;clinit&gt;()V(One(17))&#10;cmu.datatypes.StringTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(z, One(1), One(0))" this="17"/>
				<line interaction="1" text="i (x):&#10;cmu.datatypes.StringTest.printConditionalTest()V(One(37))&#10;cmu.datatypes.StringTest.[printConditionalTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : Choice(x, One( [2] ), One( [1] ))" this="37"/>
				<line interaction="1" text="strongComponentNumber (y):&#10;cmu.datatypes.StringTest.printlnTest_2()V(One(47))&#10;cmu.datatypes.StringTest.[printlnTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(y, One( [1] ), One( [0] ))" this="47"/>
				<line interaction="1" text="s (x):&#10;cmu.datatypes.StringTest.concatenationTest()V(One(78))&#10;cmu.datatypes.StringTest.[concatenationTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;622&gt; ), One( &lt;610&gt; ))" this="78"/>
				<line interaction="1" text="s1 (x):&#10;cmu.datatypes.StringTest.concatenationTest3()V(One(107))&#10;cmu.datatypes.StringTest.[concatenationTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;612&gt; ), One( &lt;610&gt; ))" this="107"/>
				<line interaction="1" text="s2 (y):&#10;cmu.datatypes.StringTest.concatenationTest3()V(One(112))&#10;cmu.datatypes.StringTest.[concatenationTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;614&gt; )&#10; -&gt; &#10;2 : Choice(y, One( &lt;616&gt; ), One( &lt;614&gt; ))" this="112"/>
				<line interaction="1" text="s1 (x):&#10;cmu.datatypes.StringTest.concatenationTest4()V(One(126))&#10;cmu.datatypes.StringTest.[concatenationTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;612&gt; ), One( &lt;610&gt; ))" this="126"/>
				<line interaction="1" text="s2 (y):&#10;cmu.datatypes.StringTest.concatenationTest4()V(One(131))&#10;cmu.datatypes.StringTest.[concatenationTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;614&gt; )&#10; -&gt; &#10;2 : Choice(y, One( &lt;616&gt; ), One( &lt;614&gt; ))" this="131"/>
				<line interaction="1" text="s (z):&#10;cmu.datatypes.StringTest.concatenationTest4()V(One(136))&#10;cmu.datatypes.StringTest.[concatenationTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;626&gt; )&#10; -&gt; &#10;2 : Choice(z, One( &lt;632&gt; ), One( &lt;626&gt; ))" this="136"/>
				<line interaction="1" text="s1 (x):&#10;cmu.datatypes.StringTest.longStringConcatentationTest()V(One(156))&#10;cmu.datatypes.StringTest.[longStringConcatentationTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;612&gt; ), One( &lt;610&gt; ))" this="156"/>
				<line interaction="1" text="s1 (x):&#10;cmu.datatypes.StringTest.longStringConcatentationTest2()V(One(168))&#10;cmu.datatypes.StringTest.[longStringConcatentationTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;623&gt; ), One( &lt;610&gt; ))" this="168"/>
				<line interaction="1" text="s1 (y):&#10;cmu.datatypes.StringTest.longStringConcatentationTest2()V(One(171))&#10;cmu.datatypes.StringTest.[longStringConcatentationTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : Choice(x, One( &lt;623&gt; ), One( &lt;610&gt; ))&#10; -&gt; &#10;3 : Choice(y, One( &lt;632&gt; ), Choice(x, One( &lt;623&gt; ), One( &lt;610&gt; )))" this="171"/>
				<line interaction="1" text="s1 (z):&#10;cmu.datatypes.StringTest.longStringConcatentationTest2()V(One(174))&#10;cmu.datatypes.StringTest.[longStringConcatentationTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : Choice(y, One( &lt;632&gt; ), Choice(x, One( &lt;623&gt; ), One( &lt;610&gt; )))&#10; -&gt; &#10;4 : Choice(z, One( &lt;645&gt; ), Choice(y, One( &lt;632&gt; ), Choice(x, One( &lt;623&gt; ), One( &lt;610&gt; ))))" this="174"/>
				<line interaction="1" text="s1 (x):&#10;cmu.datatypes.StringTest.lengthTest()V(One(186))&#10;cmu.datatypes.StringTest.[lengthTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : Choice(x, One( &lt;622&gt; ), One( &lt;610&gt; ))" this="186"/>
				<line interaction="1" text="i (x):&#10;cmu.datatypes.StringTest.lengthTest()V(One(194))&#10;cmu.datatypes.StringTest.[lengthTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [11] )&#10; -&gt; &#10;2 : Choice(x, One( [12] ), One( [11] ))" this="194"/>
				<line interaction="1" text="d (x):&#10;cmu.datatypes.StringTest.doubleTest()V(One(205))&#10;cmu.datatypes.StringTest.[doubleTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1072693248] )&#10; -&gt; &#10;2 : Choice(x, One( [1079590912] ), One( [1072693248] ))" this="205"/>
				<line interaction="1" text="d (x &amp; y):&#10;cmu.datatypes.StringTest.doubleTest()V(One(207))&#10;cmu.datatypes.StringTest.[doubleTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : Choice(x, One( [1079590912] ), One( [1072693248] ))&#10; -&gt; &#10;3 : Choice(x &amp; y, One( [1079607296] ), Choice(x, One( [1079590912] ), One( [1072693248] )))" this="207"/>
				<line interaction="1" text="s (x):&#10;cmu.datatypes.StringTest.testChach()V(One(219))&#10;cmu.datatypes.StringTest.[testChach](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(x, One( &lt;626&gt; ), One( [0] ))" this="219"/>
			</coverage>
		</File>
		<File name="TestJPF.java">
			<coverage>
				<line interaction="1" text="e (y):&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(650))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(y, One( &lt;629&gt; ), One( [0] ))" this="0"/>
				<line interaction="1" text="e (y):&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(650))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(y, One( &lt;629&gt; ), One( [0] ))" this="650"/>
			</coverage>
		</File>
		<File name="Test_Actions.java">
			<coverage>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyAdd__before__keys()V(One(31))&#10;EmailSystem.Test_Actions.bobKeyAdd()V(One(52))&#10;EmailSystem.Scenario.test()V(One(7))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(2), One(1))&#10;-&gt;&#10;1: One(2)" this="31"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyAdd__role__keys()V(One(39))&#10;EmailSystem.Test_Actions.bobKeyAdd()V(One(50))&#10;EmailSystem.Scenario.test()V(One(7))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: Choice(keys, One(2), One(1))" this="39"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyAddChuck__before__keys()V(One(60))&#10;EmailSystem.Test_Actions.bobKeyAddChuck()V(One(80))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(28))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(3), One(2))&#10;-&gt;&#10;1: One(3)" this="60"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyAddChuck__role__keys()V(One(68))&#10;EmailSystem.Test_Actions.bobKeyAddChuck()V(One(78))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(28))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2)&#10;-&gt;&#10;2: Choice(keys, One(3), One(2))" this="68"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyChange__before__keys()V(One(85))&#10;EmailSystem.Test_Actions.bobKeyChange()V(One(98))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(29))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(4), One(3))&#10;-&gt;&#10;1: One(4)" this="85"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobKeyChange__role__keys()V(One(90))&#10;EmailSystem.Test_Actions.bobKeyChange()V(One(96))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(29))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(3)&#10;-&gt;&#10;2: Choice(keys, One(4), One(3))" this="90"/>
				<line interaction="-1" text="size (!addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobSetAddressBook__before__addressbook()V(One(103))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(117))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(addressbook, One(3), One(2))&#10;-&gt;&#10;1: One(3)" this="103"/>
				<line interaction="-1" text="executedUnimplementedAction (!addressbook)&#10;EmailSystem.Test_Actions.bobSetAddressBook__before__addressbook()V(One(104))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(117))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!keys, One(1), One(0))&#10;-&gt;&#10;1: One(1)" this="104"/>
				<line interaction="1" text="size (addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobSetAddressBook__role__addressbook()V(One(108))&#10;EmailSystem.Test_Actions.bobSetAddressBook()V(One(115))&#10;EmailSystem.Scenario.test()V(One(8))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2)&#10;-&gt;&#10;2: Choice(addressbook, One(3), One(2))" this="108"/>
				<line interaction="-1" text="size (!addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobToAlias__before__addressbook()V(One(122))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(141))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(addressbook, One(4), One(3))&#10;-&gt;&#10;1: One(4)" this="122"/>
				<line interaction="-1" text="executedUnimplementedAction (!addressbook)&#10;EmailSystem.Test_Actions.bobToAlias__before__addressbook()V(One(123))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(141))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook:0 ; !keys | keys &amp; !addressbook:1 }&#10;-&gt;&#10;1: One(1)" this="123"/>
				<line interaction="1" text="size (addressbook)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.bobToAlias__role__addressbook()V(One(131))&#10;EmailSystem.Test_Actions.bobToAlias()V(One(139))&#10;EmailSystem.Scenario.test()V(One(10))&#10;cmu.testprograms.EmailTest.emailTest()V(One(16))&#10;cmu.testprograms.EmailTest.[emailTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(3)&#10;-&gt;&#10;2: Choice(addressbook, One(4), One(3))" this="131"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.chuckKeyAdd__before__keys()V(One(157))&#10;EmailSystem.Test_Actions.chuckKeyAdd()V(One(176))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(31))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(6), One(5))&#10;-&gt;&#10;1: One(6)" this="157"/>
				<line interaction="-1" text="executedUnimplementedAction (!keys)&#10;EmailSystem.Test_Actions.chuckKeyAdd__before__keys()V(One(158))&#10;EmailSystem.Test_Actions.chuckKeyAdd()V(One(176))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(31))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook:0 ; !keys | keys &amp; !addressbook:1 }&#10;-&gt;&#10;1: One(1)" this="158"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.chuckKeyAdd__role__keys()V(One(165))&#10;EmailSystem.Test_Actions.chuckKeyAdd()V(One(174))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(31))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(5)&#10;-&gt;&#10;2: Choice(keys, One(6), One(5))" this="165"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey__before__keys()V(One(184))&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey()V(One(203))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(32))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(7), One(6))&#10;-&gt;&#10;1: One(7)" this="184"/>
				<line interaction="-1" text="executedUnimplementedAction (!keys)&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey__before__keys()V(One(185))&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey()V(One(203))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(32))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook:0 ; !keys | keys &amp; !addressbook:1 }&#10;-&gt;&#10;1: One(1)" this="185"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey__role__keys()V(One(192))&#10;EmailSystem.Test_Actions.rjhDeletePrivateKey()V(One(201))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(32))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(6)&#10;-&gt;&#10;2: Choice(keys, One(7), One(6))" this="192"/>
				<line interaction="-1" text="size (!forward)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhEnableForwarding__before__forward()V(One(208))&#10;EmailSystem.Test_Actions.rjhEnableForwarding()V(One(221))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(33))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(forward, One(8), One(7))&#10;-&gt;&#10;1: One(8)" this="208"/>
				<line interaction="-1" text="executedUnimplementedAction (!forward)&#10;EmailSystem.Test_Actions.rjhEnableForwarding__before__forward()V(One(209))&#10;EmailSystem.Test_Actions.rjhEnableForwarding()V(One(221))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(33))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!keys | keys &amp; !addressbook, One(1), One(0))&#10;-&gt;&#10;1: One(1)" this="209"/>
				<line interaction="1" text="size (forward)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhEnableForwarding__role__forward()V(One(213))&#10;EmailSystem.Test_Actions.rjhEnableForwarding()V(One(219))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(33))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(7)&#10;-&gt;&#10;2: Choice(forward, One(8), One(7))" this="213"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyAdd__before__keys()V(One(229))&#10;EmailSystem.Test_Actions.rjhKeyAdd()V(One(248))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(34))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(9), One(8))&#10;-&gt;&#10;1: One(9)" this="229"/>
				<line interaction="-1" text="executedUnimplementedAction (!keys)&#10;EmailSystem.Test_Actions.rjhKeyAdd__before__keys()V(One(230))&#10;EmailSystem.Test_Actions.rjhKeyAdd()V(One(248))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(34))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook &amp; forward:0 ; !keys | keys &amp; !addressbook | keys &amp; addressbook &amp; !forward:1 }&#10;-&gt;&#10;1: One(1)" this="230"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyAdd__role__keys()V(One(237))&#10;EmailSystem.Test_Actions.rjhKeyAdd()V(One(246))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(34))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(8)&#10;-&gt;&#10;2: Choice(keys, One(9), One(8))" this="237"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyAddChuck__before__keys()V(One(257))&#10;EmailSystem.Test_Actions.rjhKeyAddChuck()V(One(278))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(35))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(10), One(9))&#10;-&gt;&#10;1: One(10)" this="257"/>
				<line interaction="-1" text="executedUnimplementedAction (!keys)&#10;EmailSystem.Test_Actions.rjhKeyAddChuck__before__keys()V(One(258))&#10;EmailSystem.Test_Actions.rjhKeyAddChuck()V(One(278))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(35))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook &amp; forward:0 ; !keys | keys &amp; !addressbook | keys &amp; addressbook &amp; !forward:1 }&#10;-&gt;&#10;1: One(1)" this="258"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyAddChuck__role__keys()V(One(266))&#10;EmailSystem.Test_Actions.rjhKeyAddChuck()V(One(276))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(35))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(9)&#10;-&gt;&#10;2: Choice(keys, One(10), One(9))" this="266"/>
				<line interaction="-1" text="size (!keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyChange__before__keys()V(One(283))&#10;EmailSystem.Test_Actions.rjhKeyChange()V(One(296))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(36))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(keys, One(11), One(10))&#10;-&gt;&#10;1: One(11)" this="283"/>
				<line interaction="-1" text="executedUnimplementedAction (!keys)&#10;EmailSystem.Test_Actions.rjhKeyChange__before__keys()V(One(284))&#10;EmailSystem.Test_Actions.rjhKeyChange()V(One(296))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(36))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {keys &amp; addressbook &amp; forward:0 ; !keys | keys &amp; !addressbook | keys &amp; addressbook &amp; !forward:1 }&#10;-&gt;&#10;1: One(1)" this="284"/>
				<line interaction="1" text="size (keys)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhKeyChange__role__keys()V(One(288))&#10;EmailSystem.Test_Actions.rjhKeyChange()V(One(294))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(36))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(10)&#10;-&gt;&#10;2: Choice(keys, One(11), One(10))" this="288"/>
				<line interaction="-1" text="size (!autoresponder)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond__before__autoresponder()V(One(301))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond()V(One(314))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(37))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(autoresponder, One(12), One(11))&#10;-&gt;&#10;1: One(12)" this="301"/>
				<line interaction="-1" text="executedUnimplementedAction (!autoresponder)&#10;EmailSystem.Test_Actions.rjhSetAutoRespond__before__autoresponder()V(One(302))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond()V(One(314))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(37))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!keys | keys &amp; !addressbook | keys &amp; addressbook &amp; !forward, One(1), One(0))&#10;-&gt;&#10;1: One(1)" this="302"/>
				<line interaction="1" text="size (autoresponder)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond__role__autoresponder()V(One(306))&#10;EmailSystem.Test_Actions.rjhSetAutoRespond()V(One(312))&#10;cmu.testprograms.EmailTest.emailTest2()V(One(37))&#10;cmu.testprograms.EmailTest.[emailTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(11)&#10;-&gt;&#10;2: Choice(autoresponder, One(12), One(11))" this="306"/>
			</coverage>
		</File>
		<File name="Throwable.java">
			<coverage>
				<line interaction="1" text="detailMessage (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(54))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(10))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:867 }" this="54"/>
				<line interaction="1" text="cause (action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;TestSpecifications.SpecificationException.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V(One(10))&#10;Specifications.Specification4.ajc$after$Specifications_Specification4$1$a150bd12(LMinePumpSystem/MinePump;)V(One(14))&#10;MinePumpSystem.Actions.timeShift()V(One(55))&#10;MinePumpSystem.PL_Interface_impl.randomSequenceOfActions(I)V(One(177))&#10;MinePumpSystem.PL_Interface_impl.test(II)V(One(83))&#10;MinePumpSystem.PL_Interface_impl.start(II)V({!action1_1  | ...:51 })&#10;MinePumpSystem.PL_Interface_impl.main([Ljava/lang/String;)V(One(38))&#10;cmu.testprograms.MineTest.mineTest4()V(One(33))&#10;cmu.testprograms.MineTest.[mineTest4](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!action1_1  | ...:0 ; action1_1 &amp; action2_1 &amp; !action3_1 &amp; !action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm | action1_1 &amp; action2_1 &amp; !action3_1 &amp; action4_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm &amp; !stopCommand | action1_1 &amp; action2_1 &amp; action3_1 &amp; highWaterSensor &amp; !lowWaterSensor &amp; methaneAlarm:875 }" this="55"/>
			</coverage>
		</File>
		<File name="TimSort.java">
			<coverage>
				<line interaction="1" text="minGallop (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(102))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:7 }" this="102"/>
				<line interaction="1" text="a (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(139))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9808 }" this="139"/>
				<line interaction="1" text="c (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(140))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9807 }" this="140"/>
				<line interaction="1" text="tmp (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(147))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9810 }" this="147"/>
				<line interaction="1" text="runBase (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(162))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9811 }" this="162"/>
				<line interaction="1" text="runLen (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(163))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9812 }" this="163"/>
				<line interaction="1" text="stackSize (STRONGLYCONNECTED___)&#10;java.util.TimSort.pushRun(II)V(One(388))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(213))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="173"/>
				<line interaction="1" text="runLen (STRONGLYCONNECTED___)&#10;java.util.TimSort.&lt;init&gt;([Ljava/lang/Object;Ljava/util/Comparator;)V(One(163))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(199))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9812 }" this="199"/>
				<line interaction="1" text="stackSize (STRONGLYCONNECTED___)&#10;java.util.TimSort.pushRun(II)V(One(388))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(213))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="213"/>
				<line interaction="1" text="stackSize (STRONGLYCONNECTED___)&#10;java.util.TimSort.pushRun(II)V(One(388))&#10;java.util.TimSort.sort([Ljava/lang/Object;IILjava/util/Comparator;)V(One(213))&#10;java.util.TimSort.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(173))&#10;java.util.Arrays.sort([Ljava/lang/Object;Ljava/util/Comparator;)V(One(659))&#10;java.util.Collections.sort(Ljava/util/List;Ljava/util/Comparator;)V(One(217))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(143))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="388"/>
			</coverage>
		</File>
		<File name="Transaction.java">
			<coverage>
				<line interaction="3" text="old (!logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction &amp; transactionlog):&#10;BankAccountDouble.Transaction.transfer__wrappee__Transaction(LBankAccountDouble/Account;LBankAccountDouble/Account;D)Z(One(23))&#10;BankAccountDouble.Transaction.transfer(LBankAccountDouble/Account;LBankAccountDouble/Account;I)Z(One(61))&#10;BankAccountDouble.Main.&lt;init&gt;()V({!logging &amp; transaction &amp; !transactionlog | !logging &amp; transaction &amp; transactionlog &amp; dailylimit | logging &amp; transaction:82 })&#10;BankAccountDouble.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountDouble()V(One(19))&#10;cmu.testprograms.BankAccountTest.[runBankAccountDouble](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;4 : {!interest &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1077805056]  ; interest &amp; logging &amp; transaction &amp; transactionlog &amp; !dailylimit: [1077870592]  ; interest &amp; transaction &amp; transactionlog &amp; dailylimit: [1080631296]  ; !interest &amp; transaction &amp; transactionlog &amp; dailylimit: [1080623104]  }" this="23"/>
				<line interaction="2" text="old (overdraft &amp; logging &amp; transaction &amp; transactionlog):&#10;BankAccountFloat.Transaction.transfer__wrappee__Transaction(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z(One(30))&#10;BankAccountFloat.Transaction.transfer(LBankAccountFloat/Account;LBankAccountFloat/Account;F)Z({transaction &amp; transactionlog:61 })&#10;BankAccountFloat.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountFloat.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountFloat()V(One(33))&#10;cmu.testprograms.BankAccountTest.[runBankAccountFloat](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {interest &amp; transaction &amp; transactionlog: [1106771968]  ; !interest &amp; transaction &amp; transactionlog: [1106247680]  }&#10; -&gt; &#10;4 : {interest &amp; !overdraft &amp; transaction &amp; transactionlog | interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [1106771968]  ; !interest &amp; !overdraft &amp; transaction &amp; transactionlog | !interest &amp; overdraft &amp; !logging &amp; transaction &amp; transactionlog: [1106247680]  ; !interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog: [1141800960]  ; interest &amp; overdraft &amp; logging &amp; transaction &amp; transactionlog: [1141817344]  }" this="30"/>
				<line interaction="1" text="transactionCounter (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccount.Transaction.transfer(LBankAccount/Account;LBankAccount/Account;I)Z(One(49))&#10;BankAccount.Main.&lt;init&gt;()V({transaction:85 })&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog:1 }" this="49"/>
				<line interaction="1" text="transactionCounter (overdraft &amp; logging &amp; transaction &amp; transactionlog)&#10;BankAccountLong.Transaction.transfer(LBankAccountLong/Account;LBankAccountLong/Account;J)Z(One(62))&#10;BankAccountLong.Main.&lt;init&gt;()V({transaction:82 })&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!overdraft | overdraft &amp; !logging | overdraft &amp; logging &amp; !transaction | overdraft &amp; logging &amp; transaction &amp; !transactionlog:0 ; overdraft &amp; logging &amp; transaction &amp; transactionlog:1 }" this="62"/>
				<line interaction="1" text="transactions (transaction)&#10;BankAccount.Transaction.&lt;init&gt;()V(One(73))&#10;BankAccount.Main.&lt;init&gt;()V(One(85))&#10;BankAccount.Main.main([Ljava/lang/String;)V(One(8))&#10;cmu.testprograms.BankAccountTest.runBankAccount()V(One(12))&#10;cmu.testprograms.BankAccountTest.[runBankAccount](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transaction:0 ; transaction:707 }" this="73"/>
				<line interaction="1" text="transactions (transaction)&#10;BankAccountLong.Transaction.&lt;init&gt;()V(One(90))&#10;BankAccountLong.Main.&lt;init&gt;()V(One(82))&#10;BankAccountLong.Main.main([Ljava/lang/String;)V(One(7))&#10;cmu.testprograms.BankAccountTest.runBankAccountLong()V(One(26))&#10;cmu.testprograms.BankAccountTest.[runBankAccountLong](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!transaction:0 ; transaction:707 }" this="90"/>
			</coverage>
		</File>
		<File name="TransactionTimestamp.java">
			<coverage>
				<line interaction="1" text="_capsule (USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.TransactionTimestamp.&lt;init&gt;(Lorg/prevayler/implementation/Capsule;JJ)V(One(25))&#10;org.prevayler.implementation.TransactionTimestamp.cleanCopy()Lorg/prevayler/implementation/TransactionTimestamp;(One(43))&#10;org.prevayler.implementation.journal.TransientJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(28))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(56865), One(0))" this="25"/>
				<line interaction="2" text="_executionTime (USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.TransactionTimestamp.&lt;init&gt;(Lorg/prevayler/implementation/Capsule;JJ)V(One(27))&#10;org.prevayler.implementation.TransactionTimestamp.cleanCopy()Lorg/prevayler/implementation/TransactionTimestamp;(One(43))&#10;org.prevayler.implementation.journal.TransientJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(28))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK &amp; USE_TRANSIENT_MODE, Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK &amp; USE_TRANSIENT_MODE, One(1434964341718), One(1434964341734)), One(0))" this="27"/>
				<line interaction="2" text="fastTime (True)&#10;java.util.Date.&lt;init&gt;(J)V(One(176))&#10;org.prevayler.implementation.TransactionTimestamp.executionTime()Ljava/util/Date;(One(39))&#10;org.prevayler.implementation.PrevalentSystemGuard.receive(Lorg/prevayler/implementation/TransactionTimestamp;)V(One(56))&#10;org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V(One(42))&#10;org.prevayler.implementation.publishing.CentralPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionGuide;)V(One(87))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;3: Choice(!USE_BROKEN_CLOCK, Choice(!USE_BROKEN_CLOCK &amp; !USE_PAUSABLE_CLOCK, One(1434964341718), One(1434964341734)), One(0))" this="39"/>
			</coverage>
		</File>
		<File name="TransientJournal.java">
			<coverage>
				<line interaction="1" text="journal (USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.TransientJournal.&lt;init&gt;()V(One(18))&#10;org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;(One(325))&#10;org.prevayler.PrevaylerFactory.publisher(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;)Lorg/prevayler/implementation/publishing/TransactionPublisher;(One(312))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(293))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(1859), One(0))" this="18"/>
				<line interaction="1" text="size (USE_TRANSIENT_MODE)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;org.prevayler.implementation.journal.TransientJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(28))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(77))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(1), One(0))" this="28"/>
				<line interaction="1" text="_initialTransactionInitialized (USE_TRANSIENT_MODE)&#10;org.prevayler.implementation.journal.TransientJournal.update(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(36))&#10;org.prevayler.implementation.publishing.CentralPublisher.subscribe(Lorg/prevayler/implementation/publishing/TransactionSubscriber;J)V(One(98))&#10;org.prevayler.implementation.PrevalentSystemGuard.subscribeTo(Lorg/prevayler/implementation/publishing/TransactionPublisher;)V(One(46))&#10;org.prevayler.implementation.PrevaylerImpl.&lt;init&gt;(Lorg/prevayler/implementation/snapshot/GenericSnapshotManager;Lorg/prevayler/implementation/publishing/TransactionPublisher;Lorg/prevayler/foundation/serialization/Serializer;)V(One(48))&#10;org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;(One(295))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(71))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_TRANSIENT_MODE, One(1), One(0))" this="36"/>
			</coverage>
		</File>
		<File name="Turn.java">
			<coverage>
				<line interaction="1" text="_allowed (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.Turn.start()V(One(57))&#10;org.prevayler.foundation.Guided.startTurn()V(One(15))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(91))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(2)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(2))" this="57"/>
				<line interaction="1" text="_allowed (!USE_TRANSIENT_MODE)&#10;org.prevayler.foundation.Turn.allow()V(One(69))&#10;org.prevayler.foundation.Turn.end()V(One(65))&#10;org.prevayler.foundation.Guided.endTurn()V(One(19))&#10;org.prevayler.implementation.journal.PersistentJournal.append(Lorg/prevayler/implementation/TransactionGuide;)V(One(82))&#10;org.prevayler.implementation.publishing.CentralPublisher.publishWithoutWorryingAboutNewSubscriptions(Lorg/prevayler/implementation/Capsule;)V(One(64))&#10;org.prevayler.implementation.publishing.CentralPublisher.publish(Lorg/prevayler/implementation/Capsule;)V(One(49))&#10;org.prevayler.implementation.PrevaylerImpl.publish(Lorg/prevayler/implementation/Capsule;)V(One(65))&#10;org.prevayler.implementation.PrevaylerImpl.execute(Lorg/prevayler/Transaction;)V(One(60))&#10;org.prevayler.demos.demo1.PrimeCalculator.start()V(One(31))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(85))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!USE_TRANSIENT_MODE, One(1), One(0))" this="69"/>
			</coverage>
		</File>
		<File name="VariabilityAwareTest.java">
			<coverage>
				<line interaction="1" text="a (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(20))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a:0 ; a:1 }" this="20"/>
				<line interaction="1" text="b (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(22))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!b:0 ; b:1 }" this="22"/>
				<line interaction="1" text="c (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(24))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!c:0 ; c:1 }" this="24"/>
				<line interaction="1" text="d (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(26))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!d:0 ; d:1 }" this="26"/>
				<line interaction="1" text="e (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(28))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!e:0 ; e:1 }" this="28"/>
				<line interaction="1" text="f (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(30))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!f:0 ; f:1 }" this="30"/>
				<line interaction="1" text="g (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(32))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!g:0 ; g:1 }" this="32"/>
				<line interaction="1" text="h (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(34))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!h:0 ; h:1 }" this="34"/>
				<line interaction="1" text="j (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(36))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!j:0 ; j:1 }" this="36"/>
				<line interaction="1" text="x (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(39))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!x:0 ; x:1 }" this="39"/>
				<line interaction="1" text="y (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(41))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!y:0 ; y:1 }" this="41"/>
				<line interaction="1" text="z (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(43))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!z:0 ; z:1 }" this="43"/>
				<line interaction="1" text="rounds (z):&#10;cmu.VariabilityAwareTest.simpleForTest()V(One(50))&#10;cmu.VariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!z: [1]  ; z: [4]  }" this="50"/>
				<line interaction="1" text="rounds (y):&#10;cmu.VariabilityAwareTest.simpleForTest()V(One(53))&#10;cmu.VariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!z: [1]  ; z: [4]  }&#10; -&gt; &#10;3 : {!y &amp; !z: [1]  ; y: [2]  ; !y &amp; z: [4]  }" this="53"/>
				<line interaction="1" text="start (!y &amp; z):&#10;cmu.VariabilityAwareTest.simpleForTest()V(One(56))&#10;cmu.VariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!y &amp; !z: [2]  ; !y &amp; z | y: [3]  }&#10; -&gt; &#10;3 : {!y &amp; !z: [2]  ; y: [3]  ; !y &amp; z: [4]  }" this="56"/>
				<line interaction="1" text="a (!y &amp; z):&#10;cmu.VariabilityAwareTest.simpleForTest()V(One(57))&#10;cmu.VariabilityAwareTest.[simpleForTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!y &amp; !z: [2]  ; !y &amp; z | y: [3]  }&#10; -&gt; &#10;3 : {!y &amp; !z: [2]  ; y: [3]  ; !y &amp; z: [4]  }" this="57"/>
				<line interaction="1" text="rounds (z):&#10;cmu.VariabilityAwareTest.forTest()V(One(68))&#10;cmu.VariabilityAwareTest.[forTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!z: [1]  ; z: [4]  }" this="68"/>
				<line interaction="1" text="increment (y):&#10;cmu.VariabilityAwareTest.forTest()V(One(71))&#10;cmu.VariabilityAwareTest.[forTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!y: [1]  ; y: [-1]  }" this="71"/>
				<line interaction="1" text="start (z):&#10;cmu.VariabilityAwareTest.forTest()V(One(74))&#10;cmu.VariabilityAwareTest.[forTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : {!z: [2]  ; z: [3]  }" this="74"/>
				<line interaction="2" text="a (z):&#10;cmu.VariabilityAwareTest.forTest()V(One(75))&#10;cmu.VariabilityAwareTest.[forTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!y: [1]  ; y: [-1]  }&#10; -&gt; &#10;4 : {!y &amp; !z: [1]  ; !y &amp; z: [2]  ; y &amp; z: [-2]  ; y &amp; !z: [-1]  }" this="75"/>
				<line interaction="1" text="rounds (z):&#10;cmu.VariabilityAwareTest.forTest_2()V(One(102))&#10;cmu.VariabilityAwareTest.[forTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!z: [1]  ; z: [4]  }" this="102"/>
				<line interaction="1" text="increment (y):&#10;cmu.VariabilityAwareTest.forTest_2()V(One(105))&#10;cmu.VariabilityAwareTest.[forTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!y: [1]  ; y: [-1]  }" this="105"/>
				<line interaction="1" text="start (z):&#10;cmu.VariabilityAwareTest.forTest_2()V(One(108))&#10;cmu.VariabilityAwareTest.[forTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : {!z: [2]  ; z: [3]  }" this="108"/>
				<line interaction="2" text="a (z):&#10;cmu.VariabilityAwareTest.forTest_2()V(One(109))&#10;cmu.VariabilityAwareTest.[forTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!y: [1]  ; y: [-1]  }&#10; -&gt; &#10;4 : {!y &amp; !z: [1]  ; !y &amp; z: [2]  ; y &amp; z: [-2]  ; y &amp; !z: [-1]  }" this="109"/>
				<line interaction="1" text="i (x):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(135))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {!x: [1]  ; x: [2]  }" this="135"/>
				<line interaction="1" text="i (y):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(138))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {!x: [1]  ; x: [2]  }&#10; -&gt; &#10;3 : {!x &amp; !y: [1]  ; !x &amp; y | x &amp; !y: [2]  ; x &amp; y: [3]  }" this="138"/>
				<line interaction="1" text="i (z):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(141))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : {!x &amp; !y: [1]  ; !x &amp; y | x &amp; !y: [2]  ; x &amp; y: [3]  }&#10; -&gt; &#10;4 : {!x &amp; !y &amp; !z: [1]  ; !x &amp; !y &amp; z | !x &amp; y &amp; !z | x &amp; !y &amp; !z: [2]  ; !x &amp; y &amp; z | x &amp; !y &amp; z | x &amp; y &amp; !z: [3]  ; x &amp; y &amp; z: [4]  }" this="141"/>
				<line interaction="1" text="i (a):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(144))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4 : {!x &amp; !y &amp; !z: [1]  ; !x &amp; !y &amp; z | !x &amp; y &amp; !z | x &amp; !y &amp; !z: [2]  ; !x &amp; y &amp; z | x &amp; !y &amp; z | x &amp; y &amp; !z: [3]  ; x &amp; y &amp; z: [4]  }&#10; -&gt; &#10;5 : {!a &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !x &amp; !y &amp; z | !a &amp; !x &amp; y &amp; !z | !a &amp; x &amp; !y &amp; !z | a &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !x &amp; y &amp; z | !a &amp; x &amp; !y &amp; z | !a &amp; x &amp; y &amp; !z | a &amp; !x &amp; !y &amp; z | a &amp; !x &amp; y &amp; !z | a &amp; x &amp; !y &amp; !z: [3]  ; !a &amp; x &amp; y &amp; z | a &amp; !x &amp; y &amp; z | a &amp; x &amp; !y &amp; z | a &amp; x &amp; y &amp; !z: [4]  ; a &amp; x &amp; y &amp; z: [5]  }" this="144"/>
				<line interaction="1" text="i (b):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(147))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;5 : {!a &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !x &amp; !y &amp; z | !a &amp; !x &amp; y &amp; !z | !a &amp; x &amp; !y &amp; !z | a &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !x &amp; y &amp; z | !a &amp; x &amp; !y &amp; z | !a &amp; x &amp; y &amp; !z | a &amp; !x &amp; !y &amp; z | a &amp; !x &amp; y &amp; !z | a &amp; x &amp; !y &amp; !z: [3]  ; !a &amp; x &amp; y &amp; z | a &amp; !x &amp; y &amp; z | a &amp; x &amp; !y &amp; z | a &amp; x &amp; y &amp; !z: [4]  ; a &amp; x &amp; y &amp; z: [5]  }&#10; -&gt; &#10;6 : {!a &amp; !b &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; x &amp; !y &amp; !z | !a &amp; b &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !x &amp; y &amp; z | !a &amp; !b &amp; x &amp; !y &amp; z | !a &amp; !b &amp; x &amp; y &amp; !z | !a &amp; b &amp; !x &amp; !y &amp; z | !a &amp; b &amp; !x &amp; y &amp; !z | !a &amp; b &amp; x &amp; !y &amp; !z | a &amp; !b &amp; !x &amp; !y &amp; z | a &amp; !b &amp; !x &amp; y &amp; !z | a &amp; !b &amp; x &amp; !y &amp; !z | a &amp; b &amp; !x &amp; !y &amp; !z: [3]  ; !a &amp; !b &amp; x &amp; y &amp; z | !a &amp; b &amp; !x &amp; y &amp; z | !a &amp; b &amp; x &amp; !y &amp; z | !a &amp; b &amp; x &amp; y &amp; !z | a &amp; !b &amp; !x &amp; y &amp; z | a &amp; !b &amp; x &amp; !y &amp; z | a &amp; !b &amp; x &amp; y &amp; !z | a &amp; b &amp; !x &amp; !y &amp; z | a &amp; b &amp; !x &amp; y &amp; !z | a &amp; b &amp; x &amp; !y &amp; !z: [4]  ; !a &amp; b &amp; x &amp; y &amp; z | a &amp; !b &amp; x &amp; y &amp; z | a &amp; b &amp; !x &amp; y &amp; z | a &amp; b &amp; x &amp; !y &amp; z | a &amp; b &amp; x &amp; y &amp; !z: [5]  ; a &amp; b &amp; x &amp; y &amp; z: [6]  }" this="147"/>
				<line interaction="1" text="i (c):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(151))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;6 : {!a &amp; !b &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; x &amp; !y &amp; !z | !a &amp; b &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !x &amp; y &amp; z | !a &amp; !b &amp; x &amp; !y &amp; z | !a &amp; !b &amp; x &amp; y &amp; !z | !a &amp; b &amp; !x &amp; !y &amp; z | !a &amp; b &amp; !x &amp; y &amp; !z | !a &amp; b &amp; x &amp; !y &amp; !z | a &amp; !b &amp; !x &amp; !y &amp; z | a &amp; !b &amp; !x &amp; y &amp; !z | a &amp; !b &amp; x &amp; !y &amp; !z | a &amp; b &amp; !x &amp; !y &amp; !z: [3]  ; !a &amp; !b &amp; x &amp; y &amp; z | !a &amp; b &amp; !x &amp; y &amp; z | !a &amp; b &amp; x &amp; !y &amp; z | !a &amp; b &amp; x &amp; y &amp; !z | a &amp; !b &amp; !x &amp; y &amp; z | a &amp; !b &amp; x &amp; !y &amp; z | a &amp; !b &amp; x &amp; y &amp; !z | a &amp; b &amp; !x &amp; !y &amp; z | a &amp; b &amp; !x &amp; y &amp; !z | a &amp; b &amp; x &amp; !y &amp; !z: [4]  ; !a &amp; b &amp; x &amp; y &amp; z | a &amp; !b &amp; x &amp; y &amp; z | a &amp; b &amp; !x &amp; y &amp; z | a &amp; b &amp; x &amp; !y &amp; z | a &amp; b &amp; x &amp; y &amp; !z: [5]  ; a &amp; b &amp; x &amp; y &amp; z: [6]  }&#10; -&gt; &#10;7 : {!a &amp; !b &amp; !c &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !c &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; !c &amp; x &amp; !y &amp; !z | !a &amp; !b &amp; c &amp; !x &amp; !y &amp; !z | !a &amp; b &amp; !c &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !c &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !c &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; c &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; b &amp; c &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; x &amp; y &amp; !z: [6]  ; a &amp; b &amp; c &amp; x &amp; y &amp; z: [7]  }" this="151"/>
				<line interaction="1" text="i (d):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(154))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;7 : {!a &amp; !b &amp; !c &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !c &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; !c &amp; x &amp; !y &amp; !z | !a &amp; !b &amp; c &amp; !x &amp; !y &amp; !z | !a &amp; b &amp; !c &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !c &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !c &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; c &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; b &amp; c &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; x &amp; y &amp; !z: [6]  ; a &amp; b &amp; c &amp; x &amp; y &amp; z: [7]  }&#10; -&gt; &#10;8 : {!a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; !c &amp; !d &amp; x &amp; !y &amp; !z | !a &amp; !b &amp; !c &amp; d &amp; !x &amp; !y &amp; !z | !a &amp; !b &amp; c &amp; !d &amp; !x &amp; !y &amp; !z | !a &amp; b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; !c &amp; d &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; !b &amp; c &amp; d &amp; x &amp; y &amp; z  | ...: [6]  ; !a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; d &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; d &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !d &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; !z: [7]  ; a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; z: [8]  }" this="154"/>
				<line interaction="1" text="i (e):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(157))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;8 : {!a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; z | !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; y &amp; !z | !a &amp; !b &amp; !c &amp; !d &amp; x &amp; !y &amp; !z | !a &amp; !b &amp; !c &amp; d &amp; !x &amp; !y &amp; !z | !a &amp; !b &amp; c &amp; !d &amp; !x &amp; !y &amp; !z | !a &amp; b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z | a &amp; !b &amp; !c &amp; !d &amp; !x &amp; !y &amp; !z: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; !c &amp; d &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; !b &amp; c &amp; d &amp; x &amp; y &amp; z  | ...: [6]  ; !a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; d &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; d &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !d &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; !z: [7]  ; a &amp; b &amp; c &amp; d &amp; x &amp; y &amp; z: [8]  }&#10; -&gt; &#10;9 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z  | ...: [6]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z  | ...: [7]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; !e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; !z: [8]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z: [9]  }" this="157"/>
				<line interaction="1" text="i (f):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(160))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;9 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z  | ...: [5]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z  | ...: [6]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z  | ...: [7]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; !d &amp; e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; !e &amp; x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; !x &amp; y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; !y &amp; z | a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; !z: [8]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z: [9]  }&#10; -&gt; &#10;10 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [6]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [7]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [8]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [9]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f: [10]  }" this="160"/>
				<line interaction="1" text="i (g):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(164))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;10 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [6]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [7]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [8]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f  | ...: [9]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f: [10]  }&#10; -&gt; &#10;11 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [7]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [8]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [9]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [10]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g: [11]  }" this="164"/>
				<line interaction="1" text="i (h):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(167))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;11 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [7]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [8]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [9]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g  | ...: [10]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g: [11]  }&#10; -&gt; &#10;12 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [8]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [9]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [10]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [11]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h: [12]  }" this="167"/>
				<line interaction="1" text="i (j):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(170))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;12 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [8]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [9]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [10]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h  | ...: [11]  ; a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h: [12]  }&#10; -&gt; &#10;13 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; !j: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; j  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h &amp; j  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h &amp; j  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h &amp; j  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [8]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [9]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [10]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [11]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [..." this="170"/>
				<line interaction="1" text="start (a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(175))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;12 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; !j: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; j  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h &amp; j  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h &amp; j  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h &amp; j  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [8]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [9]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [10]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [11]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [12]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: ...&#10; -&gt; &#10;13 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; !j: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; j  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h &amp; j  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h &amp; j  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h &amp; j  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [8]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [9]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [10]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [11]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [12]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: ..." this="175"/>
				<line interaction="1" text="sum (a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j):&#10;cmu.VariabilityAwareTest.earlyJoinTest()V(One(176))&#10;cmu.VariabilityAwareTest.[earlyJoinTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;12 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; !j: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; j  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h &amp; j  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h &amp; j  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h &amp; j  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [8]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [9]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [10]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [11]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [...&#10; -&gt; &#10;13 : {!a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; !j: [1]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; !h &amp; j  | ...: [2]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; !g &amp; h &amp; j  | ...: [3]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; !f &amp; g &amp; h &amp; j  | ...: [4]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; !z &amp; f &amp; g &amp; h &amp; j  | ...: [5]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; !y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [6]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; !x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [7]  ; !a &amp; !b &amp; !c &amp; !d &amp; !e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [8]  ; !a &amp; !b &amp; !c &amp; !d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [9]  ; !a &amp; !b &amp; !c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [10]  ; !a &amp; !b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [11]  ; !a &amp; b &amp; c &amp; d &amp; e &amp; x &amp; y &amp; z &amp; f &amp; g &amp; h &amp; j  | ...: [..." this="176"/>
				<line interaction="1" text="i (z):&#10;cmu.VariabilityAwareTest.testPrint()V(One(191))&#10;cmu.VariabilityAwareTest.[testPrint](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="191"/>
				<line interaction="1" text="i (z):&#10;cmu.VariabilityAwareTest.testPint_2()V(One(206))&#10;cmu.VariabilityAwareTest.[testPint_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="206"/>
				<line interaction="1" text="z (True):&#10;cmu.VariabilityAwareTest.classMethodTest2()V(One(319))&#10;cmu.VariabilityAwareTest.[classMethodTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="319"/>
				<line interaction="1" text="y (True):&#10;cmu.VariabilityAwareTest.classMethodTest2()V(One(320))&#10;cmu.VariabilityAwareTest.[classMethodTest2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!y: [0]  ; y: [1]  }" this="320"/>
				<line interaction="1" text="z (True):&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(329))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="329"/>
				<line interaction="1" text="y (True):&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(330))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!y: [0]  ; y: [1]  }" this="330"/>
				<line interaction="1" text="value (a):&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(335))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [4] )&#10; -&gt; &#10;2 : {!a: [4]  ; a: [14]  }" this="335"/>
				<line interaction="1" text="z (True):&#10;cmu.VariabilityAwareTest.classExtendTest()V(One(402))&#10;cmu.VariabilityAwareTest.[classExtendTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="402"/>
				<line interaction="1" text="y (True):&#10;cmu.VariabilityAwareTest.classExtendTest()V(One(403))&#10;cmu.VariabilityAwareTest.[classExtendTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!y: [0]  ; y: [1]  }" this="403"/>
				<line interaction="1" text="main (x):&#10;cmu.VariabilityAwareTest.classExtendTest()V(One(406))&#10;cmu.VariabilityAwareTest.[classExtendTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;613&gt; )&#10; -&gt; &#10;2 : {!x: &lt;613&gt;  ; x: &lt;617&gt;  }" this="406"/>
				<line interaction="1" text="z (True):&#10;cmu.VariabilityAwareTest.classExtendTest_2()V(One(415))&#10;cmu.VariabilityAwareTest.[classExtendTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!z: [0]  ; z: [1]  }" this="415"/>
				<line interaction="1" text="y (True):&#10;cmu.VariabilityAwareTest.classExtendTest_2()V(One(416))&#10;cmu.VariabilityAwareTest.[classExtendTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!y: [0]  ; y: [1]  }" this="416"/>
				<line interaction="1" text="main (x):&#10;cmu.VariabilityAwareTest.classExtendTest_2()V(One(419))&#10;cmu.VariabilityAwareTest.[classExtendTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;613&gt; )&#10; -&gt; &#10;2 : {!x: &lt;613&gt;  ; x: &lt;617&gt;  }" this="419"/>
				<line interaction="1" text="v (True):&#10;cmu.VariabilityAwareTest.classExtendTest_2()V(One(422))&#10;cmu.VariabilityAwareTest.[classExtendTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!b: [2]  ; b: [10]  }" this="422"/>
				<line interaction="1" text="value (a):&#10;cmu.VariabilityAwareTest.classExtendTest_2()V(One(427))&#10;cmu.VariabilityAwareTest.[classExtendTest_2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [4] )&#10; -&gt; &#10;2 : {!a: [4]  ; a: [14]  }" this="427"/>
				<line interaction="1" text="e (a):&#10;cmu.VariabilityAwareTest.testCatchConditionalException()V(One(441))&#10;cmu.VariabilityAwareTest.[testCatchConditionalException](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a: [0]  ; a: &lt;620&gt;  }" this="441"/>
				<line interaction="1" text="e (a):&#10;cmu.VariabilityAwareTest.testCatchException2()V(One(465))&#10;cmu.VariabilityAwareTest.[testCatchException2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a: [0]  ; a: &lt;620&gt;  }" this="465"/>
				<line interaction="1" text="y (c):&#10;cmu.VariabilityAwareTest.testProjectExample()V(One(494))&#10;cmu.VariabilityAwareTest.[testProjectExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [1] )&#10; -&gt; &#10;2 : {c: [0]  ; !c: [1]  }" this="494"/>
				<line interaction="1" text="x (!c):&#10;cmu.VariabilityAwareTest.testProjectExample()V(One(500))&#10;cmu.VariabilityAwareTest.[testProjectExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : {c: [2]  ; !c: [-1]  }" this="500"/>
				<line interaction="1" text="x (d):&#10;cmu.VariabilityAwareTest.testProjectExample()V(One(503))&#10;cmu.VariabilityAwareTest.[testProjectExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {c: [2]  ; !c: [-1]  }&#10; -&gt; &#10;3 : {d: [0]  ; c &amp; !d: [2]  ; !c &amp; !d: [-1]  }" this="503"/>
				<line interaction="-1" text="x (c &amp; !d):&#10;cmu.VariabilityAwareTest.testProjectExample()V(One(506))&#10;cmu.VariabilityAwareTest.[testProjectExample](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3 : {d: [0]  ; c &amp; !d: [1]  ; !c &amp; !d: [-1]  }&#10; -&gt; &#10;2 : {!c &amp; d | c: [0]  ; !c &amp; !d: [-1]  }" this="506"/>
				<line interaction="1" text="field (x)&#10;cmu.VariabilityAwareTest.testField()V(One(518))&#10;cmu.VariabilityAwareTest.[testField](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(1)&#10;-&gt;&#10;2: {!x:1 ; x:2 }" this="518"/>
				<line interaction="2" text="field (y)&#10;cmu.VariabilityAwareTest.testField()V(One(521))&#10;cmu.VariabilityAwareTest.[testField](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!x:1 ; x:2 }&#10;-&gt;&#10;4: {!x &amp; !y:1 ; x &amp; !y:2 ; !x &amp; y:3 ; x &amp; y:6 }" this="521"/>
				<line interaction="-3" text="field (True)&#10;cmu.VariabilityAwareTest.testField()V(One(523))&#10;cmu.VariabilityAwareTest.[testField](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;4: {!x &amp; !y:1 ; x &amp; !y:2 ; !x &amp; y:3 ; x &amp; y:6 }&#10;-&gt;&#10;1: One(1)" this="523"/>
				<line interaction="1" text="e (a &amp; b):&#10;cmu.VariabilityAwareTest.testDivisionByZero()V(One(536))&#10;cmu.VariabilityAwareTest.[testDivisionByZero](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a | a &amp; !b: [0]  ; a &amp; b: &lt;625&gt;  }" this="536"/>
				<line interaction="1" text="k (a &amp; !b &amp; !c &amp; d | a &amp; !b &amp; c):&#10;cmu.VariabilityAwareTest.devisionByZero(I)I(One(554))&#10;cmu.VariabilityAwareTest.devisionByZeroCall(I)I(One(548))&#10;cmu.VariabilityAwareTest.testDivisionByZeroMultiple()V({!a | a &amp; !b &amp; !c &amp; d | a &amp; !b &amp; c:569 })&#10;cmu.VariabilityAwareTest.[testDivisionByZeroMultiple](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [3] )&#10; -&gt; &#10;2 : {a &amp; !b &amp; c: [1]  ; !a | a &amp; !b &amp; !c | a &amp; b: [3]  }" this="554"/>
				<line interaction="2" text="k (!a):&#10;cmu.VariabilityAwareTest.devisionByZero(I)I(One(556))&#10;cmu.VariabilityAwareTest.devisionByZeroCall(I)I(One(548))&#10;cmu.VariabilityAwareTest.testDivisionByZeroMultiple()V({!a | a &amp; !b &amp; !c &amp; d | a &amp; !b &amp; c:569 })&#10;cmu.VariabilityAwareTest.[testDivisionByZeroMultiple](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2 : {a &amp; !b &amp; c: [1]  ; !a | a &amp; !b &amp; !c | a &amp; b: [3]  }&#10; -&gt; &#10;4 : {a &amp; !b &amp; c: [1]  ; !a &amp; !b &amp; !c &amp; !d | !a &amp; b | a &amp; !b &amp; !c | a &amp; b: [3]  ; !a &amp; !b &amp; !c &amp; d: [4]  ; !a &amp; !b &amp; c: [6]  }" this="556"/>
				<line interaction="1" text="e (a &amp; !b &amp; !c &amp; !d | a &amp; b):&#10;cmu.VariabilityAwareTest.testDivisionByZeroMultiple()V(One(571))&#10;cmu.VariabilityAwareTest.[testDivisionByZeroMultiple](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a | a &amp; !b &amp; !c &amp; d | a &amp; !b &amp; c: [0]  ; a &amp; !b &amp; !c &amp; !d | a &amp; b: &lt;625&gt;  }" this="571"/>
				<line interaction="1" text="e (!a):&#10;cmu.VariabilityAwareTest.testNullPointer()V(One(591))&#10;cmu.VariabilityAwareTest.[testNullPointer](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{a: &lt;613&gt;  ; !a: &lt;628&gt;  }" this="591"/>
				<line interaction="1" text="main (a):&#10;cmu.VariabilityAwareTest.nullpointerException(Ljava/lang/String;)V(One(607))&#10;cmu.VariabilityAwareTest.testNullPointer()V(One(590))&#10;cmu.VariabilityAwareTest.[testNullPointer](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;0&gt; )&#10; -&gt; &#10;2 : {!a: &lt;0&gt;  ; a: &lt;615&gt;  }" this="607"/>
				<line interaction="1" text="e (a):&#10;cmu.VariabilityAwareTest.peerExceptionTest()V(One(630))&#10;cmu.VariabilityAwareTest.[peerExceptionTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{a: &lt;629&gt;  ; !a: &lt;613&gt;  }" this="630"/>
				<line interaction="2" text="e (!a &amp; b | a):&#10;cmu.VariabilityAwareTest.charAtExceptionTest()V(One(656))&#10;cmu.VariabilityAwareTest.[charAtExceptionTest](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!a &amp; !b: &lt;610&gt;  ; a: &lt;627&gt;  ; !a &amp; b: &lt;631&gt;  }" this="656"/>
				<line interaction="1" text="REVERSE (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(664))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!REVERSE:0 ; REVERSE:1 }" this="664"/>
				<line interaction="1" text="LETTERS (True)&#10;cmu.VariabilityAwareTest.&lt;clinit&gt;()V(One(666))&#10;cmu.VariabilityAwareTest.[&lt;clinit&gt;](One(0))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!LETTERS:0 ; LETTERS:1 }" this="666"/>
				<line interaction="1" text="chars (!LETTERS):&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(675))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {LETTERS: [0]  ; !LETTERS: &lt;610&gt;  }" this="675"/>
				<line interaction="1" text="value (!LETTERS)&#10;java.lang.String.&lt;init&gt;([C)V(One(70))&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(676))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {LETTERS:0 ; !LETTERS:638 }" this="676"/>
				<line interaction="2" text="prev (!LETTERS):&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(677))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {LETTERS: [0]  ; !REVERSE &amp; !LETTERS: [48]  ; REVERSE &amp; !LETTERS: [57]  }" this="677"/>
				<line interaction="1" text="i (!LETTERS):&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(678))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {LETTERS: [0]  ; !LETTERS: [1]  }" this="678"/>
				<line interaction="1" text="e (LETTERS):&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(687))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V({!REVERSE | REVERSE &amp; LETTERS:649 })&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!LETTERS: &lt;610&gt;  ; LETTERS: &lt;630&gt;  }" this="687"/>
				<line interaction="1" text="s (True):&#10;cmu.VariabilityAwareTest.exampleMethod()[C(One(696))&#10;cmu.VariabilityAwareTest.exampleExceptions()V(One(675))&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {LETTERS: &lt;611&gt;  ; !LETTERS: &lt;613&gt;  }" this="696"/>
				<line interaction="1" text="old (REVERSE &amp; !LETTERS):&#10;cmu.VariabilityAwareTest.exampleMethod()[C(One(701))&#10;cmu.VariabilityAwareTest.exampleExceptions()V({!LETTERS:675 })&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{REVERSE &amp; !LETTERS: &lt;610&gt;  ; !REVERSE &amp; !LETTERS: [10]  }" this="701"/>
				<line interaction="1" text="i (REVERSE &amp; !LETTERS):&#10;cmu.VariabilityAwareTest.exampleMethod()[C(One(702))&#10;cmu.VariabilityAwareTest.exampleExceptions()V({!LETTERS:675 })&#10;cmu.VariabilityAwareTest.[exampleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!REVERSE | REVERSE &amp; LETTERS: [0]  ; REVERSE &amp; !LETTERS: [1]  }" this="702"/>
				<line interaction="1" text="i (a):&#10;cmu.VariabilityAwareTest.testRuntimeException()V(One(714))&#10;cmu.VariabilityAwareTest.[testRuntimeException](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;0&gt; )&#10; -&gt; &#10;2 : {!a: &lt;0&gt;  ; a: &lt;752&gt;  }" this="714"/>
				<line interaction="1" text="cause (!a)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;java.lang.RuntimeException.&lt;init&gt;(Ljava/lang/String;)V(One(62))&#10;cmu.VariabilityAwareTest.testRuntimeException()V(One(717))&#10;cmu.VariabilityAwareTest.[testRuntimeException](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {a:0 ; !a:879 }" this="717"/>
				<line interaction="1" text="i (True):&#10;cmu.VariabilityAwareTest.testStackOverFlow()V(One(729))&#10;cmu.VariabilityAwareTest.[testStackOverFlow](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {a: [10]  ; !a: [10000]  }" this="729"/>
				<line interaction="1" text="i (True):&#10;cmu.VariabilityAwareTest.testStackOverFlow2()V(One(741))&#10;cmu.VariabilityAwareTest.[testStackOverFlow2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {a: [10]  ; !a: [10000]  }" this="741"/>
				<line interaction="1" text="e (!a):&#10;cmu.VariabilityAwareTest.testStackOverFlow2()V(One(745))&#10;cmu.VariabilityAwareTest.[testStackOverFlow2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {a: [0]  ; !a: &lt;622&gt;  }" this="745"/>
				<line interaction="1" text="i (True):&#10;cmu.VariabilityAwareTest.testMultipleExceptions()V(One(764))&#10;cmu.VariabilityAwareTest.[testMultipleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!a: [2]  ; a: [3]  }" this="764"/>
				<line interaction="1" text="e (True):&#10;cmu.VariabilityAwareTest.testMultipleExceptions()V(One(768))&#10;cmu.VariabilityAwareTest.[testMultipleExceptions](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!a: &lt;626&gt;  ; a: &lt;630&gt;  }" this="768"/>
				<line interaction="1" text="dst (a):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(782))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;610&gt; )&#10; -&gt; &#10;2 : {!a: &lt;610&gt;  ; a: &lt;611&gt;  }" this="782"/>
				<line interaction="1" text="dstBegin (b):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(786))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [2] )&#10; -&gt; &#10;2 : {!b: [2]  ; b: [3]  }" this="786"/>
				<line interaction="1" text="begin (c):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(790))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!c: [0]  ; c: [1]  }" this="790"/>
				<line interaction="1" text="obj (d):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(795))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( &lt;612&gt; )&#10; -&gt; &#10;2 : {d: &lt;624&gt;  ; !d: &lt;612&gt;  }" this="795"/>
				<line interaction="2" text="dstValue (True):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(800))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!c &amp; !d | c &amp; d: [65]  ; c &amp; !d: [66]  ; !c &amp; d: [90]  }" this="800"/>
				<line interaction="2" text="srcValue (True):&#10;cmu.VariabilityAwareTest.testGetChars()V(One(801))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!c &amp; !d | c &amp; d: [65]  ; c &amp; !d: [66]  ; !c &amp; d: [90]  }" this="801"/>
				<line interaction="1" text="? (a):&#10;java.util.Arrays.toString([C)Ljava/lang/String;(One(3409))&#10;cmu.VariabilityAwareTest.testGetChars()V(One(804))&#10;cmu.VariabilityAwareTest.[testGetChars](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [9] )&#10; -&gt; &#10;2 : {!a: [9]  ; a: [10]  }" this="804"/>
				<line interaction="1" text="x (True)&#10;cmu.Main.&lt;init&gt;(ZZ)V(One(830))&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(331))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!x:0 ; x:10 }" this="830"/>
				<line interaction="1" text="cause (a)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;cmu.Main.conditionalException()V(One(843))&#10;cmu.VariabilityAwareTest.testThrowException()V(One(484))&#10;cmu.VariabilityAwareTest.[testThrowException](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a:0 ; a:620 }" this="843"/>
				<line interaction="1" text="cause (a)&#10;java.lang.Throwable.&lt;init&gt;(Ljava/lang/String;)V(One(55))&#10;java.lang.Exception.&lt;init&gt;(Ljava/lang/String;)V(One(66))&#10;cmu.Main.exception(I)V(One(858))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.Main.exception(I)V(One(863))&#10;cmu.VariabilityAwareTest.testCatchException2()V(One(464))&#10;cmu.VariabilityAwareTest.[testCatchException2](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!a:0 ; a:620 }" this="858"/>
				<line interaction="1" text="z (True)&#10;cmu.Main.&lt;init&gt;(ZZ)V(One(867))&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(331))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!z:0 ; z:1 }" this="867"/>
				<line interaction="1" text="y (True)&#10;cmu.Main.&lt;init&gt;(ZZ)V(One(868))&#10;cmu.VariabilityAwareTest.classMethodTest3()V(One(331))&#10;cmu.VariabilityAwareTest.[classMethodTest3](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!y:0 ; y:1 }" this="868"/>
			</coverage>
		</File>
		<File name="Vector.java">
			<coverage>
				<line interaction="1" text="elementData (!GZIP)&#10;java.util.Vector.&lt;init&gt;(II)V(One(131))&#10;java.util.Vector.&lt;init&gt;(I)V(One(144))&#10;java.util.Vector.&lt;init&gt;()V(One(153))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(32))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1082), One(0))" this="131"/>
				<line interaction="1" text="elementData (!GZIP)&#10;java.util.Vector.&lt;init&gt;(II)V(One(131))&#10;java.util.Vector.&lt;init&gt;(I)V(One(144))&#10;java.util.Vector.&lt;init&gt;()V(One(153))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(32))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1082), One(0))" this="144"/>
				<line interaction="1" text="elementData (!GZIP)&#10;java.util.Vector.&lt;init&gt;(II)V(One(131))&#10;java.util.Vector.&lt;init&gt;(I)V(One(144))&#10;java.util.Vector.&lt;init&gt;()V(One(153))&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(32))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1082), One(0))" this="153"/>
				<line interaction="1" text="this$0 (!GZIP)&#10;java.util.Vector$1.&lt;init&gt;(Ljava/util/Vector;)V(One(335))&#10;java.util.Vector.elements()Ljava/util/Enumeration;(One(335))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(274))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1081), One(0))" this="335"/>
				<line interaction="1" text="count (!GZIP)&#10;java.util.Vector$1.nextElement()Ljava/lang/Object;(One(345))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(276))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="345"/>
				<line interaction="1" text="modCount (!GZIP)&#10;java.util.Vector.addElement(Ljava/lang/Object;)V(One(615))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(236))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="615"/>
				<line interaction="1" text="elementCount (!GZIP)&#10;java.util.Vector.addElement(Ljava/lang/Object;)V(One(617))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(236))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="617"/>
			</coverage>
		</File>
		<File name="Vertex.java">
			<coverage>
				<line interaction="1" text="name (STRONGLYCONNECTED___)&#10;GPL.Vertex.assignName(Ljava/lang/String;)LGPL/Vertex;(One(27))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(191))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:2365 }" this="27"/>
				<line interaction="1" text="size (UNDIRECTED___)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;GPL.Vertex.addAdjacent(LGPL/Vertex;)V(One(34))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;)V(One(53))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(65))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___:0 ; UNDIRECTED___:1 }" this="34"/>
				<line interaction="1" text="value (UNDIRECTED___)&#10;java.lang.Integer.&lt;init&gt;(I)V(One(660))&#10;GPL.Vertex.addWeight(I)V(One(45))&#10;GPL.Graph.addEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(71))&#10;GPL.Graph.addAnEdge(LGPL/Vertex;LGPL/Vertex;I)V(One(60))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(97))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!UNDIRECTED___:0 ; UNDIRECTED___:10 }" this="45"/>
				<line interaction="1" text="the_weight (WEIGHTED___ &amp; STRONGLYCONNECTED___):&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(53))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!WEIGHTED___ | WEIGHTED___ &amp; !STRONGLYCONNECTED___: [0]  ; WEIGHTED___ &amp; STRONGLYCONNECTED___: [10]  }" this="53"/>
				<line interaction="1" text="value (WEIGHTED___ &amp; STRONGLYCONNECTED___)&#10;java.lang.Integer.&lt;init&gt;(I)V(One(660))&#10;GPL.Vertex.adjustAdorns(LGPL/Vertex;I)V(One(54))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(219))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V({STRONGLYCONNECTED___:631 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!WEIGHTED___ | WEIGHTED___ &amp; !STRONGLYCONNECTED___:0 ; WEIGHTED___ &amp; STRONGLYCONNECTED___:10 }" this="54"/>
				<line interaction="1" text="adjacentVertices (STRONGLYCONNECTED___)&#10;GPL.Vertex.VertexConstructor()V(One(66))&#10;GPL.Vertex.&lt;init&gt;()V(One(21))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(191))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9993 }" this="66"/>
				<line interaction="1" text="weightsList (STRONGLYCONNECTED___)&#10;GPL.Vertex.VertexConstructor()V(One(67))&#10;GPL.Vertex.&lt;init&gt;()V(One(21))&#10;GPL.Graph.ComputeTranspose(LGPL/Graph;)LGPL/Graph;(One(191))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(163))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:9994 }" this="67"/>
				<line interaction="1" text="s (BFS___ &amp; NUMBER___):&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(105))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ | UNDIRECTED___ &amp; !BFS___ | UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___: [0]  ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: [10]  }" this="105"/>
				<line interaction="1" text="c (UNDIRECTED___ &amp; BFS___ &amp; NUMBER___):&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(108))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ | UNDIRECTED___ &amp; !BFS___ | UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___: [0]  ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: [1]  }" this="108"/>
				<line interaction="1" text="v (UNDIRECTED___ &amp; BFS___ &amp; NUMBER___):&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(110))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({BFS___ &amp; NUMBER___:118 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ | UNDIRECTED___ &amp; !BFS___ | UNDIRECTED___ &amp; BFS___ &amp; !NUMBER___: [0]  ; UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;2280&gt;  }" this="110"/>
				<line interaction="2" text="modCount (BFS___ &amp; NUMBER___)&#10;java.util.LinkedList.linkLast(Ljava/lang/Object;)V(One(147))&#10;java.util.LinkedList.add(Ljava/lang/Object;)Z(One(336))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(115))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!BFS___ | BFS___ &amp; !CONNECTED___:0 ; BFS___ &amp; CONNECTED___:160 }&#10;-&gt;&#10;4: {!BFS___ | BFS___ &amp; !NUMBER___ &amp; !CONNECTED___:0 ; BFS___ &amp; NUMBER___ &amp; !CONNECTED___:1 ; BFS___ &amp; NUMBER___ &amp; CONNECTED___:161 ; BFS___ &amp; !NUMBER___ &amp; CONNECTED___:160 }" this="115"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(573))&#10;java.util.LinkedList.get(I)Ljava/lang/Object;(One(475))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(123))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="123"/>
				<line interaction="1" text="? (BFS___ &amp; NUMBER___):&#10;java.util.LinkedList.node(I)Ljava/util/LinkedList$Node;(One(573))&#10;java.util.LinkedList.remove(I)Ljava/lang/Object;(One(524))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(124))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Vertex.bftNodeSearch(LGPL/WorkSpace;)V(One(125))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(118))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11835&gt;  ; !UNDIRECTED___ &amp; BFS___ &amp; NUMBER___: &lt;11834&gt;  }" this="124"/>
				<line interaction="1" text="visited (STRONGLYCONNECTED___)&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(144))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(167))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="144"/>
				<line interaction="1" text="s (!UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___):&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(146))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({!BFS___ &amp; NUMBER___:121 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ &amp; !BFS___ &amp; !NUMBER___ | !UNDIRECTED___ &amp; BFS___ | UNDIRECTED___: [0]  ; !UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___: [1]  }" this="146"/>
				<line interaction="1" text="c (!UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___):&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(147))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({!BFS___ &amp; NUMBER___:121 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ &amp; !BFS___ &amp; !NUMBER___ | !UNDIRECTED___ &amp; BFS___ | UNDIRECTED___: [0]  ; !UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___: [1]  }" this="147"/>
				<line interaction="1" text="v (!UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___):&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(149))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(151))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V({!BFS___ &amp; NUMBER___:121 })&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.NumberVertices()V({NUMBER___:126 })&#10;GPL.Graph.run(LGPL/Vertex;)V({NUMBER___:647 })&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ &amp; !BFS___ &amp; !NUMBER___ | !UNDIRECTED___ &amp; BFS___ | UNDIRECTED___: [0]  ; !UNDIRECTED___ &amp; !BFS___ &amp; NUMBER___: &lt;2096&gt;  }" this="149"/>
				<line interaction="2" text="s (WEIGHTED___ &amp; !STRONGLYCONNECTED___):&#10;GPL.Vertex.display()V(One(241))&#10;GPL.Graph.display()V(One(83))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(108))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;3 : {!WEIGHTED___ | WEIGHTED___ &amp; STRONGLYCONNECTED___: [0]  ; !UNDIRECTED___ &amp; WEIGHTED___ &amp; !STRONGLYCONNECTED___: [1]  ; UNDIRECTED___ &amp; WEIGHTED___ &amp; !STRONGLYCONNECTED___: [2]  }" this="241"/>
				<line interaction="1" text="i (UNDIRECTED___ &amp; WEIGHTED___):&#10;GPL.Vertex.display()V(One(244))&#10;GPL.Graph.display()V(One(83))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(108))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___ | UNDIRECTED___ &amp; !WEIGHTED___: [0]  ; UNDIRECTED___ &amp; WEIGHTED___: [1]  }" this="244"/>
				<line interaction="1" text="s (True):&#10;GPL.Vertex.display()V(One(248))&#10;GPL.Graph.display()V(One(83))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(108))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;{!UNDIRECTED___: [0]  ; UNDIRECTED___: [10]  }" this="248"/>
				<line interaction="1" text="i (UNDIRECTED___):&#10;GPL.Vertex.display()V(One(252))&#10;GPL.Graph.display()V(One(83))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(108))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : {!UNDIRECTED___: [0]  ; UNDIRECTED___: [1]  }" this="252"/>
			</coverage>
		</File>
		<File name="WorkSpaceTranspose.java">
			<coverage>
				<line interaction="1" text="strongComponentNumber (STRONGLYCONNECTED___)&#10;GPL.WorkSpaceTranspose.preVisitAction(LGPL/Vertex;)V(One(31))&#10;GPL.Vertex.dftNodeSearch(LGPL/WorkSpace;)V(One(136))&#10;GPL.Graph.nodeSearch(LGPL/Vertex;LGPL/WorkSpace;)V(One(121))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(109))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(167))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:45 }" this="31"/>
				<line interaction="1" text="SCCCounter (STRONGLYCONNECTED___)&#10;GPL.WorkSpaceTranspose.nextRegionAction(LGPL/Vertex;)V(One(40))&#10;GPL.Graph.GraphSearch(LGPL/WorkSpace;)V(One(108))&#10;GPL.Graph.StrongComponents()LGPL/Graph;(One(167))&#10;GPL.Graph.run(LGPL/Vertex;)V(One(631))&#10;GPL.Main.mainBody___([Ljava/lang/String;)V(One(104))&#10;GPL.Main.main([Ljava/lang/String;)V(One(30))&#10;cmu.testprograms.GPLTest.run(Ljava/lang/String;)V(One(31))&#10;cmu.testprograms.GPLTest.network4Test()V(One(26))&#10;cmu.testprograms.GPLTest.[network4Test](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: {!STRONGLYCONNECTED___:0 ; STRONGLYCONNECTED___:1 }" this="40"/>
			</coverage>
		</File>
		<File name="XStreamSerializer.java">
			<coverage>
				<line interaction="1" text="_xstreams (USE_XSTREAM)&#10;org.prevayler.foundation.serialization.XStreamSerializer.&lt;init&gt;()V(One(27))&#10;cmu.testprograms.PrevaylerTest.configureFactory(Lorg/prevayler/PrevaylerFactory;)V(One(248))&#10;cmu.testprograms.PrevaylerTest.runNumberKeeper()V(One(69))&#10;cmu.testprograms.PrevaylerTest.[runNumberKeeper](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(USE_XSTREAM, One(1764), One(0))" this="27"/>
			</coverage>
		</File>
		<File name="ZipEntry.java">
			<coverage>
				<line interaction="1" text="method (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.&lt;init&gt;(Ljava/lang/String;)V(One(44))&#10;net.sf.zipme.ZipInputStream.createZipEntry(Ljava/lang/String;)Lnet/sf/zipme/ZipEntry;(One(319))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(119))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(-1), One(0))" this="44"/>
				<line interaction="1" text="name (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.&lt;init&gt;(Ljava/lang/String;)V(One(76))&#10;net.sf.zipme.ZipInputStream.createZipEntry(Ljava/lang/String;)Lnet/sf/zipme/ZipEntry;(One(319))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(119))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2269), One(0))" this="76"/>
				<line interaction="1" text="dostime (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.setDOSTime(I)V(One(101))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(127))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(1188452728), One(0))" this="101"/>
				<line interaction="1" text="known (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.setDOSTime(I)V(One(102))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(127))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(8), One(0))" this="102"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.Calendar.setTime(Ljava/util/Date;)V(One(1106))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(128))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="128"/>
				<line interaction="1" text="dostime (!GZIP)&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(129))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1188452728), One(0))" this="129"/>
				<line interaction="1" text="areFieldsSet (!GZIP)&#10;java.util.Calendar.setFieldsComputed(I)V(One(1617))&#10;java.util.GregorianCalendar.computeFields()V(One(2251))&#10;java.util.Calendar.setTimeInMillis(J)V(One(1140))&#10;java.util.GregorianCalendar.&lt;init&gt;(Ljava/util/TimeZone;Ljava/util/Locale;)V(One(621))&#10;java.util.Calendar.createCalendar(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1030))&#10;java.util.Calendar.getInstance(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;(One(1013))&#10;net.sf.zipme.ZipEntry.getCalendar()Ljava/util/Calendar;(One(170))&#10;net.sf.zipme.ZipEntry.setTime(J)V(One(126))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(165))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="170"/>
				<line interaction="1" text="size (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.setSize(J)V(One(183))&#10;net.sf.zipme.ZipInputStream.readDataDescr()V(One(170))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(270))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(4), One(0))" this="183"/>
				<line interaction="-1" text="compressedSize (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.setCompressedSize(J)V(One(200))&#10;net.sf.zipme.ZipInputStream.readDataDescr()V({!GZIP &amp; !DerivativeExtractCRC | GZIP:171 })&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(270))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: {!GZIP &amp; !DerivativeExtractCRC:-1 ; !GZIP &amp; DerivativeExtractCRC | GZIP:0 }&#10;-&gt;&#10;1: One(6)" this="200"/>
				<line interaction="1" text="crc (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipEntry.setCrc(J)V(One(220))&#10;net.sf.zipme.ZipInputStream.readDataDescr()V(One(167))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(270))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(-1), One(0))" this="220"/>
				<line interaction="1" text="known (!GZIP &amp; DerivativeCompressCRC)&#10;net.sf.zipme.ZipEntry.setCrc(J)V(One(221))&#10;net.sf.zipme.ZipOutputStream.hook42__role__DerivativeCompressCRC()V(One(372))&#10;net.sf.zipme.ZipOutputStream.hook42()V(One(380))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(227))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(25), One(0))&#10;-&gt;&#10;3: Choice(!GZIP &amp; DerivativeCompressCRC, One(29), Choice(!GZIP, One(25), One(0)))" this="221"/>
				<line interaction="1" text="known (!GZIP)&#10;net.sf.zipme.ZipEntry.parseExtra()V(One(275))&#10;net.sf.zipme.ZipEntry.getTime()J(One(141))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(164))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(16), One(0))" this="275"/>
			</coverage>
		</File>
		<File name="ZipInputStream.java">
			<coverage>
				<line interaction="1" text="avail (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.fillBuf()V(One(33))&#10;net.sf.zipme.ZipInputStream.readLeByte()I(One(63))&#10;net.sf.zipme.ZipInputStream.readLeShort()I(One(74))&#10;net.sf.zipme.ZipInputStream.readLeInt()I(One(81))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(91))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(4096), One(0))" this="33"/>
				<line interaction="1" text="flags (!GZIP &amp; DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(99))&#10;net.sf.zipme.ZipInputStream.getNextEntry__role__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(149))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(158))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; DerivativeExtractCRC, One(8), One(0))" this="99"/>
				<line interaction="1" text="method (!GZIP &amp; DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(100))&#10;net.sf.zipme.ZipInputStream.getNextEntry__role__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(149))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(158))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; DerivativeExtractCRC, One(8), One(0))" this="100"/>
				<line interaction="1" text="value (!GZIP &amp; !DerivativeExtractCRC)&#10;java.lang.String.&lt;init&gt;([BII)V(One(143))&#10;java.lang.String.&lt;init&gt;([B)V(One(151))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(114))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2271), One(0))" this="114"/>
				<line interaction="1" text="entry (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(119))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; DerivativeExtractCRC, One(2267), One(0))&#10;-&gt;&#10;3: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2272), Choice(!GZIP &amp; DerivativeExtractCRC, One(2267), One(0)))" this="119"/>
				<line interaction="-1" text="len (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(135))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: Choice(!GZIP &amp; !DerivativeExtractCRC, One(4096), Choice(!GZIP &amp; DerivativeExtractCRC, One(4028), One(0)))&#10;-&gt;&#10;2: Choice(!GZIP, One(4028), One(0))" this="135"/>
				<line interaction="-1" text="avail (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(136))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC, One(4028), One(0))&#10;-&gt;&#10;1: One(0)" this="136"/>
				<line interaction="1" text="csize (!GZIP)&#10;net.sf.zipme.ZipInputStream.readDataDescr()V(One(168))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(270))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(6), One(0))" this="168"/>
				<line interaction="1" text="size (!GZIP)&#10;net.sf.zipme.ZipInputStream.readDataDescr()V(One(169))&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(270))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="169"/>
				<line interaction="1" text="avail (!GZIP)&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(268))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4022), One(0))" this="268"/>
				<line interaction="-2" text="entry (!GZIP)&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(294))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;3: Choice(!GZIP &amp; !DerivativeExtractCRC, One(2272), Choice(!GZIP &amp; DerivativeExtractCRC, One(2267), One(0)))&#10;-&gt;&#10;1: One(0)" this="294"/>
				<line interaction="1" text="entryAtEOF (!GZIP)&#10;net.sf.zipme.ZipInputStream.read([BII)I(One(295))&#10;net.sf.zipme.InflaterInputStream.read([B)I(One(138))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(127))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="295"/>
				<line interaction="1" text="crc (!GZIP)&#10;net.sf.zipme.ZipInputStream.&lt;init&gt;(Ljava/io/InputStream;)V(One(401))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(48))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(2262), One(0))" this="401"/>
			</coverage>
		</File>
		<File name="ZipOutputStream.java">
			<coverage>
				<line interaction="1" text="entries (!GZIP)&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(32))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1081), One(0))" this="32"/>
				<line interaction="1" text="zipComment (!GZIP)&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(42))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1083), One(0))" this="42"/>
				<line interaction="1" text="defaultMethod (!GZIP)&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(44))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(8), One(0))" this="44"/>
				<line interaction="1" text="flags (!GZIP)&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(166))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(8), One(0))" this="166"/>
				<line interaction="1" text="curMethod (!GZIP)&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(169))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(8), One(0))" this="169"/>
				<line interaction="1" text="offset (!GZIP)&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(199))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(68), One(0))" this="199"/>
				<line interaction="1" text="curEntry (!GZIP)&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(200))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1088), One(0))" this="200"/>
				<line interaction="1" text="elementCount (!GZIP)&#10;java.util.Vector.addElement(Ljava/lang/Object;)V(One(617))&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(236))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="236"/>
				<line interaction="-1" text="curEntry (!GZIP)&#10;net.sf.zipme.ZipOutputStream.closeEntry()V(One(237))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(271))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1088), One(0))&#10;-&gt;&#10;1: One(0)" this="237"/>
				<line interaction="1" text="size (!GZIP)&#10;net.sf.zipme.ZipOutputStream.write([BII)V(One(258))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(101))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(4), One(0))" this="258"/>
				<line interaction="1" text="this$0 (!GZIP)&#10;java.util.Vector$1.&lt;init&gt;(Ljava/util/Vector;)V(One(335))&#10;java.util.Vector.elements()Ljava/util/Enumeration;(One(335))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(274))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1081), One(0))" this="274"/>
				<line interaction="1" text="count (!GZIP)&#10;java.util.Vector$1.nextElement()Ljava/lang/Object;(One(345))&#10;net.sf.zipme.ZipOutputStream.finish()V(One(276))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1), One(0))" this="276"/>
				<line interaction="-1" text="entries (!GZIP)&#10;net.sf.zipme.ZipOutputStream.finish()V(One(330))&#10;net.sf.zipme.DeflaterOutputStream.close()V(One(115))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(104))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP, One(1081), One(0))&#10;-&gt;&#10;1: One(0)" this="330"/>
				<line interaction="1" text="crc (!GZIP)&#10;net.sf.zipme.ZipOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(401))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(!GZIP, One(1084), One(0))" this="401"/>
			</coverage>
		</File>
		<File name="ZipTest.java">
			<coverage>
				<line interaction="1" text="entry (!GZIP):&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(!GZIP &amp; DerivativeExtractCRC, One( &lt;2267&gt; ), One( &lt;2272&gt; ))" this="49"/>
				<line interaction="1" text="outStream1 (True):&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1 : One( [0] )&#10; -&gt; &#10;2 : Choice(GZIP, One( &lt;716&gt; ), One( &lt;1056&gt; ))" this="84"/>
				<line interaction="1" text="size (!GZIP)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;net.sf.zipme.ZipTest$1.write(I)V(One(87))&#10;net.sf.zipme.ZipOutputStream.writeLeShort(I)V(One(107))&#10;net.sf.zipme.ZipOutputStream.writeLeInt(I)V(One(115))&#10;net.sf.zipme.ZipOutputStream.putNextEntry(Lnet/sf/zipme/ZipEntry;)V(One(174))&#10;net.sf.zipme.ZipTest.getZipOutStream__before__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(22))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(42))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(10)&#10;-&gt;&#10;2: Choice(!GZIP, One(11), One(10))" this="87"/>
				<line interaction="1" text="size (GZIP)&#10;java.util.ArrayList.add(Ljava/lang/Object;)Z(One(441))&#10;net.sf.zipme.ZipTest$1.write([B)V(One(95))&#10;net.sf.zipme.GZIPOutputStream.&lt;init&gt;(Ljava/io/OutputStream;I)V(One(36))&#10;net.sf.zipme.GZIPOutputStream.&lt;init&gt;(Ljava/io/OutputStream;)V(One(21))&#10;net.sf.zipme.ZipTest.getZipOutStream__role__GZIP(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(29))&#10;net.sf.zipme.ZipTest.getZipOutStream(Ljava/io/OutputStream;Ljava/io/File;)Lnet/sf/zipme/DeflaterOutputStream;(One(40))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(84))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;1: One(0)&#10;-&gt;&#10;2: Choice(GZIP, One(1), One(0))" this="95"/>
				<line interaction="1" text="inStream2 (True):&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;Choice(GZIP, One( &lt;2228&gt; ), One( &lt;2254&gt; ))" this="109"/>
				<line interaction="1" text="index (!GZIP &amp; !DerivativeExtractCRC)&#10;net.sf.zipme.ZipTest$2.read()I(One(117))&#10;java.io.InputStream.read([BII)I(One(179))&#10;net.sf.zipme.ZipInputStream.fillBuf()V(One(33))&#10;net.sf.zipme.ZipInputStream.readLeByte()I(One(63))&#10;net.sf.zipme.ZipInputStream.readLeShort()I(One(74))&#10;net.sf.zipme.ZipInputStream.readLeInt()I(One(81))&#10;net.sf.zipme.ZipInputStream.getNextEntry__before__DerivativeExtractCRC()Lnet/sf/zipme/ZipEntry;(One(91))&#10;net.sf.zipme.ZipInputStream.getNextEntry()Lnet/sf/zipme/ZipEntry;(One(160))&#10;net.sf.zipme.ZipTest.getZipInStream__before__GZIP(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(49))&#10;net.sf.zipme.ZipTest.getZipInStream(Ljava/io/InputStream;)Lnet/sf/zipme/InflaterInputStream;(One(66))&#10;net.sf.zipme.ZipTest.main([Ljava/lang/String;)V(One(109))&#10;cmu.testprograms.ZipMeTest.runZipMe()V(One(15))&#10;cmu.testprograms.ZipMeTest.[runZipMe](One(0))&#10;java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(One(-1))&#10;gov.nasa.jpf.util.test.TestJPF.runTestMethod([Ljava/lang/String;)V(One(649))&#10;gov.nasa.jpf.util.test.TestJPF.[runTestMethod]&#10;2: Choice(!GZIP &amp; !DerivativeExtractCRC | GZIP, One(10), One(196))&#10;-&gt;&#10;3: Choice(!GZIP &amp; !DerivativeExtractCRC, One(11), Choice(!GZIP &amp; !DerivativeExtractCRC | GZIP, One(10), One(196)))" this="117"/>
			</coverage>
		</File>
	</root>
